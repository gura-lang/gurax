#!/usr/bin/env gurax
import(util.tester) {*}

TestCase('PUnit') {
	exprs = [
		`(~a)
		`(-a)
		`(!a)
		`(+a)
		`(a%)
		`(a%%)
		`(a*)
		`(a+)
		`(a?)
		`(a..)
		`(a + b)
		`(a & b)
		`(a && b)
		`(a <=> b)
		`(a |+| b)
		`(a as b)
		`(a in b)
		`(a |^| b)
		`(a |-| b)
		`(a / b)
		`(a |.| b)
		`(a == b)
		`(a |*| b)
		`(a >= b)
		`(a > b)
		`(a |&| b)
		`(a <= b)
		`(a < b)
		`(a % b)
		`(a %% b)
		`(a * b)
		`(a !=  b)
		`(a | b)
		`(a || b)
		`(a => b)
		`(a ** b)
		`(a .. b)
		`(a << b)
		`(a >> b)
		`(a - b)
		`(a ||| b)
		`(a ^ b)
		`(a && b)
		`(a && b && c)
		`(a && (b && c))
		`(a || b)
		`(a || b || c)
		`(a || (b || c))
		`(false && false)
	]
	exprs::PrintPUnitWithLabel()
}

TestCase('Error Message') {
	Tester(`(+nil))
	Tester(`(nil*))
	Tester(`(nil + nil))
	Tester(`math.Sin(nil))
	Tester(`math.Atan2(nil, nil))
}

TestCase('Operator !') {
	Tester(`(!nil))
	Tester(`(!false))
	Tester(`(!true))
	Tester(`(!0))
	Tester(`(!1))
	Tester(`(!''))
	Tester(`(![]))
}

TestCase('Operator ..') {
	Tester(`(1..10))
	Tester(`(1..1))
	Tester(`(1..0))
	Tester(`(1..-10))
}

TestCase('Operators && and ||') {
	Tester(`(true && true))
	Tester(`(true && false))
	Tester(`(false && true))
	Tester(`(false && false))
	Tester(`(true || true))
	Tester(`(true || false))
	Tester(`(false || true))
	Tester(`(false || false))
	Tester(`('hello' && 'world'))
	Tester(`('hello' && false))
	Tester(`(false && 'hello'))
	Tester(`('hello' && true))
	Tester(`(true && 'hello'))
	Tester(`('hello' || 'world'))
	Tester(`('hello' || false))
	Tester(`(false || 'hello'))
	Tester(`('hello' || true))
	Tester(`(true || 'hello'))
}

TestCase('Comparison with nil') {
	Tester(`(nil == nil))
	Tester(`(nil == 0))
	Tester(`(0 == nil))
	Tester(`(nil != nil))
	Tester(`(nil != 0))
	Tester(`(0 != nil))
}
TestCase('Operator =>') {
	Tester(`(3 => 4))
	Tester(`(`hoge => 4))
	Tester(`('hoge' => 4))
	Tester(`('hoge' => [3, 4, 5]))
	Tester(`(['hoge', 'foo', 'bar'] => 4))
	Tester(`(['hoge', 'foo', 'bar'] => [3, 4, 5]))
}

TestCase('Operator as') {
	
}