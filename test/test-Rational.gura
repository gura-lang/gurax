#!/usr/bin/env gurax
import(util.tester) {*}

TestCase('Property') {
	PrintPropSlots(Rational)
}

TestCase('Constructor') {
	Tester(`Rational())
	Tester(`Rational(3))
	Tester(`Rational(-3))
	Tester(`Rational(3, 4))
	Tester(`Rational(-3, 4))
	Tester(`Rational(3, -4))
	Tester(`Rational(-3, -4))
	Tester(`Rational(12, 8))
	Tester(`Rational(10000, 10000))
	Tester(`Rational(10000, 10001))
	Tester(`Rational(1, 0x1_0000_0000))
	Tester(`Rational(0x0010_0000_0000_0000))
	Tester(`Rational(0x0008_0000_0000_0000))
	Tester(`Rational(0x0004_0000_0000_0000))
	Tester(`Rational(-0x0010_0000_0000_0000))
	Tester(`Rational(-0x0008_0000_0000_0000))
	Tester(`Rational(-0x0004_0000_0000_0000))
	Tester(`Rational(1, 0x0010_0000_0000_0000))
	Tester(`Rational(1, 0x0008_0000_0000_0000))
	Tester(`Rational(1, 0x0004_0000_0000_0000))
	Tester(`Rational(-1, 0x0010_0000_0000_0000))
	Tester(`Rational(-1, 0x0008_0000_0000_0000))
	Tester(`Rational(-1, 0x0004_0000_0000_0000))
	Tester(`Rational(0x0010_0000_0000_0000, 0x0010_0000_0000_0000))
	Tester(`Rational(0x0008_0000_0000_0000, 0x0008_0000_0000_0000))
	Tester(`Rational(0x0004_0000_0000_0000, 0x0004_0000_0000_0000))
	Tester(`Rational(-0x0010_0000_0000_0000, 0x0010_0000_0000_0000))
	Tester(`Rational(-0x0008_0000_0000_0000, 0x0008_0000_0000_0000))
	Tester(`Rational(-0x0004_0000_0000_0000, 0x0004_0000_0000_0000))
	Tester(`Rational(0x0008_0000_0000_0000, 0x0010_0000_0000_0000))
	Tester(`Rational(0x0004_0000_0000_0000, 0x0008_0000_0000_0000))
	Tester(`Rational(0x0002_0000_0000_0000, 0x0004_0000_0000_0000))
	Tester(`Rational(-0x0008_0000_0000_0000, 0x0010_0000_0000_0000))
	Tester(`Rational(-0x0004_0000_0000_0000, 0x0008_0000_0000_0000))
	Tester(`Rational(-0x0002_0000_0000_0000, 0x0004_0000_0000_0000))
}

TestCase('r-suffix') {
	Tester(`0r)
	Tester(`(3r))
	Tester(`(-3r))
	Tester(`(3r / 4))
	Tester(`(-3r / 4))
	Tester(`(3r / (-4)))
	Tester(`(-3r / (-4)))
	Tester(`(12r / 8))
	Tester(`(10000r / 10000))
	Tester(`(10000r / 10001))
	Tester(`(1r / 0x1_0000_0000))
	Tester(`(0x0010_0000_0000_0000r))
	Tester(`(0x0008_0000_0000_0000r))
	Tester(`(0x0004_0000_0000_0000r))
	Tester(`(-0x0010_0000_0000_0000r))
	Tester(`(-0x0008_0000_0000_0000r))
	Tester(`(-0x0004_0000_0000_0000r))
	Tester(`(1r / 0x0010_0000_0000_0000))
	Tester(`(1r / 0x0008_0000_0000_0000))
	Tester(`(1r / 0x0004_0000_0000_0000))
	Tester(`(-1r / 0x0010_0000_0000_0000))
	Tester(`(-1r / 0x0008_0000_0000_0000))
	Tester(`(-1r / 0x0004_0000_0000_0000))
	Tester(`(0x0010_0000_0000_0000r / 0x0010_0000_0000_0000))
	Tester(`(0x0008_0000_0000_0000r / 0x0008_0000_0000_0000))
	Tester(`(0x0004_0000_0000_0000r / 0x0004_0000_0000_0000))
	Tester(`(-0x0010_0000_0000_0000r / 0x0010_0000_0000_0000))
	Tester(`(-0x0008_0000_0000_0000r / 0x0008_0000_0000_0000))
	Tester(`(-0x0004_0000_0000_0000r / 0x0004_0000_0000_0000))
	Tester(`(0x0008_0000_0000_0000r / 0x0010_0000_0000_0000))
	Tester(`(0x0004_0000_0000_0000r / 0x0008_0000_0000_0000))
	Tester(`(0x0002_0000_0000_0000r / 0x0004_0000_0000_0000))
	Tester(`(-0x0008_0000_0000_0000r / 0x0010_0000_0000_0000))
	Tester(`(-0x0004_0000_0000_0000r / 0x0008_0000_0000_0000))
	Tester(`(-0x0002_0000_0000_0000r / 0x0004_0000_0000_0000))
}

TestCase('Rational#Regulate()') {
	Tester(`Rational(36, 96).Regulate())
}

TestCase('Property access') {
	Tester(`Rational(3, 4)) {|rat|
		Tester(`rat.numer)
		Tester(`rat.denom)
	}
	Tester(`Rational(-3, 4)) {|rat|
		Tester(`rat.numer)
		Tester(`rat.denom)
	}
	Tester(`Rational(3, -4)) {|rat|
		Tester(`rat.numer)
		Tester(`rat.denom)
	}
	Tester(`Rational(-3, -4)) {|rat|
		Tester(`rat.numer)
		Tester(`rat.denom)
	}
}

TestCase('Operator +a') {
	Tester(`(+5r))
	Tester(`(+(5r / 7)))
	Tester(`(+(-5r)))
	Tester(`(+(-5r / 7)))
}

TestCase('Operator -a') {
	Tester(`(-5r))
	Tester(`(-(5r / 7)))
	Tester(`(-(-5r)))
	Tester(`(-(-5r / 7)))
}

TestCase('Operator a + b') {
	Tester(`(3r + 5r))
	Tester(`(3r + 5))
	Tester(`(3 + 5r))
	Tester(`((5r / 6) + (7r / 8)))
	Tester(`((5r / 6) + 3))
	Tester(`(3 + (5r / 6)))
}

TestCase('Operator a - b') {
	Tester(`(3r - 5r))
	Tester(`(3r - 5))
	Tester(`(3 - 5r))
	Tester(`((5r / 6) - (7r / 8)))
	Tester(`((5r / 6) - 3))
	Tester(`(3 - (5r / 6)))
}

TestCase('Operator a * b') {
	Tester(`(3r * 5r))
	Tester(`(3r * 5))
	Tester(`(3 * 5r))
	Tester(`((5r / 6) * (7r / 8)))
	Tester(`((5r / 6) * 3))
	Tester(`(3 * (5r / 6)))
}

TestCase('Operator a / b') {
	Tester(`(3r / 5r))
	Tester(`(3r / 5))
	Tester(`(3 / 5r))
	Tester(`((5r / 6) / (7r / 8)))
	Tester(`((5r / 6) / 3))
	Tester(`(3 / (5r / 6)))
	Tester(`(3r / 0r))
}

TestCase('Operator a == b') {
	Tester(`((3 / 5r) == (6 / 7r)))
	Tester(`((6 / 7r) == (6 / 7r)))
	Tester(`((6 / 7r) == (3 / 5r)))
	Tester(`((5 / 2r) == 3))
	Tester(`((6 / 2r) == 3))
	Tester(`((7 / 2r) == 3))
	Tester(`(3 == (5 / 2r)))
	Tester(`(3 == (6 / 2r)))
	Tester(`(3 == (7 / 2r)))
}

TestCase('Operator a != b') {
	Tester(`((3 / 5r) != (6 / 7r)))
	Tester(`((6 / 7r) != (6 / 7r)))
	Tester(`((6 / 7r) != (3 / 5r)))
	Tester(`((5 / 2r) != 3))
	Tester(`((6 / 2r) != 3))
	Tester(`((7 / 2r) != 3))
	Tester(`(3 != (5 / 2r)))
	Tester(`(3 != (6 / 2r)))
	Tester(`(3 != (7 / 2r)))
}

TestCase('Operator a < b') {
	Tester(`((3 / 5r) < (6 / 7r)))
	Tester(`((6 / 7r) < (6 / 7r)))
	Tester(`((6 / 7r) < (3 / 5r)))
	Tester(`((5 / 2r) < 3))
	Tester(`((6 / 2r) < 3))
	Tester(`((7 / 2r) < 3))
	Tester(`(3 < (5 / 2r)))
	Tester(`(3 < (6 / 2r)))
	Tester(`(3 < (7 / 2r)))
}

TestCase('Operator a > b') {
	Tester(`((3 / 5r) > (6 / 7r)))
	Tester(`((6 / 7r) > (6 / 7r)))
	Tester(`((6 / 7r) > (3 / 5r)))
	Tester(`((5 / 2r) > 3))
	Tester(`((6 / 2r) > 3))
	Tester(`((7 / 2r) > 3))
	Tester(`(3 > (5 / 2r)))
	Tester(`(3 > (6 / 2r)))
	Tester(`(3 > (7 / 2r)))
}

TestCase('Operator a <= b') {
	Tester(`((3 / 5r) <= (6 / 7r)))
	Tester(`((6 / 7r) <= (6 / 7r)))
	Tester(`((6 / 7r) <= (3 / 5r)))
	Tester(`((5 / 2r) <= 3))
	Tester(`((6 / 2r) <= 3))
	Tester(`((7 / 2r) <= 3))
	Tester(`(3 <= (5 / 2r)))
	Tester(`(3 <= (6 / 2r)))
	Tester(`(3 <= (7 / 2r)))
}

TestCase('Operator a >= b') {
	Tester(`((3 / 5r) >= (6 / 7r)))
	Tester(`((6 / 7r) >= (6 / 7r)))
	Tester(`((6 / 7r) >= (3 / 5r)))
	Tester(`((5 / 2r) >= 3))
	Tester(`((6 / 2r) >= 3))
	Tester(`((7 / 2r) >= 3))
	Tester(`(3 >= (5 / 2r)))
	Tester(`(3 >= (6 / 2r)))
	Tester(`(3 >= (7 / 2r)))
}
