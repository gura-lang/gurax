#!/usr/bin/env gurax
//==============================================================================
// test-xml.gura
//==============================================================================
import(util.tester) {*}
import(xml)

sampleText1 = R'''
<?xml version="1.0"?>
<PurchaseOrder PurchaseOrderNumber="99503" OrderDate="1999-10-20">
  <!-- Address #1 -->
  <Address Type="Shipping">
    <Name>Ellen Adams</Name>
    <Street>123 Maple Street</Street>
    <City>Mill Valley</City>
    <State>CA</State>
    <Zip>10999</Zip>
    <Country>USA</Country>
  </Address>
  <!-- Address #2 -->
  <Address Type="Billing">
    <Name>Tai Yee</Name>
    <Street>8 Oak Avenue</Street>
    <City>Old Town</City>
    <State>PA</State>
    <Zip>95819</Zip>
    <Country>USA</Country>
  </Address>
  <DeliveryNotes>Please leave packages in shed by driveway.</DeliveryNotes>
  <Items>
    <Item PartNumber="872-AA">
      <ProductName>Lawnmower</ProductName>
      <Quantity>1</Quantity>
      <USPrice>148.95</USPrice>
      <Comment>Confirm this is electric</Comment>
    </Item>
    <Item PartNumber="926-AA">
      <ProductName>Baby Monitor</ProductName>
      <Quantity>2</Quantity>
      <USPrice>39.98</USPrice>
      <ShipDate>1999-05-21</ShipDate>
    </Item>
  </Items>
</PurchaseOrder>
'''

sampleText2 = R'''
<?xml version="1.0" encoding="UTF-8"?>
<SoftwareEngineer>
<empl id="01">
<name>
<projectname> Man-router</projectname>
<Workingdomain> machine learning</Workingdomain>
</name>
<Enddate>
<entities><![CDATA[
This is the local project with the fibre optics.
All the statistical manipulation is performed. Example. '"&<> and submission date 12/12/2020
]]></entities>
</Enddate>
</empl>
</SoftwareEngineer>
'''

// https://www.w3schools.com/
sampleText3 = R'''
<?xml version="1.0" encoding="UTF-8"?>
<CATALOG>
  <CD>
    <TITLE>Empire Burlesque</TITLE>
    <ARTIST>Bob Dylan</ARTIST>
    <COUNTRY>USA</COUNTRY>
    <COMPANY>Columbia</COMPANY>
    <PRICE>10.90</PRICE>
    <YEAR>1985</YEAR>
  </CD>
  <CD>
    <TITLE>Hide your heart</TITLE>
    <ARTIST>Bonnie Tyler</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>CBS Records</COMPANY>
    <PRICE>9.90</PRICE>
    <YEAR>1988</YEAR>
  </CD>
  <CD>
    <TITLE>Greatest Hits</TITLE>
    <ARTIST>Dolly Parton</ARTIST>
    <COUNTRY>USA</COUNTRY>
    <COMPANY>RCA</COMPANY>
    <PRICE>9.90</PRICE>
    <YEAR>1982</YEAR>
  </CD>
  <CD>
    <TITLE>Still got the blues</TITLE>
    <ARTIST>Gary Moore</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>Virgin records</COMPANY>
    <PRICE>10.20</PRICE>
    <YEAR>1990</YEAR>
  </CD>
  <CD>
    <TITLE>Eros</TITLE>
    <ARTIST>Eros Ramazzotti</ARTIST>
    <COUNTRY>EU</COUNTRY>
    <COMPANY>BMG</COMPANY>
    <PRICE>9.90</PRICE>
    <YEAR>1997</YEAR>
  </CD>
  <CD>
    <TITLE>One night only</TITLE>
    <ARTIST>Bee Gees</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>Polydor</COMPANY>
    <PRICE>10.90</PRICE>
    <YEAR>1998</YEAR>
  </CD>
  <CD>
    <TITLE>Sylvias Mother</TITLE>
    <ARTIST>Dr.Hook</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>CBS</COMPANY>
    <PRICE>8.10</PRICE>
    <YEAR>1973</YEAR>
  </CD>
  <CD>
    <TITLE>Maggie May</TITLE>
    <ARTIST>Rod Stewart</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>Pickwick</COMPANY>
    <PRICE>8.50</PRICE>
    <YEAR>1990</YEAR>
  </CD>
  <CD>
    <TITLE>Romanza</TITLE>
    <ARTIST>Andrea Bocelli</ARTIST>
    <COUNTRY>EU</COUNTRY>
    <COMPANY>Polydor</COMPANY>
    <PRICE>10.80</PRICE>
    <YEAR>1996</YEAR>
  </CD>
  <CD>
    <TITLE>When a man loves a woman</TITLE>
    <ARTIST>Percy Sledge</ARTIST>
    <COUNTRY>USA</COUNTRY>
    <COMPANY>Atlantic</COMPANY>
    <PRICE>8.70</PRICE>
    <YEAR>1987</YEAR>
  </CD>
  <CD>
    <TITLE>Black angel</TITLE>
    <ARTIST>Savage Rose</ARTIST>
    <COUNTRY>EU</COUNTRY>
    <COMPANY>Mega</COMPANY>
    <PRICE>10.90</PRICE>
    <YEAR>1995</YEAR>
  </CD>
  <CD>
    <TITLE>1999 Grammy Nominees</TITLE>
    <ARTIST>Many</ARTIST>
    <COUNTRY>USA</COUNTRY>
    <COMPANY>Grammy</COMPANY>
    <PRICE>10.20</PRICE>
    <YEAR>1999</YEAR>
  </CD>
  <CD>
    <TITLE>For the good times</TITLE>
    <ARTIST>Kenny Rogers</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>Mucik Master</COMPANY>
    <PRICE>8.70</PRICE>
    <YEAR>1995</YEAR>
  </CD>
  <CD>
    <TITLE>Big Willie style</TITLE>
    <ARTIST>Will Smith</ARTIST>
    <COUNTRY>USA</COUNTRY>
    <COMPANY>Columbia</COMPANY>
    <PRICE>9.90</PRICE>
    <YEAR>1997</YEAR>
  </CD>
  <CD>
    <TITLE>Tupelo Honey</TITLE>
    <ARTIST>Van Morrison</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>Polydor</COMPANY>
    <PRICE>8.20</PRICE>
    <YEAR>1971</YEAR>
  </CD>
  <CD>
    <TITLE>Soulsville</TITLE>
    <ARTIST>Jorn Hoel</ARTIST>
    <COUNTRY>Norway</COUNTRY>
    <COMPANY>WEA</COMPANY>
    <PRICE>7.90</PRICE>
    <YEAR>1996</YEAR>
  </CD>
  <CD>
    <TITLE>The very best of</TITLE>
    <ARTIST>Cat Stevens</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>Island</COMPANY>
    <PRICE>8.90</PRICE>
    <YEAR>1990</YEAR>
  </CD>
  <CD>
    <TITLE>Stop</TITLE>
    <ARTIST>Sam Brown</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>A and M</COMPANY>
    <PRICE>8.90</PRICE>
    <YEAR>1988</YEAR>
  </CD>
  <CD>
    <TITLE>Bridge of Spies</TITLE>
    <ARTIST>T'Pau</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>Siren</COMPANY>
    <PRICE>7.90</PRICE>
    <YEAR>1987</YEAR>
  </CD>
  <CD>
    <TITLE>Private Dancer</TITLE>
    <ARTIST>Tina Turner</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>Capitol</COMPANY>
    <PRICE>8.90</PRICE>
    <YEAR>1983</YEAR>
  </CD>
  <CD>
    <TITLE>Midt om natten</TITLE>
    <ARTIST>Kim Larsen</ARTIST>
    <COUNTRY>EU</COUNTRY>
    <COMPANY>Medley</COMPANY>
    <PRICE>7.80</PRICE>
    <YEAR>1983</YEAR>
  </CD>
  <CD>
    <TITLE>Pavarotti Gala Concert</TITLE>
    <ARTIST>Luciano Pavarotti</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>DECCA</COMPANY>
    <PRICE>9.90</PRICE>
    <YEAR>1991</YEAR>
  </CD>
  <CD>
    <TITLE>The dock of the bay</TITLE>
    <ARTIST>Otis Redding</ARTIST>
    <COUNTRY>USA</COUNTRY>
    <COMPANY>Stax Records</COMPANY>
    <PRICE>7.90</PRICE>
    <YEAR>1968</YEAR>
  </CD>
  <CD>
    <TITLE>Picture book</TITLE>
    <ARTIST>Simply Red</ARTIST>
    <COUNTRY>EU</COUNTRY>
    <COMPANY>Elektra</COMPANY>
    <PRICE>7.20</PRICE>
    <YEAR>1985</YEAR>
  </CD>
  <CD>
    <TITLE>Red</TITLE>
    <ARTIST>The Communards</ARTIST>
    <COUNTRY>UK</COUNTRY>
    <COMPANY>London</COMPANY>
    <PRICE>7.80</PRICE>
    <YEAR>1987</YEAR>
  </CD>
  <CD>
    <TITLE>Unchain my heart</TITLE>
    <ARTIST>Joe Cocker</ARTIST>
    <COUNTRY>USA</COUNTRY>
    <COMPANY>EMI</COMPANY>
    <PRICE>8.20</PRICE>
    <YEAR>1987</YEAR>
  </CD>
</CATALOG>
'''

sampleText4 = R'''
<?xml version="1.0" encoding="UTF-8"?>
<Example>
  <![CDATA[
     characters with markup
  ]]>
  <script>
     <![CDATA[
        <message> Welcome to TutorialsPoint </message>
     ]]>
  </script>
</Example>
'''

ParseAndCompose(text as String) = {
	doc = xml.Parse(text)
	doc.Compose()
  Println()
  doc.root.WalkChild {|node| Printf('%*s%s\n', node.depth * 2, '', node)}
}

Print(R'''
----------------------------------------------------------------
sampleText1
----------------------------------------------------------------
''')
ParseAndCompose(sampleText1)

Print(R'''
----------------------------------------------------------------
sampleText2
----------------------------------------------------------------
''')
ParseAndCompose(sampleText2)

Print(R'''
----------------------------------------------------------------
sampleText3
----------------------------------------------------------------
''')
ParseAndCompose(sampleText3)

Print(R'''
----------------------------------------------------------------
sampleText4
----------------------------------------------------------------
''')
ParseAndCompose(sampleText4)

TestCase('Node#parent') {
  doc = xml.Parse(sampleText1)
  doc.root.WalkChild {|node|
    Printf('%*s%s%s -> %s\n', node.depth * 2, '', node.type,
          cond(node.IsElement(), '(' + node.name + ')', ''),
          cond(node.parent, 'element(' + node.parent.name + ')', 'nil'))
  }
}

TestCase('Element#EachChild()') {
  doc = xml.Parse(sampleText1)
  Println(doc.root.EachChild())
  Println(doc.root.EachChild():text)
  Println(doc.root.EachChild():comment)
  Println("EachChild('Address')")
  Println(doc.root.EachChild('Address'))
}

TestCase('Element#GetAttr()') {
  elem = xml.Parse(sampleText1).root
  Tester(`elem.GetAttr('PurchaseOrderNumber'))
  Tester(`elem.GetAttr('OrderDate'))
}

TestCase('Element#GetAttrName()') {
  elem = xml.Parse(sampleText1).root
  Tester(`elem.GetAttrName(0))
  Tester(`elem.GetAttrName(1))
  Tester(`elem.GetAttrName('PurchaseOrderNumber'))
  Tester(`elem.GetAttrName('OrderDate'))
}

TestCase('Element#GetAttrValue()') {
  elem = xml.Parse(sampleText1).root
  Tester(`elem.GetAttrValue(0))
  Tester(`elem.GetAttrValue(1))
  Tester(`elem.GetAttrValue('PurchaseOrderNumber'))
  Tester(`elem.GetAttrValue('OrderDate'))
}

TestCase('Element#attrs') {
  elem = xml.Parse(sampleText1).root
  Tester(`elem.attrs['PurchaseOrderNumber'])
  Tester(`elem.attrs['OrderDate'])
}

TestCase('XmlDecl') {
    PrintXmlDecl(xmlDecl as xml.XmlDecl) = {
      Printf('version=%s encoding=%s standalone=%s\n', xmlDecl.version, xmlDecl.encoding, xmlDecl.standalone)
    }
    xml.Parse('<?xml version="1.0"?>\n<root />\n') {|doc| PrintXmlDecl(doc.xmlDecl)}
    xml.Parse('<?xml version="1.0" encoding="utf-8"?>\n<root />\n') {|doc| PrintXmlDecl(doc.xmlDecl)}
    xml.Parse('<?xml version="1.0" encoding="utf-8" standalone="yes"?>\n<root />\n') {|doc| PrintXmlDecl(doc.xmlDecl)}
    xml.Parse('<?xml version="1.0" encoding="utf-8" standalone="no"?>\n<root />\n') {|doc| PrintXmlDecl(doc.xmlDecl)}
}

TestCase('Element#WalkChild()') {
  doc = xml.Parse(sampleText3)
  Println('WalkChild()')
  doc.root.WalkChild {|node| Printf('%*s%s\n', node.depth * 2, '', node)}
  Println()
  Println('WalkChild():element')
  doc.root.WalkChild():element {|node| Printf('%*s%s\n', node.depth * 2, '', node)}
  Println()
  Println('WalkChild():text')
  doc.root.WalkChild():text {|node| Printf('%*s%s\n', node.depth * 2, '', node)}
  Println()
  Println('WalkChild():comment')
  doc.root.WalkChild():comment {|node| Printf('%*s%s\n', node.depth * 2, '', node)}
  Println()
  Println('WalkChild():text:comment')
  doc.root.WalkChild():text:comment {|node| Printf('%*s%s\n', node.depth * 2, '', node)}
  Println()
  Println('WalkChild(\'TITLE\')')
  doc.root.WalkChild('TITLE') {|node| Printf('%s\n', node.text)}
}

TestCase('Document#Walk()') {
  doc = xml.Parse(sampleText3)
  Printf('TITLE: %s\n', doc.Walk('TITLE'):*text)
  Printf('ARTIST: %s\n', doc.Walk('ARTIST'):*text)
}

TestCase('Index access') {
  doc = xml.Parse(sampleText3)
  doc.root.EachChild('CD') {|node|
    Printf('TITLE "%s"\n', node['TITLE'].text)
    Printf('  ARTIST  %s\n', node['ARTIST'].text)
    Printf('  COUNTRY %s\n', node['COUNTRY'].text)
    Printf('  COMPANY %s\n', node['COMPANY'].text)
    Printf('  PRICE   %s\n', node['PRICE'].text)
    Printf('  YEAR    %s\n', node['YEAR'].text)
  }
}
