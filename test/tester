#!/bin/bash
#==============================================================================
# Test script launcher
#==============================================================================
cases=
cases="$cases Argument"
cases="$cases Array"
cases="$cases Attribute"
cases="$cases Binary"
cases="$cases Bool"
cases="$cases Codec"
cases="$cases Color"
cases="$cases Complex"
cases="$cases DateTime"
cases="$cases Dict"
cases="$cases Error"
cases="$cases Expr"
cases="$cases Function"
cases="$cases Functions"
cases="$cases Image"
cases="$cases ImplicitMapping"
cases="$cases Iterator"
cases="$cases List"
cases="$cases MemberMapping"
cases="$cases Number"
cases="$cases Object"
cases="$cases Operator"
cases="$cases Operators"
cases="$cases Palette"
cases="$cases Pointer"
cases="$cases Random"
cases="$cases Range"
cases="$cases Rational"
cases="$cases Referencer"
cases="$cases Stat"
cases="$cases Stream"
cases="$cases String"
cases="$cases Symbol"
cases="$cases Template"
cases="$cases TimeDelta"
cases="$cases Tuple"
cases="$cases argopt"
cases="$cases base64"
cases="$cases bmp"
cases="$cases class"
cases="$cases cond"
cases="$cases const"
cases="$cases csv"
cases="$cases diff"
cases="$cases for"
cases="$cases gmp"
cases="$cases gzip"
cases="$cases hash"
cases="$cases if"
cases="$cases import"
cases="$cases markdown"
cases="$cases math"
cases="$cases ml"
cases="$cases os"
cases="$cases path"
cases="$cases re"
cases="$cases repeat"
cases="$cases scope"
cases="$cases struct"
cases="$cases syntax"
cases="$cases sys"
cases="$cases tar"
cases="$cases try"
cases="$cases value"
cases="$cases while"
cases="$cases xml"
cases="$cases yaml"

echo -e "\033[0m"
if [ $# -eq 0 ]; then
	echo "usage: tester all/casename [update]"
	exit
fi
options=""
if [ "$1" != "all" ]; then
	cases="$1"
	options="--detail"
fi
gurax -v
if [ $# -eq 1 ]; then
	for case in $cases
	do
		echo "$case"
		gurax -I../module test-$case.gura > result/test-$case.result.txt
		gurax diff-result.gura $options result/test-$case.expect.txt result/test-$case.result.txt
	done	
elif [ "$2" = "update" ]; then
	for case in $cases
	do
		echo "update: $case"
		gurax -I../module test-$case.gura > result/test-$case.expect.txt
	done
fi
echo -e "\033[0m"
