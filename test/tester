#!/bin/bash
cases=
cases="$cases Binary"
cases="$cases Bool"
cases="$cases Codec"
cases="$cases Complex"
cases="$cases DateTime"
cases="$cases Dict"
cases="$cases Error"
cases="$cases Expr"
cases="$cases Function"
cases="$cases ImplicitMapping"
cases="$cases Iterator"
cases="$cases List"
cases="$cases MemberMapping"
cases="$cases Number"
cases="$cases Object"
cases="$cases Operators"
cases="$cases Random"
cases="$cases String"
cases="$cases Symbol"
cases="$cases TimeDelta"
cases="$cases class"
cases="$cases cond"
cases="$cases for"
cases="$cases if"
cases="$cases import"
cases="$cases math"
cases="$cases os"
cases="$cases repeat"
cases="$cases struct"
cases="$cases sys"
cases="$cases try"
cases="$cases value"
cases="$cases while"

if [ $# -eq 0 ]; then
	echo "usage: tester all/casename [update]"
	exit
fi
options=""
if [ "$1" != "all" ]; then
	cases="$1"
	options="--detail"
fi
if [ $# -eq 1 ]; then
	for case in $cases
	do
		echo "$case"
		gurax test-$case.gura > result/test-$case.result.txt
		gura ../script/diff-result.gura $options result/test-$case.expect.txt result/test-$case.result.txt
	done	
elif [ "$2" = "update" ]; then
	for case in $cases
	do
		echo "update: $case"
		gurax test-$case.gura > result/test-$case.expect.txt
	done
fi
