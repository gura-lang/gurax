#!/usr/bin/env gurax
import(util.tester) {*}

TestCase('Property') {
	Number.PrintPropSlots()
}

TestCase('Property Access') {
	test(a:Number) = {
		Tester(`a)
		Tester(`a.abs)
		Tester(`a.arg)
		Tester(`a.imag)
		Tester(`a.norm)
		Tester(`a.real)
	}
	test(3)
}

TestCase('Operator') {
	Tester(`(~3))
	Tester(`(-3))
	Tester(`(+3))
	Tester(`(3 + 5))
	Tester(`(3 & 5))
	Tester(`(3 <=> 5))
	Tester(`(3 <=> 3))
	Tester(`(5 <=> 3))
	Tester(`(3 / 5))
	Tester(`(3 / 0))
	Tester(`(3 == 5))
	Tester(`(3 == 3))
	Tester(`(5 == 3))
	Tester(`(3 >= 5))
	Tester(`(3 >= 3))
	Tester(`(5 >= 3))
	Tester(`(3 > 5))
	Tester(`(3 > 3))
	Tester(`(5 > 3))
	Tester(`(3 <= 5))
	Tester(`(3 <= 3))
	Tester(`(5 <= 3))
	Tester(`(3 < 5))
	Tester(`(3 < 3))
	Tester(`(5 < 3))
	Tester(`(3 * 5))
	Tester(`(3 - 5))
}

TestCase('Number.formatInt / Number.formatFloat') {
	formatInt = Number.formatInt
	formatFloat = Number.formatFloat
	Tester(`(Number.formatInt = '%lld'))
	Tester(`1234567891234)
	Tester(`(Number.formatFloat = '%g'))
	Tester(`123456789.123456789)
	Tester(`(Number.formatInt = '%llx'))
	Tester(`1234567891234)
	Tester(`(Number.formatFloat = '%f'))
	Tester(`123456789.123456789)
	Tester(`(Number.formatFloat = '%.3f'))
	Tester(`123456789.123456789)
	Tester(`(Number.formatInt = '%d'))
	Tester(`(Number.formatInt = '%f'))
	Tester(`(Number.formatFloat = '%d'))
	Tester(`(Number.formatInt = ''))
	Tester(`(Number.formatFloat = ''))
	Tester(`(Number.formatInt = '%lld %lld'))
	Tester(`(Number.formatFloat = '%f %f'))
	Number.formatInt = formatInt
	Number.formatFloat = formatFloat
}

TestCase('Suffx f') {
	Tester(`0f)
	Tester(`1f)
	Tester(`123456f)
	Tester(`1.23456f)
}

TestCase('Number#sign') {
	Tester(`(0).sign)
	Tester(`(9).sign)
	Tester(`(-9).sign)
}
