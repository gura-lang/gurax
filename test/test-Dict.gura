#!/usr/bin/env gurax
import(util.tester) {*}

TestCase('Initializer') {
	Tester(`%{
		'key0', 'value0', 'key1', 'value1', 'key2', 'value2', 'key3', 'value3', 'key4', 'value4',
		'key5', 'value5', 'key6', 'value6', 'key7', 'value7', 'key8', 'value8', 'key9', 'value9'})
	Tester(`%{
		{'key0', 'value0'}, {'key1', 'value1'}, {'key2', 'value2'}, {'key3', 'value3'}, {'key4', 'value4'},
		{'key5', 'value5'}, {'key6', 'value6'}, {'key7', 'value7'}, {'key8', 'value8'}, {'key9', 'value9'}})
	Tester(`%{
		'key0' => 'value0', 'key1' => 'value1', 'key2' => 'value2', 'key3' => 'value3', 'key4' => 'value4',
		'key5' => 'value5', 'key6' => 'value6', 'key7' => 'value7', 'key8' => 'value8', 'key9' => 'value9'})
}

TestCase('Property') {
	Tester(`Dict.__PropHandler__(`len))
	Tester(`Dict.__PropHandler__(`keys))
}

TestCase('Dict#len and Dict#keys') {
	d = %{
		'key0' => 'value0', 'key1' => 'value1', 'key2' => 'value2', 'key3' => 'value3', 'key4' => 'value4',
		'key5' => 'value5', 'key6' => 'value6', 'key7' => 'value7', 'key8' => 'value8', 'key9' => 'value9'
	}
	Tester(`d)
	Tester(`d.len)
	Tester(`d.keys)
}

TestCase('Indexer') {
	d = %{
		'key0' => 'value0', 'key1' => 'value1', 'key2' => 'value2', 'key3' => 'value3', 'key4' => 'value4',
		'key5' => 'value5', 'key6' => 'value6', 'key7' => 'value7', 'key8' => 'value8', 'key9' => 'value9'
	}
	d.keys.Each {|key|
		Println(d[key])
	}
}

TestCase('Dict#Put()') {
	d = %{'a' => 3, 'b' => 2, 'c' => 1}
	Tester(`d)
	Tester(`d.Put('a', 99):timid)
	Tester(`d.Put('e', 99):timid)
	Tester(`d.Put('f', 100).Put('g', 200).Put('h', 300))
	Tester(`d.Put('a', 999):overwrite)
	Tester(`d.Put('a', 888):strict)
	Tester(`d.Put([1, 2, 3], [4, 5, 6]))
}
