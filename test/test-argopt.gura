#!/usr/bin/env gurax -I../module
import(argopt)

p = argopt.Parser()
p.AddFlag('flag-a', 'a', 'help-a')
p.AddFlag('flag-b', 'b', 'help-b')
p.AddFlag('flag-c', 'c', 'help-c')
p.AddFlag('flag-d', 'd', 'help-d')
p.AddFlag('flag-e', 'e', 'help-e')
p.AddParam('param-A', 'A', 'help-A')
p.AddParam('param-B', 'B', 'help-B')
p.AddParam('param-C', 'C', 'help-C')
p.AddParam('param-D', 'D', 'help-D')
p.AddParam('param-E', 'E', 'help-E')

Println(p.FormatHelp())


Tester(argv[]:String) = {
	try {
		[argvRest, opt] = p.Parse([''] |+| argv)
	} catch {|e|
		Printf('%s -> ** %s **\n', argv, e.text):nomap
		return
	}
	Printf('%s -> %s, %s\n', argv, argvRest, opt):nomap
}

Tester([''])
Tester(['file1'])
Tester(['file1', 'file2', 'file3'])
Tester(['--flag-a'])
Tester(['-a'])
Tester(['--flag-a', '--flag-b'])
Tester(['-a', '-b'])
Tester(['--flag-a', '--flag-b', '--flag-c', '--flag-d', '--flag-e'])
Tester(['-a', '-b', '-c', '-d', '-e'])
Tester(['--flag-a', '--flag-a'])
Tester(['-a', '-a'])
Tester(['file1', '--flag-a', 'file2', '--flag-b', '--flag-c', 'file3', '--flag-d', '--flag-e', 'file4'])
Tester(['--param-A=value-A'])
Tester(['-A', 'value-A'])
Tester(['--param-A=value-A', '--param-B=vaue-B'])
Tester(['-A', 'value-A', '-B', 'value-B'])
Tester(['--param-A=value-A', '--param-B=value-B', '--param-C=value-C', '--param-D=value-D', '--param-E=value-E'])
Tester(['-A', 'value-A', '-B', 'value-B', '-C', 'value-C', '-D', 'value-D', '-E', 'value-E'])
Tester(['--param-A'])
Tester(['--flag-a=value'])
