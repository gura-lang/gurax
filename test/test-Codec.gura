#!/usr/bin/env gurax
import(util.tester) {*}
import(hash)

TestCase('Property') {
	Codec.PrintPropSlots()
}

//Println(b'\x30\x42'.Reader('utf-16be').ReadText())
//Println(Stream('d.txt').ReadText())

Print(Stream('UTF16BE.txt', 'r', 'utf16be').ReadText())
sys.Exit()
TestCase('') {
	buffSrc = Stream('test-Codec/chars-cp932.txt', 'r', 'cp932').ReadText().ToBinary()
	//buffSrc = Stream('UTF16BE.txt', 'r', 'utf16be').ReadText().ToBinary()
	//Stream.Pipe(Stream('test-Codec/chars-cp932.txt', 'r', 'cp932'), Stream('a.txt', 'w', 'cp932')):cooked
	//Stream.Pipe(Stream('test-Codec/chars-cp932.txt', 'r', 'cp932'), Stream('b.txt', 'w', 'utf-8')):cooked
	Binary {|buff|
		buff.Writer('utf-16be').PipeFrom(buffSrc.Reader()):cooked
		//Println(hash.MD5().PipeFrom(buff).digestHex)
		Stream('UTF16BE.txt', 'w').Write(buff)
		//buffConv = buff.Reader('utf-16be').ReadText().ToBinary()
		//Stream('d.txt', 'w').Write(buffConv)
		//Println(hash.MD5().PipeFrom(buffSrc).digestHex)
		//Println(hash.MD5().PipeFrom(buffConv).digestHex)
	}
}

