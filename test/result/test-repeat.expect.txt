======== PUnit ========
repeat {}
  ##0 GenCounterIterator()
  ##1 Value(<Nil>)
  ##2 EvalIterator(offsetToIterator=1,branchdest=##6), DiscardValue()
  ##3 DiscardValue()
  ##4 Value(<Nil>)
  ##5 Jump(cont=##2)
  ##6 RemoveValue(offset=1)
repeat {|n| nil}
  ##0 PushFrame<Block>()
  ##1 GenCounterIterator()
  ##2 Value(<Nil>)
  ##3 EvalIterator(offsetToIterator=1,branchdest=##8)
  ##4 AssignToDeclArg(`n), DiscardValue()
  ##5 DiscardValue()
  ##6 Lookup(`nil)
  ##7 Jump(cont=##3)
  ##8 RemoveValue(offset=1)
  ##9 PopFrame()
repeat (3) {}
  ##0 Value(<Number:3>)
  ##1 Cast(Number)
  ##2 GenRangeIterator()
  ##3 Value(<Nil>)
  ##4 EvalIterator(offsetToIterator=1,branchdest=##8), DiscardValue()
  ##5 DiscardValue()
  ##6 Value(<Nil>)
  ##7 Jump(cont=##4)
  ##8 RemoveValue(offset=1)
repeat (3) {|n| nil}
  ##0 PushFrame<Block>()
  ##1 Value(<Number:3>)
  ##2 Cast(Number)
  ##3 GenRangeIterator()
  ##4 Value(<Nil>)
  ##5 EvalIterator(offsetToIterator=1,branchdest=##10)
  ##6 AssignToDeclArg(`n), DiscardValue()
  ##7 DiscardValue()
  ##8 Lookup(`nil)
  ##9 Jump(cont=##5)
  ##10 RemoveValue(offset=1)
  ##11 PopFrame()
repeat ():list {}
  ##0 GenCounterIterator()
  ##1 CreateList()
  ##2 Jump(cont=##6)
  ##3 ListElem(offsetToList=0)
  ##4 Jump(cont=##9)
  ##5 ListElem(offsetToList=0)
  ##6 EvalIterator(offsetToIterator=1,branchdest=##9), DiscardValue()
  ##7 Value(<Nil>)
  ##8 Jump(cont=##5)
  ##9 RemoveValue(offset=1)
repeat ():list {|n| nil}
  ##0 PushFrame<Block>()
  ##1 GenCounterIterator()
  ##2 CreateList()
  ##3 Jump(cont=##7)
  ##4 ListElem(offsetToList=0)
  ##5 Jump(cont=##11)
  ##6 ListElem(offsetToList=0)
  ##7 EvalIterator(offsetToIterator=1,branchdest=##11)
  ##8 AssignToDeclArg(`n), DiscardValue()
  ##9 Lookup(`nil)
  ##10 Jump(cont=##6)
  ##11 RemoveValue(offset=1)
  ##12 PopFrame()
repeat (3):list {}
  ##0 Value(<Number:3>)
  ##1 Cast(Number)
  ##2 GenRangeIterator()
  ##3 CreateList()
  ##4 Jump(cont=##8)
  ##5 ListElem(offsetToList=0)
  ##6 Jump(cont=##11)
  ##7 ListElem(offsetToList=0)
  ##8 EvalIterator(offsetToIterator=1,branchdest=##11), DiscardValue()
  ##9 Value(<Nil>)
  ##10 Jump(cont=##7)
  ##11 RemoveValue(offset=1)
repeat (3):list {|n| nil}
  ##0 PushFrame<Block>()
  ##1 Value(<Number:3>)
  ##2 Cast(Number)
  ##3 GenRangeIterator()
  ##4 CreateList()
  ##5 Jump(cont=##9)
  ##6 ListElem(offsetToList=0)
  ##7 Jump(cont=##13)
  ##8 ListElem(offsetToList=0)
  ##9 EvalIterator(offsetToIterator=1,branchdest=##13)
  ##10 AssignToDeclArg(`n), DiscardValue()
  ##11 Lookup(`nil)
  ##12 Jump(cont=##8)
  ##13 RemoveValue(offset=1)
  ##14 PopFrame()
repeat ():xlist {}
  ##0 GenCounterIterator()
  ##1 CreateList()
  ##2 Jump(cont=##6)
  ##3 ListElem(offsetToList=0):xlist
  ##4 Jump(cont=##9)
  ##5 ListElem(offsetToList=0):xlist
  ##6 EvalIterator(offsetToIterator=1,branchdest=##9), DiscardValue()
  ##7 Value(<Nil>)
  ##8 Jump(cont=##5)
  ##9 RemoveValue(offset=1)
repeat ():xlist {|n| nil}
  ##0 PushFrame<Block>()
  ##1 GenCounterIterator()
  ##2 CreateList()
  ##3 Jump(cont=##7)
  ##4 ListElem(offsetToList=0):xlist
  ##5 Jump(cont=##11)
  ##6 ListElem(offsetToList=0):xlist
  ##7 EvalIterator(offsetToIterator=1,branchdest=##11)
  ##8 AssignToDeclArg(`n), DiscardValue()
  ##9 Lookup(`nil)
  ##10 Jump(cont=##6)
  ##11 RemoveValue(offset=1)
  ##12 PopFrame()
repeat (3):xlist {}
  ##0 Value(<Number:3>)
  ##1 Cast(Number)
  ##2 GenRangeIterator()
  ##3 CreateList()
  ##4 Jump(cont=##8)
  ##5 ListElem(offsetToList=0):xlist
  ##6 Jump(cont=##11)
  ##7 ListElem(offsetToList=0):xlist
  ##8 EvalIterator(offsetToIterator=1,branchdest=##11), DiscardValue()
  ##9 Value(<Nil>)
  ##10 Jump(cont=##7)
  ##11 RemoveValue(offset=1)
repeat (3):xlist {|n| nil}
  ##0 PushFrame<Block>()
  ##1 Value(<Number:3>)
  ##2 Cast(Number)
  ##3 GenRangeIterator()
  ##4 CreateList()
  ##5 Jump(cont=##9)
  ##6 ListElem(offsetToList=0):xlist
  ##7 Jump(cont=##13)
  ##8 ListElem(offsetToList=0):xlist
  ##9 EvalIterator(offsetToIterator=1,branchdest=##13)
  ##10 AssignToDeclArg(`n), DiscardValue()
  ##11 Lookup(`nil)
  ##12 Jump(cont=##8)
  ##13 RemoveValue(offset=1)
  ##14 PopFrame()
repeat (3) {|i| f(i)}
  ##0 PushFrame<Block>()
  ##1 Value(<Number:3>)
  ##2 Cast(Number)
  ##3 GenRangeIterator()
  ##4 Value(<Nil>)
  ##5 EvalIterator(offsetToIterator=1,branchdest=##15)
  ##6 AssignToDeclArg(`i), DiscardValue()
  ##7 DiscardValue()
  ##8 Lookup(`f)
  ##9 Argument()
  ##10 BeginArgSlot(`i:##10,sentinel=##12,branchdest=##13)
  ##11 Lookup(`i)
  ##12 EndArgSlot()
  ##13 Call(cont=##14)
  ##14 Jump(cont=##5)
  ##15 RemoveValue(offset=1)
  ##16 PopFrame()
======== Create list ========
repeat (10):list {'x'} .. ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x']
repeat (10):xlist {|i| if ((i % 2) == 0) {continue}, i} .. [1, 3, 5, 7, 9]
