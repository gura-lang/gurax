======== Property ========
Rational
  #denom            Number       R
  .format           String       R/W
  .formatInt        String       R/W
  #numer            Number       R
  #sign             Number       R
======== Constructor ========
Rational() .. 0r
Rational(3) .. 3r
Rational(-3) .. -3r
Rational(3, 4) .. 3/4r
Rational(-3, 4) .. -3/4r
Rational(3, -4) .. -3/4r
Rational(-3, -4) .. 3/4r
Rational(12, 8) .. 12/8r
Rational(10000, 10000) .. 10000/10000r
Rational(10000, 10001) .. 10000/10001r
Rational(1, 0x100000000) .. 1/4294967296r
Rational(0x0010000000000000) .. 4503599627370496r
Rational(0x0008000000000000) .. 2251799813685248r
Rational(0x0004000000000000) .. 1125899906842624r
Rational(-0x0010000000000000) .. -4503599627370496r
Rational(-0x0008000000000000) .. -2251799813685248r
Rational(-0x0004000000000000) .. -1125899906842624r
Rational(1, 0x0010000000000000) .. 1/4503599627370496r
Rational(1, 0x0008000000000000) .. 1/2251799813685248r
Rational(1, 0x0004000000000000) .. 1/1125899906842624r
Rational(-1, 0x0010000000000000) .. -1/4503599627370496r
Rational(-1, 0x0008000000000000) .. -1/2251799813685248r
Rational(-1, 0x0004000000000000) .. -1/1125899906842624r
Rational(0x0010000000000000, 0x0010000000000000) .. 4503599627370496/4503599627370496r
Rational(0x0008000000000000, 0x0008000000000000) .. 2251799813685248/2251799813685248r
Rational(0x0004000000000000, 0x0004000000000000) .. 1125899906842624/1125899906842624r
Rational(-0x0010000000000000, 0x0010000000000000) .. -4503599627370496/4503599627370496r
Rational(-0x0008000000000000, 0x0008000000000000) .. -2251799813685248/2251799813685248r
Rational(-0x0004000000000000, 0x0004000000000000) .. -1125899906842624/1125899906842624r
Rational(0x0008000000000000, 0x0010000000000000) .. 2251799813685248/4503599627370496r
Rational(0x0004000000000000, 0x0008000000000000) .. 1125899906842624/2251799813685248r
Rational(0x0002000000000000, 0x0004000000000000) .. 562949953421312/1125899906842624r
Rational(-0x0008000000000000, 0x0010000000000000) .. -2251799813685248/4503599627370496r
Rational(-0x0004000000000000, 0x0008000000000000) .. -1125899906842624/2251799813685248r
Rational(-0x0002000000000000, 0x0004000000000000) .. -562949953421312/1125899906842624r
======== r-suffix ========
0r .. 0r
3r .. 3r
-3r .. -3r
3r / 4 .. 3/4r
-(3r / 4) .. -3/4r
3r / (-4) .. -3/4r
-(3r / (-4)) .. 3/4r
12r / 8 .. 3/2r
10000r / 10000 .. 1r
10000r / 10001 .. 10000/10001r
1r / 0x100000000 .. 1/4294967296r
0x0010000000000000r .. 4503599627370496r
0x0008000000000000r .. 2251799813685248r
0x0004000000000000r .. 1125899906842624r
-0x0010000000000000r .. -4503599627370496r
-0x0008000000000000r .. -2251799813685248r
-0x0004000000000000r .. -1125899906842624r
1r / 0x0010000000000000 .. 1/4503599627370496r
1r / 0x0008000000000000 .. 1/2251799813685248r
1r / 0x0004000000000000 .. 1/1125899906842624r
-(1r / 0x0010000000000000) .. -1/4503599627370496r
-(1r / 0x0008000000000000) .. -1/2251799813685248r
-(1r / 0x0004000000000000) .. -1/1125899906842624r
0x0010000000000000r / 0x0010000000000000 .. 1r
0x0008000000000000r / 0x0008000000000000 .. 1r
0x0004000000000000r / 0x0004000000000000 .. 1r
-(0x0010000000000000r / 0x0010000000000000) .. -1r
-(0x0008000000000000r / 0x0008000000000000) .. -1r
-(0x0004000000000000r / 0x0004000000000000) .. -1r
0x0008000000000000r / 0x0010000000000000 .. 1/2r
0x0004000000000000r / 0x0008000000000000 .. 1/2r
0x0002000000000000r / 0x0004000000000000 .. 1/2r
-(0x0008000000000000r / 0x0010000000000000) .. -1/2r
-(0x0004000000000000r / 0x0008000000000000) .. -1/2r
-(0x0002000000000000r / 0x0004000000000000) .. -1/2r
======== Rational#Canonicalize() ========
Rational(36, 96).Canonicalize() .. 3/8r
======== Property access ========
Rational(3, 4) .. 3/4r
rat.numer .. 3
rat.denom .. 4
Rational(-3, 4) .. -3/4r
rat.numer .. -3
rat.denom .. 4
Rational(3, -4) .. -3/4r
rat.numer .. -3
rat.denom .. 4
Rational(-3, -4) .. 3/4r
rat.numer .. 3
rat.denom .. 4
======== Operator +a ========
+5r .. 5r
+(5r / 7) .. 5/7r
+(-5r) .. -5r
+(-(5r / 7)) .. -5/7r
======== Operator -a ========
-5r .. -5r
-(5r / 7) .. -5/7r
-(-5r) .. 5r
-(-(5r / 7)) .. 5/7r
======== Operator a + b ========
3r + 5r .. 8r
3r + 5 .. 8r
3 + 5r .. 8r
5r / 6 + 7r / 8 .. 41/24r
5r / 6 + 3 .. 23/6r
3 + 5r / 6 .. 23/6r
======== Operator a - b ========
3r - 5r .. -2r
3r - 5 .. -2r
3 - 5r .. -2r
5r / 6 - 7r / 8 .. -1/24r
5r / 6 - 3 .. -13/6r
3 - 5r / 6 .. 13/6r
======== Operator a * b ========
3r * 5r .. 15r
3r * 5 .. 15r
3 * 5r .. 15r
5r / 6 * (7r / 8) .. 35/48r
5r / 6 * 3 .. 5/2r
3 * (5r / 6) .. 5/2r
======== Operator a / b ========
3r / 5r .. 3/5r
3r / 5 .. 3/5r
3 / 5r .. 3/5r
5r / 6 / (7r / 8) .. 20/21r
5r / 6 / 3 .. 5/18r
3 / (5r / 6) .. 18/5r
3r / 0r .. divided by zero
======== Operator a == b ========
3 / 5r == 6 / 7r .. false
6 / 7r == 6 / 7r .. true
6 / 7r == 3 / 5r .. false
5 / 2r == 3 .. false
6 / 2r == 3 .. true
7 / 2r == 3 .. false
3 == 5 / 2r .. false
3 == 6 / 2r .. true
3 == 7 / 2r .. false
======== Operator a != b ========
3 / 5r != 6 / 7r .. true
6 / 7r != 6 / 7r .. false
6 / 7r != 3 / 5r .. true
5 / 2r != 3 .. true
6 / 2r != 3 .. false
7 / 2r != 3 .. true
3 != 5 / 2r .. true
3 != 6 / 2r .. false
3 != 7 / 2r .. true
======== Operator a < b ========
3 / 5r < 6 / 7r .. true
6 / 7r < 6 / 7r .. false
6 / 7r < 3 / 5r .. false
5 / 2r < 3 .. true
6 / 2r < 3 .. false
7 / 2r < 3 .. false
3 < 5 / 2r .. false
3 < 6 / 2r .. false
3 < 7 / 2r .. true
======== Operator a > b ========
3 / 5r > 6 / 7r .. false
6 / 7r > 6 / 7r .. false
6 / 7r > 3 / 5r .. true
5 / 2r > 3 .. false
6 / 2r > 3 .. false
7 / 2r > 3 .. true
3 > 5 / 2r .. true
3 > 6 / 2r .. false
3 > 7 / 2r .. false
======== Operator a <= b ========
3 / 5r <= 6 / 7r .. true
6 / 7r <= 6 / 7r .. true
6 / 7r <= 3 / 5r .. false
5 / 2r <= 3 .. true
6 / 2r <= 3 .. true
7 / 2r <= 3 .. false
3 <= 5 / 2r .. false
3 <= 6 / 2r .. true
3 <= 7 / 2r .. true
======== Operator a >= b ========
3 / 5r >= 6 / 7r .. false
6 / 7r >= 6 / 7r .. true
6 / 7r >= 3 / 5r .. true
5 / 2r >= 3 .. false
6 / 2r >= 3 .. true
7 / 2r >= 3 .. true
3 >= 5 / 2r .. true
3 >= 6 / 2r .. true
3 >= 7 / 2r .. false
======== Rational.format ========
Rational.format = '%lld/%lld' .. %lld/%lld
1234 / 5679r .. 1234/5679
Rational.formatInt = '%lld' .. %lld
1234r .. 1234
Rational.format = 'Rational(%lld,%lld)' .. Rational(%lld,%lld)
1234 / 5679r .. Rational(1234,5679)
Rational.formatInt = 'Rational(%lld)' .. Rational(%lld)
1234r .. Rational(1234)
Rational.format = '0x%08llx/0x%08llx' .. 0x%08llx/0x%08llx
1234 / 5679r .. 0x000004d2/0x0000162f
Rational.formatInt = '0x%08llx' .. 0x%08llx
1234r .. 0x000004d2
Rational.format = '%d/%d' .. invalid format specifier
Rational.format = '%f/%f' .. invalid format specifier
Rational.formatInt = '%d' .. invalid format specifier
Rational.formatInt = '%f' .. invalid format specifier
Rational.format = '' .. too few format specifiers
Rational.format = '%lld' .. too few format specifiers
Rational.format = '%lld/%lld' .. %lld/%lld
Rational.format = '%lld/%lld/%lld' .. too many format specifiers
Rational.formatInt = '' .. too few format specifiers
Rational.formatInt = '%lld' .. %lld
Rational.formatInt = '%lld/%lld' .. too many format specifiers
======== Rational#sign ========
0r.sign .. 0
9r.sign .. 1
-9r.sign .. -1
1 / 3r.sign .. 1
-(1 / 3r).sign .. -1
1 / (-3r).sign .. -1
-(1 / (-3r)).sign .. 1
