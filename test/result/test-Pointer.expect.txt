======== Property ========
Pointer
  #bytesAvail       Number       R
  #bytesEntire      Number       R
  #double           Number       R/W
  #float            Number       R/W
  #int16            Number       R/W
  #int32            Number       R/W
  #int64            Number       R/W
  #int8             Number       R/W
  #offset           Number       R/W
  #uint16           Number       R/W
  #uint32           Number       R/W
  #uint64           Number       R/W
  #uint8            Number       R/W
======== Basic test of pack/unpack ========
---
buff.p.Pack(strPre + 'bbbb', 0, -0x80, 0x7f, 0x12) .. <Pointer:4/4>
buff.p.Pack(strPre + 'b', -0x81) .. the number must be between -128 and 127
buff.p.Pack(strPre + 'b', 0x80) .. the number must be between -128 and 127
00 80 7f 12                                      ....
Format('%d', buff.p.Unpack(strPre + 'bbbb')) .. ['0', '-128', '127', '18']
---
buff.p.Pack(strPre + 'BBB', 0x00, 0xff, 0x12) .. <Pointer:3/3>
buff.p.Pack(strPre + 'B', -1) .. the number must be between 0 and 255
buff.p.Pack(strPre + 'B', 0x100) .. the number must be between 0 and 255
00 ff 12                                         ...
Format('%d', buff.p.Unpack(strPre + 'BBB')) .. ['0', '255', '18']
---
buff.p.Pack(strPre + 'hhhh', 0, -0x8000, 0x7fff, 0x1234) .. <Pointer:8/8>
buff.p.Pack(strPre + 'h', -0x8001) .. the number must be between -32768 and 32767
buff.p.Pack(strPre + 'h', 0x8000) .. the number must be between -32768 and 32767
00 00 00 80 ff 7f 34 12                          ......4.
Format('%d', buff.p.Unpack(strPre + 'hhhh')) .. ['0', '-32768', '32767', '4660']
---
buff.p.Pack(strPre + 'HHHH', 0, 0x8000, 0xffff, 0x1234) .. <Pointer:8/8>
buff.p.Pack(strPre + 'H', -1) .. the number must be between 0 and 65535
buff.p.Pack(strPre + 'H', 0x10000) .. the number must be between 0 and 65535
00 00 00 80 ff ff 34 12                          ......4.
Format('%d', buff.p.Unpack(strPre + 'HHHH')) .. ['0', '32768', '65535', '4660']
---
buff.p.Pack(strPre + 'iiii', 0, -0x80000000, 0x7fffffff, 0x12345678) .. <Pointer:16/16>
buff.p.Pack(strPre + 'i', -0x80000001) .. the number must be between -2147483648 and 2147483647
buff.p.Pack(strPre + 'i', 0x80000000) .. the number must be between -2147483648 and 2147483647
00 00 00 00 00 00 00 80 ff ff ff 7f 78 56 34 12  ............xV4.
Format('%d', buff.p.Unpack(strPre + 'iiii')) .. ['0', '-2147483648', '2147483647', '305419896']
---
buff.p.Pack(strPre + 'III', 0x00000000, 0xffffffff, 0x12345678) .. <Pointer:12/12>
buff.p.Pack(strPre + 'I', -1) .. the number must be between 0 and 4294967295
buff.p.Pack(strPre + 'I', 0x100000000) .. the number must be between 0 and 4294967295
00 00 00 00 ff ff ff ff 78 56 34 12              ........xV4.
Format('%d', buff.p.Unpack(strPre + 'III')) .. ['0', '4294967295', '305419896']
---
buff.p.Pack(strPre + 'fff', 0, 1., .5) .. <Pointer:12/12>
00 00 00 00 00 00 80 3f 00 00 00 3f              .......?...?
Format('%f', buff.p.Unpack(strPre + 'fff')) .. ['0.000000', '1.000000', '0.500000']
---
buff.p.Pack(strPre + 'ddd', 0, 1., .5) .. <Pointer:24/24>
00 00 00 00 00 00 00 00 00 00 00 00 00 00 f0 3f  ...............?
00 00 00 00 00 00 e0 3f                          .......?
Format('%f', buff.p.Unpack(strPre + 'ddd')) .. ['0.000000', '1.000000', '0.500000']
---
buff.p.Pack(strPre + '20s', 'Hello World') .. <Pointer:20/20>
48 65 6c 6c 6f 20 57 6f 72 6c 64 00 00 00 00 00  Hello World.....
00 00 00 00                                      ....
Format('%s', buff.p.Unpack(strPre + '20s')) .. ['Hello World']
---
buff.p.Pack(strPre + 'bbbb', 0, -0x80, 0x7f, 0x12) .. <Pointer:4/4>
buff.p.Pack(strPre + 'b', -0x81) .. the number must be between -128 and 127
buff.p.Pack(strPre + 'b', 0x80) .. the number must be between -128 and 127
00 80 7f 12                                      ....
Format('%d', buff.p.Unpack(strPre + 'bbbb')) .. ['0', '-128', '127', '18']
---
buff.p.Pack(strPre + 'BBB', 0x00, 0xff, 0x12) .. <Pointer:3/3>
buff.p.Pack(strPre + 'B', -1) .. the number must be between 0 and 255
buff.p.Pack(strPre + 'B', 0x100) .. the number must be between 0 and 255
00 ff 12                                         ...
Format('%d', buff.p.Unpack(strPre + 'BBB')) .. ['0', '255', '18']
---
buff.p.Pack(strPre + 'hhhh', 0, -0x8000, 0x7fff, 0x1234) .. <Pointer:8/8>
buff.p.Pack(strPre + 'h', -0x8001) .. the number must be between -32768 and 32767
buff.p.Pack(strPre + 'h', 0x8000) .. the number must be between -32768 and 32767
00 00 80 00 7f ff 12 34                          .......4
Format('%d', buff.p.Unpack(strPre + 'hhhh')) .. ['0', '-32768', '32767', '4660']
---
buff.p.Pack(strPre + 'HHHH', 0, 0x8000, 0xffff, 0x1234) .. <Pointer:8/8>
buff.p.Pack(strPre + 'H', -1) .. the number must be between 0 and 65535
buff.p.Pack(strPre + 'H', 0x10000) .. the number must be between 0 and 65535
00 00 80 00 ff ff 12 34                          .......4
Format('%d', buff.p.Unpack(strPre + 'HHHH')) .. ['0', '32768', '65535', '4660']
---
buff.p.Pack(strPre + 'iiii', 0, -0x80000000, 0x7fffffff, 0x12345678) .. <Pointer:16/16>
buff.p.Pack(strPre + 'i', -0x80000001) .. the number must be between -2147483648 and 2147483647
buff.p.Pack(strPre + 'i', 0x80000000) .. the number must be between -2147483648 and 2147483647
00 00 00 00 80 00 00 00 7f ff ff ff 12 34 56 78  .............4Vx
Format('%d', buff.p.Unpack(strPre + 'iiii')) .. ['0', '-2147483648', '2147483647', '305419896']
---
buff.p.Pack(strPre + 'III', 0x00000000, 0xffffffff, 0x12345678) .. <Pointer:12/12>
buff.p.Pack(strPre + 'I', -1) .. the number must be between 0 and 4294967295
buff.p.Pack(strPre + 'I', 0x100000000) .. the number must be between 0 and 4294967295
00 00 00 00 ff ff ff ff 12 34 56 78              .........4Vx
Format('%d', buff.p.Unpack(strPre + 'III')) .. ['0', '4294967295', '305419896']
---
buff.p.Pack(strPre + 'fff', 0, 1., .5) .. <Pointer:12/12>
00 00 00 00 3f 80 00 00 3f 00 00 00              ....?...?...
Format('%f', buff.p.Unpack(strPre + 'fff')) .. ['0.000000', '1.000000', '0.500000']
---
buff.p.Pack(strPre + 'ddd', 0, 1., .5) .. <Pointer:24/24>
00 00 00 00 00 00 00 00 3f f0 00 00 00 00 00 00  ........?.......
3f e0 00 00 00 00 00 00                          ?.......
Format('%f', buff.p.Unpack(strPre + 'ddd')) .. ['0.000000', '1.000000', '0.500000']
---
buff.p.Pack(strPre + '20s', 'Hello World') .. <Pointer:20/20>
48 65 6c 6c 6f 20 57 6f 72 6c 64 00 00 00 00 00  Hello World.....
00 00 00 00                                      ....
Format('%s', buff.p.Unpack(strPre + '20s')) .. ['Hello World']
---
buff.p.Pack(strPre + 'bbbb', 0, -0x80, 0x7f, 0x12) .. <Pointer:4/4>
buff.p.Pack(strPre + 'b', -0x81) .. the number must be between -128 and 127
buff.p.Pack(strPre + 'b', 0x80) .. the number must be between -128 and 127
00 80 7f 12                                      ....
Format('%d', buff.p.Unpack(strPre + 'bbbb')) .. ['0', '-128', '127', '18']
---
buff.p.Pack(strPre + 'BBB', 0x00, 0xff, 0x12) .. <Pointer:3/3>
buff.p.Pack(strPre + 'B', -1) .. the number must be between 0 and 255
buff.p.Pack(strPre + 'B', 0x100) .. the number must be between 0 and 255
00 ff 12                                         ...
Format('%d', buff.p.Unpack(strPre + 'BBB')) .. ['0', '255', '18']
---
buff.p.Pack(strPre + 'hhhh', 0, -0x8000, 0x7fff, 0x1234) .. <Pointer:8/8>
buff.p.Pack(strPre + 'h', -0x8001) .. the number must be between -32768 and 32767
buff.p.Pack(strPre + 'h', 0x8000) .. the number must be between -32768 and 32767
00 00 00 80 ff 7f 34 12                          ......4.
Format('%d', buff.p.Unpack(strPre + 'hhhh')) .. ['0', '-32768', '32767', '4660']
---
buff.p.Pack(strPre + 'HHHH', 0, 0x8000, 0xffff, 0x1234) .. <Pointer:8/8>
buff.p.Pack(strPre + 'H', -1) .. the number must be between 0 and 65535
buff.p.Pack(strPre + 'H', 0x10000) .. the number must be between 0 and 65535
00 00 00 80 ff ff 34 12                          ......4.
Format('%d', buff.p.Unpack(strPre + 'HHHH')) .. ['0', '32768', '65535', '4660']
---
buff.p.Pack(strPre + 'iiii', 0, -0x80000000, 0x7fffffff, 0x12345678) .. <Pointer:16/16>
buff.p.Pack(strPre + 'i', -0x80000001) .. the number must be between -2147483648 and 2147483647
buff.p.Pack(strPre + 'i', 0x80000000) .. the number must be between -2147483648 and 2147483647
00 00 00 00 00 00 00 80 ff ff ff 7f 78 56 34 12  ............xV4.
Format('%d', buff.p.Unpack(strPre + 'iiii')) .. ['0', '-2147483648', '2147483647', '305419896']
---
buff.p.Pack(strPre + 'III', 0x00000000, 0xffffffff, 0x12345678) .. <Pointer:12/12>
buff.p.Pack(strPre + 'I', -1) .. the number must be between 0 and 4294967295
buff.p.Pack(strPre + 'I', 0x100000000) .. the number must be between 0 and 4294967295
00 00 00 00 ff ff ff ff 78 56 34 12              ........xV4.
Format('%d', buff.p.Unpack(strPre + 'III')) .. ['0', '4294967295', '305419896']
---
buff.p.Pack(strPre + 'fff', 0, 1., .5) .. <Pointer:12/12>
00 00 00 00 00 00 80 3f 00 00 00 3f              .......?...?
Format('%f', buff.p.Unpack(strPre + 'fff')) .. ['0.000000', '1.000000', '0.500000']
---
buff.p.Pack(strPre + 'ddd', 0, 1., .5) .. <Pointer:24/24>
00 00 00 00 00 00 00 00 00 00 00 00 00 00 f0 3f  ...............?
00 00 00 00 00 00 e0 3f                          .......?
Format('%f', buff.p.Unpack(strPre + 'ddd')) .. ['0.000000', '1.000000', '0.500000']
---
buff.p.Pack(strPre + '20s', 'Hello World') .. <Pointer:20/20>
48 65 6c 6c 6f 20 57 6f 72 6c 64 00 00 00 00 00  Hello World.....
00 00 00 00                                      ....
Format('%s', buff.p.Unpack(strPre + '20s')) .. ['Hello World']
======== Pointer#Pack() ========
======== Pointer#Put() ========
--------
int8:
1 element
00                                               .
2 elements
00 11                                            ..
6 elements
00 11 22 33 44 55                                .."3DU
0 element in list
1 element in list
00                                               .
2 elements in list
00 11                                            ..
6 elements in list
00 11 22 33 44 55                                .."3DU
0 element in iterator
1 element in iterator
00                                               .
2 elements in iterator
00 11                                            ..
6 elements in iterator
00 11 22 33 44 55                                .."3DU
--------
uint8:
1 element
00                                               .
2 elements
00 11                                            ..
6 elements
00 11 22 33 44 55                                .."3DU
0 element in list
1 element in list
00                                               .
2 elements in list
00 11                                            ..
6 elements in list
00 11 22 33 44 55                                .."3DU
0 element in iterator
1 element in iterator
00                                               .
2 elements in iterator
00 11                                            ..
6 elements in iterator
00 11 22 33 44 55                                .."3DU
--------
int16:
1 element
00 00                                            ..
2 elements
00 00 11 00                                      ....
6 elements
00 00 11 00 22 00 33 00 44 00 55 00              ....".3.D.U.
0 element in list
1 element in list
00 00                                            ..
2 elements in list
00 00 11 00                                      ....
6 elements in list
00 00 11 00 22 00 33 00 44 00 55 00              ....".3.D.U.
0 element in iterator
1 element in iterator
00 00                                            ..
2 elements in iterator
00 00 11 00                                      ....
6 elements in iterator
00 00 11 00 22 00 33 00 44 00 55 00              ....".3.D.U.
--------
uint16:
1 element
00 00                                            ..
2 elements
00 00 11 00                                      ....
6 elements
00 00 11 00 22 00 33 00 44 00 55 00              ....".3.D.U.
0 element in list
1 element in list
00 00                                            ..
2 elements in list
00 00 11 00                                      ....
6 elements in list
00 00 11 00 22 00 33 00 44 00 55 00              ....".3.D.U.
0 element in iterator
1 element in iterator
00 00                                            ..
2 elements in iterator
00 00 11 00                                      ....
6 elements in iterator
00 00 11 00 22 00 33 00 44 00 55 00              ....".3.D.U.
--------
int32:
1 element
00 00 00 00                                      ....
2 elements
00 00 00 00 11 00 00 00                          ........
6 elements
00 00 00 00 11 00 00 00 22 00 00 00 33 00 00 00  ........"...3...
44 00 00 00 55 00 00 00                          D...U...
0 element in list
1 element in list
00 00 00 00                                      ....
2 elements in list
00 00 00 00 11 00 00 00                          ........
6 elements in list
00 00 00 00 11 00 00 00 22 00 00 00 33 00 00 00  ........"...3...
44 00 00 00 55 00 00 00                          D...U...
0 element in iterator
1 element in iterator
00 00 00 00                                      ....
2 elements in iterator
00 00 00 00 11 00 00 00                          ........
6 elements in iterator
00 00 00 00 11 00 00 00 22 00 00 00 33 00 00 00  ........"...3...
44 00 00 00 55 00 00 00                          D...U...
--------
uint32:
1 element
00 00 00 00                                      ....
2 elements
00 00 00 00 11 00 00 00                          ........
6 elements
00 00 00 00 11 00 00 00 22 00 00 00 33 00 00 00  ........"...3...
44 00 00 00 55 00 00 00                          D...U...
0 element in list
1 element in list
00 00 00 00                                      ....
2 elements in list
00 00 00 00 11 00 00 00                          ........
6 elements in list
00 00 00 00 11 00 00 00 22 00 00 00 33 00 00 00  ........"...3...
44 00 00 00 55 00 00 00                          D...U...
0 element in iterator
1 element in iterator
00 00 00 00                                      ....
2 elements in iterator
00 00 00 00 11 00 00 00                          ........
6 elements in iterator
00 00 00 00 11 00 00 00 22 00 00 00 33 00 00 00  ........"...3...
44 00 00 00 55 00 00 00                          D...U...
--------
int64:
1 element
00 00 00 00 00 00 00 00                          ........
2 elements
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
6 elements
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
22 00 00 00 00 00 00 00 33 00 00 00 00 00 00 00  ".......3.......
44 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  D.......U.......
0 element in list
1 element in list
00 00 00 00 00 00 00 00                          ........
2 elements in list
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
6 elements in list
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
22 00 00 00 00 00 00 00 33 00 00 00 00 00 00 00  ".......3.......
44 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  D.......U.......
0 element in iterator
1 element in iterator
00 00 00 00 00 00 00 00                          ........
2 elements in iterator
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
6 elements in iterator
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
22 00 00 00 00 00 00 00 33 00 00 00 00 00 00 00  ".......3.......
44 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  D.......U.......
--------
uint64:
1 element
00 00 00 00 00 00 00 00                          ........
2 elements
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
6 elements
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
22 00 00 00 00 00 00 00 33 00 00 00 00 00 00 00  ".......3.......
44 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  D.......U.......
0 element in list
1 element in list
00 00 00 00 00 00 00 00                          ........
2 elements in list
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
6 elements in list
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
22 00 00 00 00 00 00 00 33 00 00 00 00 00 00 00  ".......3.......
44 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  D.......U.......
0 element in iterator
1 element in iterator
00 00 00 00 00 00 00 00                          ........
2 elements in iterator
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
6 elements in iterator
00 00 00 00 00 00 00 00 11 00 00 00 00 00 00 00  ................
22 00 00 00 00 00 00 00 33 00 00 00 00 00 00 00  ".......3.......
44 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  D.......U.......
--------
float:
1 element
00 00 00 00 00 00 00 00                          ........
2 elements
00 00 00 00 00 00 88 41 11 00 00 00 00 00 00 00  .......A........
6 elements
00 00 00 00 00 00 88 41 00 00 08 42 00 00 4c 42  .......A...B..LB
00 00 88 42 00 00 aa 42 33 00 00 00 00 00 00 00  ...B...B3.......
44 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  D.......U.......
0 element in list
1 element in list
00 00 00 00 00 00 00 00                          ........
2 elements in list
00 00 00 00 00 00 88 41 11 00 00 00 00 00 00 00  .......A........
6 elements in list
00 00 00 00 00 00 88 41 00 00 08 42 00 00 4c 42  .......A...B..LB
00 00 88 42 00 00 aa 42 33 00 00 00 00 00 00 00  ...B...B3.......
44 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  D.......U.......
0 element in iterator
1 element in iterator
00 00 00 00 00 00 00 00                          ........
2 elements in iterator
00 00 00 00 00 00 88 41 11 00 00 00 00 00 00 00  .......A........
6 elements in iterator
00 00 00 00 00 00 88 41 00 00 08 42 00 00 4c 42  .......A...B..LB
00 00 88 42 00 00 aa 42 33 00 00 00 00 00 00 00  ...B...B3.......
44 00 00 00 00 00 00 00 55 00 00 00 00 00 00 00  D.......U.......
--------
double:
1 element
00 00 00 00 00 00 00 00                          ........
2 elements
00 00 00 00 00 00 00 00 00 00 00 00 00 00 31 40  ..............1@
6 elements
00 00 00 00 00 00 00 00 00 00 00 00 00 00 31 40  ..............1@
00 00 00 00 00 00 41 40 00 00 00 00 00 80 49 40  ......A@......I@
00 00 00 00 00 00 51 40 00 00 00 00 00 40 55 40  ......Q@.....@U@
0 element in list
1 element in list
00 00 00 00 00 00 00 00                          ........
2 elements in list
00 00 00 00 00 00 00 00 00 00 00 00 00 00 31 40  ..............1@
6 elements in list
00 00 00 00 00 00 00 00 00 00 00 00 00 00 31 40  ..............1@
00 00 00 00 00 00 41 40 00 00 00 00 00 80 49 40  ......A@......I@
00 00 00 00 00 00 51 40 00 00 00 00 00 40 55 40  ......Q@.....@U@
0 element in iterator
1 element in iterator
00 00 00 00 00 00 00 00                          ........
2 elements in iterator
00 00 00 00 00 00 00 00 00 00 00 00 00 00 31 40  ..............1@
6 elements in iterator
00 00 00 00 00 00 00 00 00 00 00 00 00 00 31 40  ..............1@
00 00 00 00 00 00 41 40 00 00 00 00 00 80 49 40  ......A@......I@
00 00 00 00 00 00 51 40 00 00 00 00 00 40 55 40  ......Q@.....@U@
======== Pointer#Unpack() ========
buff.Pointer {|p| while (tbl = p.Unpack('B')):list {Format('%02x', tbl[0])}.Join(',')} .. 00,01,02,03,04,05,06,07,08,09,0a,0b,0c,0d,0e
buff.Pointer {|p| while (tbl = p.Unpack('H')):list {Format('%04x', tbl[0])}.Join(',')} .. 0100,0302,0504,0706,0908,0b0a,0d0c
buff.Pointer {|p| while (tbl = p.Unpack('I')):list {Format('%08x', tbl[0])}.Join(',')} .. 03020100,07060504,0b0a0908
buff.Pointer {|p| while (tbl = p.Unpack('>B')):list {Format('%02x', tbl[0])}.Join(',')} .. 00,01,02,03,04,05,06,07,08,09,0a,0b,0c,0d,0e
buff.Pointer {|p| while (tbl = p.Unpack('>H')):list {Format('%04x', tbl[0])}.Join(',')} .. 0001,0203,0405,0607,0809,0a0b,0c0d
buff.Pointer {|p| while (tbl = p.Unpack('>I')):list {Format('%08x', tbl[0])}.Join(',')} .. 00010203,04050607,08090a0b
buff.Pointer {|p| while (tbl = p.Unpack('4s')):list {tbl[0]}.Join(',')} .. abcd,efgh,ijkl,mnop,qrst,uvwx
======== Operators ========
p1 .. <Pointer:10/26>
p2 .. <Pointer:23/26>
p1 + 7 .. <Pointer:17/26>
7 + p1 .. <Pointer:17/26>
p1 - 7 .. <Pointer:3/26>
p1 - 10 .. <Pointer:0/26>
p1 - 11 .. pointer offset is out of range
p1 - p2 .. -13
p2 - p1 .. 13
p3 - p1 .. pointers must have the same target when the offset difference is calculated
