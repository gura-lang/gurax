======== PUnit ========
()
  ##0 CreateTuple()
(1,)
  ##0 CreateTuple()
  ##1 Value(1)
  ##2 TupleElem(offsetToTuple=0)
(1, 2, 3)
  ##0 CreateTuple()
  ##1 Value(1)
  ##2 TupleElem(offsetToTuple=0)
  ##3 Value(2)
  ##4 TupleElem(offsetToTuple=0)
  ##5 Value(3)
  ##6 TupleElem(offsetToTuple=0)
======== Property ========
Tuple
  #first            Any          R
  #last             Any          R
  #len              Number       R
  #tuple            Tuple        R
======== IndexGet ========
tbl .. ('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten')
tbl[] .. ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten']
tbl[0] .. zero
tbl[1] .. one
tbl[2] .. two
tbl[10] .. ten
tbl[11] .. specified position 11 exceeds the size of 11
tbl[0, 1] .. ['zero', 'one']
tbl[0, 1, 4, 10] .. ['zero', 'one', 'four', 'ten']
======== for statement ========
hello
world
3
4
5
======== assignment ========
3 4 5
======== not affected by implicit mapping ========
(3, 4, 5)
======== Tuple#Each() ========
tbl.Each():list .. ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'ten']
======== Tuple#IsEmpty() ========
().IsEmpty() .. true
(1, 2, 3).IsEmpty() .. false
======== Operator ========
() == () .. true
() != () .. false
() < () .. false
() <= () .. true
() > () .. false
() >= () .. true
() == (1,) .. false
() != (1,) .. true
() < (1,) .. true
() <= (1,) .. true
() > (1,) .. false
() >= (1,) .. false
(1,) == () .. false
(1,) != () .. true
(1,) < () .. false
(1,) <= () .. false
(1,) > () .. true
(1,) >= () .. true
(1, 2) == (1, 2) .. true
(1, 2) != (1, 2) .. false
(1, 2) < (1, 2) .. false
(1, 2) <= (1, 2) .. true
(1, 2) > (1, 2) .. false
(1, 2) >= (1, 2) .. true
(1, 2) == (1, 3) .. false
(1, 2) != (1, 3) .. true
(1, 2) < (1, 3) .. true
(1, 2) <= (1, 3) .. true
(1, 2) > (1, 3) .. false
(1, 2) >= (1, 3) .. false
(1, 3) == (1, 2) .. false
(1, 3) != (1, 2) .. true
(1, 3) < (1, 2) .. false
(1, 3) <= (1, 2) .. false
(1, 3) > (1, 2) .. true
(1, 3) >= (1, 2) .. true
(1, 2) == (1, 2, 3) .. false
(1, 2) != (1, 2, 3) .. true
(1, 2) < (1, 2, 3) .. true
(1, 2) <= (1, 2, 3) .. true
(1, 2) > (1, 2, 3) .. false
(1, 2) >= (1, 2, 3) .. false
(1, 2, 3) == (1, 2) .. false
(1, 2, 3) != (1, 2) .. true
(1, 2, 3) < (1, 2) .. false
(1, 2, 3) <= (1, 2) .. false
(1, 2, 3) > (1, 2) .. true
(1, 2, 3) >= (1, 2) .. true
======== Expansion ========
(['The', 'quick', 'brown'], 'fox', ['jumps', 'over'], ['the', 'lazy', 'dog']) .. (['The', 'quick', 'brown'], 'fox', ['jumps', 'over'], ['the', 'lazy', 'dog'])
(['The', 'quick', 'brown']*, 'fox', ['jumps', 'over']*, ['the', 'lazy', 'dog']*) .. ('The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog')
(('The', 'quick', 'brown'), 'fox', ('jumps', 'over'), ('the', 'lazy', 'dog')) .. (('The', 'quick', 'brown'), 'fox', ('jumps', 'over'), ('the', 'lazy', 'dog'))
(('The', 'quick', 'brown')*, 'fox', ('jumps', 'over')*, ('the', 'lazy', 'dog')*) .. ('The', 'quick', 'brown', 'fox', 'jumps', 'over', 'the', 'lazy', 'dog')
(Range(6), 6, 7, Range(8, 11)) .. (<Iterator:Range:begin=0:end=6:step=1>, 6, 7, <Iterator:Range:begin=8:end=11:step=1>)
(Range(6)*, 6, 7, Range(8, 11)*) .. (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
======== Sort ========
tuples .. [(2, 3, 3), (3, 2, 1), (1, 0, 1), (1, 3, 1), (1, 3, 1), (2, 1, 3), (0, 3, 1), (3, 2, 2), (2, 2, 2), (3, 0, 1), (0, 2, 0), (0, 1, 0), (0, 1, 3), (1, 2, 3), (0, 3, 2), (0, 1, 3), (2, 1, 0), (2, 3, 2), (2, 3, 2), (1, 1, 2)]
tuples.Sort() .. [(0, 1, 0), (0, 1, 3), (0, 1, 3), (0, 2, 0), (0, 3, 1), (0, 3, 2), (1, 0, 1), (1, 1, 2), (1, 2, 3), (1, 3, 1), (1, 3, 1), (2, 1, 0), (2, 1, 3), (2, 2, 2), (2, 3, 2), (2, 3, 2), (2, 3, 3), (3, 0, 1), (3, 2, 1), (3, 2, 2)]
======== Tuple |+| Tuple ========
() |+| () .. ()
(1,) |+| () .. (1,)
() |+| (2,) .. (2,)
(1,) |+| (2,) .. (1, 2)
(1, 2, 3, 4) |+| (5, 6, 7, 8) .. (1, 2, 3, 4, 5, 6, 7, 8)
([1, 2], [3, 4]) |+| ([5, 6], [7, 8]) .. ([1, 2], [3, 4], [5, 6], [7, 8])
a .. (1, 2, 3, 4)
a |+| (5, 6, 7, 8) .. (1, 2, 3, 4, 5, 6, 7, 8)
a .. (1, 2, 3, 4)
======== Any |+| Tuple, Tuple |+| Any ========
() |+| 111 .. (111,)
111 |+| () .. (111,)
(1, 2, 3, 4) |+| 111 .. (1, 2, 3, 4, 111)
111 |+| (1, 2, 3, 4) .. (111, 1, 2, 3, 4)
111 |+| (1, 2, 3, 4) |+| 222 .. (111, 1, 2, 3, 4, 222)
