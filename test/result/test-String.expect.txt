======== Property ========
String.__PropHandler__(`len) .. <PropHandler:len:Number:R>
String.__PropHandler__(`width) .. <PropHandler:width:Number:R>
======== String#Capitalize() ========
bubble -> Bubble
tasteful -> Tasteful
yell -> Yell
unarmed -> Unarmed
vest -> Vest
private -> Private
cowardly -> Cowardly
happen -> Happen
demonic -> Demonic
entertaining -> Entertaining
aaaaaa -> Aaaaaa
zzzzzz -> Zzzzzz
AAAAAA -> AAAAAA
ZZZZZZ -> ZZZZZZ
======== String#Center() ========
  bubble  
 tasteful 
   yell   
  unarmed 
   vest   
  private 
 cowardly 
  happen  
  demonic 
entertaining
..bubble..
.tasteful.
...yell...
..unarmed.
...vest...
..private.
.cowardly.
..happen..
..demonic.
entertaining
======== String#Chop() ========
======== String#DecodeURI() ========
======== String#Each() ========
[''.Each()] .. []
['a'.Each()] .. ['a']
['abcdefg'.Each()] .. ['a', 'b', 'c', 'd', 'e', 'f', 'g']
[''.Each():utf8] .. []
['a'.Each():utf8] .. [97]
['abcdefg'.Each():utf8] .. [97, 98, 99, 100, 101, 102, 103]
[''.Each():utf32] .. []
['a'.Each():utf32] .. [97]
['abcdefg'.Each():utf32] .. [97, 98, 99, 100, 101, 102, 103]
[Format('0x%06x', str.Each():utf8)] .. ['0xe38182', '0xe38184', '0xe38186', '0xe38188', '0xe3818a']
[Format('0x%02x', str.Each():utf32)] .. ['0x3042', '0x3044', '0x3046', '0x3048', '0x304a']
======== String#EachLine() ========
[''.EachLine()] .. []
['a'.EachLine()] .. ['a']
['line1'.EachLine()] .. ['line1']
['line1\n'.EachLine()] .. ['line1\n']
['line1\nline2'.EachLine()] .. ['line1\n', 'line2']
['line1\nline2\n'.EachLine()] .. ['line1\n', 'line2\n']
['line1\nline2\nline3'.EachLine()] .. ['line1\n', 'line2\n', 'line3']
['line1\nline2\nline3\n'.EachLine()] .. ['line1\n', 'line2\n', 'line3\n']
['line1'.EachLine():chop] .. ['line1']
['line1\n'.EachLine():chop] .. ['line1']
['line1\nline2'.EachLine():chop] .. ['line1', 'line2']
['line1\nline2\n'.EachLine():chop] .. ['line1', 'line2']
['line1\nline2\nline3'.EachLine():chop] .. ['line1', 'line2', 'line3']
['line1\nline2\nline3\n'.EachLine():chop] .. ['line1', 'line2', 'line3']
'line1\nline2\nline3\n'.EachLine():list .. ['line1\n', 'line2\n', 'line3\n']
'line1\nline2\nline3\n'.EachLine():list {|str| str.Upper()} .. ['LINE1\n', 'LINE2\n', 'LINE3\n']
======== String#Embed() ========
======== String#Encode() ========
======== String#EncodeURI() ========
======== String#StartsWith(), String#EndsWith() ========
str .. abcdefghijklmn
str.StartsWith('abcd') .. true
str.StartsWith('abdd') .. false
str.StartsWith('ABCD') .. false
str.StartsWith('ABCD'):icase .. true
str.EndsWith('klmn') .. true
str.EndsWith('klmm') .. false
str.EndsWith('KLMN') .. false
str.EndsWith('KLMN'):icase .. true
str.StartsWith('defg', 3) .. true
str.EndsWith('ghij', 10) .. true
str.StartsWith('abcd'):rest .. efghijklmn
str.StartsWith('abdd'):rest .. <Nil>
str.StartsWith('ABCD'):rest .. <Nil>
str.StartsWith('ABCD'):rest:icase .. efghijklmn
str.EndsWith('klmn'):rest .. klmn
str.EndsWith('klmm'):rest .. <Nil>
str.EndsWith('KLMN'):rest .. <Nil>
str.EndsWith('KLMN'):rest:icase .. klmn
str.StartsWith('defg', 3):rest .. hijklmn
str.EndsWith('ghij', 10):rest .. ghijklmn
======== String#Escape() ========
======== String#EscapeHTML() ========
======== String#Find() ========
str .. abcdefghijklmn
str.Find('a') .. 0
str.Find('d') .. 3
str.Find('n') .. 13
str.Find('z') .. <Nil>
str.Find('a', 1) .. <Nil>
str.Find('d', 1) .. 3
str.Find('n', 1) .. 13
str.Find('a', 6) .. <Nil>
str.Find('d', 6) .. <Nil>
str.Find('n', 6) .. 13
str.Find('abcd') .. 0
str.Find('defg') .. 3
str.Find('deff') .. <Nil>
str.Find('ABCD') .. <Nil>
str.Find('DEFG') .. <Nil>
str.Find('ABCD'):icase .. 0
str.Find('DEFG'):icase .. 3
str .. あいうえおかきくけこ
str.Find('あ') .. 0
str.Find('お') .. 4
str.Find('こ') .. 9
str.Find('ん') .. <Nil>
str.Find('あいうえ') .. 0
str.Find('おかきく') .. 4
str.Find('おかきき') .. <Nil>
======== String#Fold() ========
======== String#Foldw() ========
======== String#Format() ========
======== String#Left() ========
bubble        .. ""
tasteful      .. ""
yell          .. ""
unarmed       .. ""
vest          .. ""
private       .. ""
cowardly      .. ""
happen        .. ""
demonic       .. ""
entertaining  .. ""
bubble        .. "bubble"
tasteful      .. "tastef"
yell          .. "yell"
unarmed       .. "unarme"
vest          .. "vest"
private       .. "privat"
cowardly      .. "coward"
happen        .. "happen"
demonic       .. "demoni"
entertaining  .. "entert"
======== String#LJust() ========
bubble    
tasteful  
yell      
unarmed   
vest      
private   
cowardly  
happen    
demonic   
entertaining
bubble....
tasteful..
yell......
unarmed...
vest......
private...
cowardly..
happen....
demonic...
entertaining
======== String#Uppper(), String#Lower() ========
'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.Upper() .. ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ
'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.Lower() .. abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz
======== String#Mid() ========
'Hello World'.Mid(0) .. Hello World
'Hello World'.Mid(6) .. World
'Hello World'.Mid(9) .. ld
'Hello World'.Mid(10) .. d
'Hello World'.Mid(-1) .. d
'Hello World'.Mid(-2) .. ld
'Hello World'.Mid(11) .. specified position 11 exceeds the string's size of 11
'Hello World'.Mid(12) .. specified position 12 exceeds the string's size of 11
'Hello World'.Mid(-11) .. Hello World
'Hello World'.Mid(-12) .. specified position -12 exceeds the string's size of 11
words10 .. ['bubble', 'tasteful', 'yell', 'unarmed', 'vest', 'private', 'cowardly', 'happen', 'demonic', 'entertaining']
words10::Mid(0) .. ['bubble', 'tasteful', 'yell', 'unarmed', 'vest', 'private', 'cowardly', 'happen', 'demonic', 'entertaining']
words10::Mid(1) .. ['ubble', 'asteful', 'ell', 'narmed', 'est', 'rivate', 'owardly', 'appen', 'emonic', 'ntertaining']
words10::Mid(6) .. specified position 6 exceeds the string's size of 6
words10::Mid(0, 0) .. ['', '', '', '', '', '', '', '', '', '']
words10::Mid(1, 4) .. ['ubbl', 'aste', 'ell', 'narm', 'est', 'riva', 'owar', 'appe', 'emon', 'nter']
words10::Mid(6, 4) .. specified position 6 exceeds the string's size of 6
======== String#Print() ========
======== String#Println() ========
======== String#Replace() ========
str .. A brown fox jumps over the lazy dog.
str.Replace('', '#') .. #A# #b#r#o#w#n# #f#o#x# #j#u#m#p#s# #o#v#e#r# #t#h#e# #l#a#z#y# #d#o#g#.#
str.Replace('brown', 'red') .. A red fox jumps over the lazy dog.
str.Replace('.', '!!!') .. A brown fox jumps over the lazy dog!!!
str.Replace('fox', 'FOX') .. A brown FOX jumps over the lazy dog.
str.Replace('fox', 'dog') .. A brown dog jumps over the lazy dog.
str.Replace('fox', 'f-o-x') .. A brown f-o-x jumps over the lazy dog.
str.Replace('FOX', 'f-o-x') .. A brown fox jumps over the lazy dog.
str.Replace('FOX', 'f-o-x'):icase .. A brown f-o-x jumps over the lazy dog.
str.Replace('fox', 'FOX') .. A brown FOX jumps over the lazy dog.
str.Replace('fox', 'FOX') .. A brown FOX jumps over the lazy dog.
str.Replace('fox', 'FOX') .. A brown FOX jumps over the lazy dog.
str .. abcdef abcdef abcdef abcdef abcdef
str.Replace('abcdef', 'ABCDEF') .. ABCDEF ABCDEF ABCDEF ABCDEF ABCDEF
str.Replace('abcdef', 'ABCDEF', 0) .. abcdef abcdef abcdef abcdef abcdef
str.Replace('abcdef', 'ABCDEF', 1) .. ABCDEF abcdef abcdef abcdef abcdef
str.Replace('abcdef', 'ABCDEF', 3) .. ABCDEF ABCDEF ABCDEF abcdef abcdef
str.Replace('abcdef', 'ABCDEF', 10) .. ABCDEF ABCDEF ABCDEF ABCDEF ABCDEF
======== String#ReplaceM() ========
str .. A brown fox jumps over the lazy dog.
str.ReplaceM(['fox', 'dog', 'dog', 'fox']) .. A brown dog jumps over the lazy fox.
str.ReplaceM(['FOX', 'dog', 'DOG', 'fox']) .. A brown fox jumps over the lazy dog.
str.ReplaceM(['FOX', 'dog', 'DOG', 'fox']):icase .. A brown dog jumps over the lazy fox.
str .. abcdef abcdef abcdef abcdef abcdef
str.ReplaceM(['abc', 'ABC', 'def', 'DEF']) .. ABCDEF ABCDEF ABCDEF ABCDEF ABCDEF
str.ReplaceM(['abc', 'ABC', 'def', 'DEF'], 0) .. abcdef abcdef abcdef abcdef abcdef
str.ReplaceM(['abc', 'ABC', 'def', 'DEF'], 1) .. ABCdef abcdef abcdef abcdef abcdef
str.ReplaceM(['abc', 'ABC', 'def', 'DEF'], 3) .. ABCDEF ABCdef abcdef abcdef abcdef
str.ReplaceM(['abc', 'ABC', 'def', 'DEF'], 10) .. ABCDEF ABCDEF ABCDEF ABCDEF ABCDEF
======== String#Right() ========
bubble        .. ""
tasteful      .. ""
yell          .. ""
unarmed       .. ""
vest          .. ""
private       .. ""
cowardly      .. ""
happen        .. ""
demonic       .. ""
entertaining  .. ""
bubble        .. "bubble"
tasteful      .. "steful"
yell          .. "yell"
unarmed       .. "narmed"
vest          .. "vest"
private       .. "rivate"
cowardly      .. "wardly"
happen        .. "happen"
demonic       .. "emonic"
entertaining  .. "aining"
======== String#RJust() ========
    bubble
  tasteful
      yell
   unarmed
      vest
   private
  cowardly
    happen
   demonic
entertaining
....bubble
..tasteful
......yell
...unarmed
......vest
...private
..cowardly
....happen
...demonic
entertaining
======== String#Split() ========
======== String#Strip() ========
''.Strip() .. ''
'abcdefg'.Strip() .. 'abcdefg'
' abcdefg'.Strip() .. 'abcdefg'
'abcdefg '.Strip() .. 'abcdefg'
' abcdefg '.Strip() .. 'abcdefg'
'   abcdefg'.Strip() .. 'abcdefg'
'abcdefg   '.Strip() .. 'abcdefg'
'   abcdefg   '.Strip() .. 'abcdefg'
'\nabcdefg\n'.Strip() .. 'abcdefg'
'\tabcdefg\t'.Strip() .. 'abcdefg'
'\n \t\n \tabcdefg\n \t\n \t'.Strip() .. 'abcdefg'
======== String#StripLeft() ========
''.StripLeft() .. ''
'abcdefg'.StripLeft() .. 'abcdefg'
' abcdefg'.StripLeft() .. 'abcdefg'
'abcdefg '.StripLeft() .. 'abcdefg '
' abcdefg '.StripLeft() .. 'abcdefg '
'   abcdefg'.StripLeft() .. 'abcdefg'
'abcdefg   '.StripLeft() .. 'abcdefg   '
'   abcdefg   '.StripLeft() .. 'abcdefg   '
'\nabcdefg\n'.StripLeft() .. 'abcdefg\n'
'\tabcdefg\t'.StripLeft() .. 'abcdefg\t'
'\n \t\n \tabcdefg\n \t\n \t'.StripLeft() .. 'abcdefg\n \t\n \t'
======== String#StripRight() ========
''.StripRight() .. ''
'abcdefg'.StripRight() .. 'abcdefg'
' abcdefg'.StripRight() .. ' abcdefg'
'abcdefg '.StripRight() .. 'abcdefg'
' abcdefg '.StripRight() .. ' abcdefg'
'   abcdefg'.StripRight() .. '   abcdefg'
'abcdefg   '.StripRight() .. 'abcdefg'
'   abcdefg   '.StripRight() .. '   abcdefg'
'\nabcdefg\n'.StripRight() .. '\nabcdefg'
'\tabcdefg\t'.StripRight() .. '\tabcdefg'
'\n \t\n \tabcdefg\n \t\n \t'.StripRight() .. '\n \t\n \tabcdefg'
======== String#ToBinary() ========
======== String#ToReader() ========
======== String#ToSymbol() ========
======== String#ToTemplate() ========
======== String#Translator() ========
======== String#UnescapeHTML() ========
======== String#ZenToHan() ========
======== String#len, String#width ========
str .. abcdefghijklmn
str.len .. 14
str.width .. 14
str .. あいうえおかきくけこ
str.len .. 10
str.width .. 20
