======== PUnit ========
try {f()}
  ##0 Lookup(`f)
  ##1 Argument()
  ##2 Call(cont=##3)
try {f()} catch {g()}
  ##0 BeginTryBlock(branchdest=##5)
  ##1 Lookup(`f)
  ##2 Argument()
  ##3 Call(cont=##4)
  ##4 EndTryBlock(cont=##9)
  ##5 JumpIfNoCatchAny(branchdest=##9,nil), DiscardValue()
  ##6 Lookup(`g)
  ##7 Argument()
  ##8 Call(cont=##9)
  ##9 NoOperation()
try {f()} catch {|e| g()}
  ##0 BeginTryBlock(branchdest=##5)
  ##1 Lookup(`f)
  ##2 Argument()
  ##3 Call(cont=##4)
  ##4 EndTryBlock(cont=##12)
  ##5 JumpIfNoCatchAny(branchdest=##12,nil)
  ##6 PushFrame<Block>()
  ##7 AssignToDeclArg(`e), DiscardValue()
  ##8 Lookup(`g)
  ##9 Argument()
  ##10 Call(cont=##11)
  ##11 PopFrame()
  ##12 NoOperation()
try {f()} catch(Error.SyntaxError) {|e| g()}
  ##0 BeginTryBlock(branchdest=##5)
  ##1 Lookup(`f)
  ##2 Argument()
  ##3 Call(cont=##4)
  ##4 EndTryBlock(cont=##18)
  ##5 Value(<Nil>)
  ##6 Lookup(`Error)
  ##7 Member_Normal(`SyntaxError)
  ##8 Cast(ErrorType)
  ##9 JumpIfNoCatch(branchdest=##17)
  ##10 PushFrame<Block>()
  ##11 AssignToDeclArg(`e), DiscardValue()
  ##12 Lookup(`g)
  ##13 Argument()
  ##14 Call(cont=##15)
  ##15 PopFrame()
  ##16 Jump(cont=##18)
  ##17 FailCatch(<Nil>)
  ##18 NoOperation()
try {f()} catch(Error.SyntaxError) {g()} catch(Error.KeyError) {h()}
  ##0 BeginTryBlock(branchdest=##5)
  ##1 Lookup(`f)
  ##2 Argument()
  ##3 Call(cont=##4)
  ##4 EndTryBlock(cont=##24)
  ##5 Value(<Nil>)
  ##6 Lookup(`Error)
  ##7 Member_Normal(`SyntaxError)
  ##8 Cast(ErrorType)
  ##9 JumpIfNoCatch(branchdest=##14), DiscardValue()
  ##10 Lookup(`g)
  ##11 Argument()
  ##12 Call(cont=##13)
  ##13 Jump(cont=##24)
  ##14 Value(<Nil>)
  ##15 Lookup(`Error)
  ##16 Member_Normal(`KeyError)
  ##17 Cast(ErrorType)
  ##18 JumpIfNoCatch(branchdest=##23), DiscardValue()
  ##19 Lookup(`h)
  ##20 Argument()
  ##21 Call(cont=##22)
  ##22 Jump(cont=##24)
  ##23 FailCatch(<Nil>)
  ##24 NoOperation()
try {f()} catch(Error.SyntaxError) {f1()} catch(Error.KeyError) {f2()} catch {f3()}
  ##0 BeginTryBlock(branchdest=##5)
  ##1 Lookup(`f)
  ##2 Argument()
  ##3 Call(cont=##4)
  ##4 EndTryBlock(cont=##27)
  ##5 Value(<Nil>)
  ##6 Lookup(`Error)
  ##7 Member_Normal(`SyntaxError)
  ##8 Cast(ErrorType)
  ##9 JumpIfNoCatch(branchdest=##14), DiscardValue()
  ##10 Lookup(`f1)
  ##11 Argument()
  ##12 Call(cont=##13)
  ##13 Jump(cont=##27)
  ##14 Value(<Nil>)
  ##15 Lookup(`Error)
  ##16 Member_Normal(`KeyError)
  ##17 Cast(ErrorType)
  ##18 JumpIfNoCatch(branchdest=##23), DiscardValue()
  ##19 Lookup(`f2)
  ##20 Argument()
  ##21 Call(cont=##22)
  ##22 Jump(cont=##27)
  ##23 JumpIfNoCatchAny(branchdest=##27,nil), DiscardValue()
  ##24 Lookup(`f3)
  ##25 Argument()
  ##26 Call(cont=##27)
  ##27 NoOperation()
try {f()} catch {f3()} catch(Error.SyntaxError) {f1()} catch(Error.KeyError) {f2()}
  ##0 BeginTryBlock(branchdest=##5)
  ##1 Lookup(`f)
  ##2 Argument()
  ##3 Call(cont=##4)
  ##4 EndTryBlock(cont=##27)
  ##5 Value(<Nil>)
  ##6 Lookup(`Error)
  ##7 Member_Normal(`SyntaxError)
  ##8 Cast(ErrorType)
  ##9 JumpIfNoCatch(branchdest=##14), DiscardValue()
  ##10 Lookup(`f1)
  ##11 Argument()
  ##12 Call(cont=##13)
  ##13 Jump(cont=##27)
  ##14 Value(<Nil>)
  ##15 Lookup(`Error)
  ##16 Member_Normal(`KeyError)
  ##17 Cast(ErrorType)
  ##18 JumpIfNoCatch(branchdest=##23), DiscardValue()
  ##19 Lookup(`f2)
  ##20 Argument()
  ##21 Call(cont=##22)
  ##22 Jump(cont=##27)
  ##23 JumpIfNoCatchAny(branchdest=##27,nil), DiscardValue()
  ##24 Lookup(`f3)
  ##25 Argument()
  ##26 Call(cont=##27)
  ##27 NoOperation()
try {f()} catch(Error.SyntaxError, Error.KeyError) {f1()} catch {f3()}
  ##0 BeginTryBlock(branchdest=##5)
  ##1 Lookup(`f)
  ##2 Argument()
  ##3 Call(cont=##4)
  ##4 EndTryBlock(cont=##21)
  ##5 Value(<Nil>)
  ##6 Lookup(`Error)
  ##7 Member_Normal(`SyntaxError)
  ##8 Cast(ErrorType)
  ##9 Lookup(`Error)
  ##10 Member_Normal(`KeyError)
  ##11 Cast(ErrorType)
  ##12 JumpIfNoCatch(branchdest=##17), DiscardValue()
  ##13 Lookup(`f1)
  ##14 Argument()
  ##15 Call(cont=##16)
  ##16 Jump(cont=##21)
  ##17 JumpIfNoCatchAny(branchdest=##21,nil), DiscardValue()
  ##18 Lookup(`f3)
  ##19 Argument()
  ##20 Call(cont=##21)
  ##21 NoOperation()
try {f()} catch(Error.SyntaxError) {f1()} catch(Error.KeyError) {f2()} catch {f3()} else {f4()}
  ##0 BeginTryBlock(branchdest=##9)
  ##1 Lookup(`f)
  ##2 Argument()
  ##3 Call(cont=##4)
  ##4 EndTryBlock(cont=##5), DiscardValue()
  ##5 Lookup(`f4)
  ##6 Argument()
  ##7 Call(cont=##8)
  ##8 Jump(cont=##31)
  ##9 Value(<Nil>)
  ##10 Lookup(`Error)
  ##11 Member_Normal(`SyntaxError)
  ##12 Cast(ErrorType)
  ##13 JumpIfNoCatch(branchdest=##18), DiscardValue()
  ##14 Lookup(`f1)
  ##15 Argument()
  ##16 Call(cont=##17)
  ##17 Jump(cont=##31)
  ##18 Value(<Nil>)
  ##19 Lookup(`Error)
  ##20 Member_Normal(`KeyError)
  ##21 Cast(ErrorType)
  ##22 JumpIfNoCatch(branchdest=##27), DiscardValue()
  ##23 Lookup(`f2)
  ##24 Argument()
  ##25 Call(cont=##26)
  ##26 Jump(cont=##31)
  ##27 JumpIfNoCatchAny(branchdest=##31,nil), DiscardValue()
  ##28 Lookup(`f3)
  ##29 Argument()
  ##30 Call(cont=##31)
  ##31 NoOperation()
======== Catch-any may be placed anywhere ========
SyntaxError MESSAGE
SyntaxError MESSAGE
SyntaxError MESSAGE
SyntaxError MESSAGE
SyntaxError MESSAGE
SyntaxError MESSAGE
SyntaxError MESSAGE
SyntaxError MESSAGE
SyntaxError MESSAGE
