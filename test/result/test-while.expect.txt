======== PUnit ========
while (true) {}
  ##0 Value(<Nil>)
  ##1 Lookup(`true)
  ##2 JumpIfNot(branchDest=##6)
  ##3 DiscardValue()
  ##4 Value(<Nil>)
  ##5 Jump(cont=##1)
  ##6 NoOperation()
while (true):list {}
  ##0 CreateList()
  ##1 Jump(cont=##5)
  ##2 ListElem(offsetToList=0)
  ##3 Jump(cont=##9)
  ##4 ListElem(offsetToList=0)
  ##5 Lookup(`true)
  ##6 JumpIfNot(branchDest=##9)
  ##7 Value(<Nil>)
  ##8 Jump(cont=##4)
  ##9 NoOperation()
while (true):xlist {}
  ##0 CreateList()
  ##1 Jump(cont=##5)
  ##2 ListElem(offsetToList=0):xlist
  ##3 Jump(cont=##9)
  ##4 ListElem(offsetToList=0):xlist
  ##5 Lookup(`true)
  ##6 JumpIfNot(branchDest=##9)
  ##7 Value(<Nil>)
  ##8 Jump(cont=##4)
  ##9 NoOperation()
while (true) {|n| nil}
  ##0  PushFrame<Block>()
  ##1  GenIterator_Counter()
  ##2  Value(<Nil>)
  ##3  Lookup(`true)
  ##4  JumpIfNot(branchDest=##10)
  ##5  DiscardValue()
  ##6  EvalIterator(offsetToIterator=0,branchDest=##7)
  ##7  AssignToDeclArg(`n), DiscardValue()
  ##8  Lookup(`nil)
  ##9  Jump(cont=##3)
  ##10 RemoveValue(offset=1)
  ##11 PopFrame()
while (true):list {|n| nil}
  ##0  PushFrame<Block>()
  ##1  GenIterator_Counter()
  ##2  CreateList()
  ##3  Jump(cont=##7)
  ##4  ListElem(offsetToList=0)
  ##5  Jump(cont=##13)
  ##6  ListElem(offsetToList=0)
  ##7  Lookup(`true)
  ##8  JumpIfNot(branchDest=##13)
  ##9  EvalIterator(offsetToIterator=1,branchDest=##10)
  ##10 AssignToDeclArg(`n), DiscardValue()
  ##11 Lookup(`nil)
  ##12 Jump(cont=##6)
  ##13 RemoveValue(offset=1)
  ##14 PopFrame()
while (true):xlist {|n| nil}
  ##0  PushFrame<Block>()
  ##1  GenIterator_Counter()
  ##2  CreateList()
  ##3  Jump(cont=##7)
  ##4  ListElem(offsetToList=0):xlist
  ##5  Jump(cont=##13)
  ##6  ListElem(offsetToList=0):xlist
  ##7  Lookup(`true)
  ##8  JumpIfNot(branchDest=##13)
  ##9  EvalIterator(offsetToIterator=1,branchDest=##10)
  ##10 AssignToDeclArg(`n), DiscardValue()
  ##11 Lookup(`nil)
  ##12 Jump(cont=##6)
  ##13 RemoveValue(offset=1)
  ##14 PopFrame()
while (a < 3) {}
  ##0 Value(<Nil>)
  ##1 Lookup(`a)
  ##2 Value(3)
  ##3 BinaryOp(<)
  ##4 JumpIfNot(branchDest=##8)
  ##5 DiscardValue()
  ##6 Value(<Nil>)
  ##7 Jump(cont=##1)
  ##8 NoOperation()
while (a < 3) {|i| f(i)}
  ##0  PushFrame<Block>()
  ##1  GenIterator_Counter()
  ##2  Value(<Nil>)
  ##3  Lookup(`a)
  ##4  Value(3)
  ##5  BinaryOp(<)
  ##6  JumpIfNot(branchDest=##16)
  ##7  DiscardValue()
  ##8  EvalIterator(offsetToIterator=0,branchDest=##9)
  ##9  AssignToDeclArg(`i), DiscardValue()
  ##10 Lookup(`f)
  ##11 Argument()
  ##12 ArgSlot_Lookup(`i:##12,i,cont=##14)
  ##13 Lookup(`i)
  ##14 Call(cont=##15)
  ##15 Jump(cont=##3)
  ##16 RemoveValue(offset=1)
  ##17 PopFrame()
======== Create list ========
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
[9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
======== Scope test ========
sum = 55
i   = original I
