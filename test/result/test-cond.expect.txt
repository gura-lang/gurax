======== PUnit ========
cond(a, b)
  ##0 Lookup(`a)
  ##1 JumpIfNot(branchDest=##3,nil)
  ##2 Lookup(`b)
  ##3 NoOperation()
cond(a, b, c)
  ##0 Lookup(`a)
  ##1 JumpIfNot(branchDest=##4)
  ##2 Lookup(`b)
  ##3 Jump(cont=##5)
  ##4 Lookup(`c)
  ##5 NoOperation()
cond(a, f(v1, v2, v3))
  ##0  Lookup(`a)
  ##1  JumpIfNot(branchDest=##11,nil)
  ##2  Lookup(`f)
  ##3  Argument()
  ##4  ArgSlot_Lookup(`v1:##4,v1,cont=##6)
  ##5  Lookup(`v1)
  ##6  ArgSlot_Lookup(`v2:##6,v2,cont=##8)
  ##7  Lookup(`v2)
  ##8  ArgSlot_Lookup(`v3:##8,v3,cont=##10)
  ##9  Lookup(`v3)
  ##10 Call(cont=##11)
  ##11 NoOperation()
cond(a, f(v1, v2, v3), g(v1, v2, v3))
  ##0  Lookup(`a)
  ##1  JumpIfNot(branchDest=##12)
  ##2  Lookup(`f)
  ##3  Argument()
  ##4  ArgSlot_Lookup(`v1:##4,v1,cont=##6)
  ##5  Lookup(`v1)
  ##6  ArgSlot_Lookup(`v2:##6,v2,cont=##8)
  ##7  Lookup(`v2)
  ##8  ArgSlot_Lookup(`v3:##8,v3,cont=##10)
  ##9  Lookup(`v3)
  ##10 Call(cont=##11)
  ##11 Jump(cont=##21)
  ##12 Lookup(`g)
  ##13 Argument()
  ##14 ArgSlot_Lookup(`v1:##14,v1,cont=##16)
  ##15 Lookup(`v1)
  ##16 ArgSlot_Lookup(`v2:##16,v2,cont=##18)
  ##17 Lookup(`v2)
  ##18 ArgSlot_Lookup(`v3:##18,v3,cont=##20)
  ##19 Lookup(`v3)
  ##20 Call(cont=##21)
  ##21 NoOperation()
======== Basic Test ========
cond(true, 3) .. 3
cond(false, 3) .. <Nil>
cond(true, 3, 5) .. 3
cond(false, 3, 5) .. 5
cond(true, 'true', 'false') .. true
cond(false, 'true', 'false') .. false
{x = y = 0, v = cond(true, x += 1, y += 3), [v, x, y]} .. [1, 1, 0]
{x = y = 0, v = cond(false, x += 1, y += 3), [v, x, y]} .. [3, 0, 3]
