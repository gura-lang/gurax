======== PUnit ========
cond(a, b)
  ##0 Lookup(`a)
  ##1 NilJumpIfNot(branchdest=##3)
  ##2 Lookup(`b)
  ##3 NoOperation()
cond(a, b, c)
  ##0 Lookup(`a)
  ##1 JumpIfNot(branchdest=##4)
  ##2 Lookup(`b)
  ##3 Jump(cont=##5)
  ##4 Lookup(`c)
  ##5 NoOperation()
cond(a, f(v1, v2, v3))
  ##0 Lookup(`a)
  ##1 NilJumpIfNot(branchdest=##14)
  ##2 Lookup(`f)
  ##3 Argument()
  ##4 BeginArgSlot(`v1:##4,sentinel=##6,branchdest=##7)
  ##5 Lookup(`v1)
  ##6 EndArgSlot()
  ##7 BeginArgSlot(`v2:##7,sentinel=##9,branchdest=##10)
  ##8 Lookup(`v2)
  ##9 EndArgSlot()
  ##10 BeginArgSlot(`v3:##10,sentinel=##12,branchdest=##13)
  ##11 Lookup(`v3)
  ##12 EndArgSlot()
  ##13 Call(cont=##14)
  ##14 NoOperation()
cond(a, f(v1, v2, v3), g(v1, v2, v3))
  ##0 Lookup(`a)
  ##1 JumpIfNot(branchdest=##15)
  ##2 Lookup(`f)
  ##3 Argument()
  ##4 BeginArgSlot(`v1:##4,sentinel=##6,branchdest=##7)
  ##5 Lookup(`v1)
  ##6 EndArgSlot()
  ##7 BeginArgSlot(`v2:##7,sentinel=##9,branchdest=##10)
  ##8 Lookup(`v2)
  ##9 EndArgSlot()
  ##10 BeginArgSlot(`v3:##10,sentinel=##12,branchdest=##13)
  ##11 Lookup(`v3)
  ##12 EndArgSlot()
  ##13 Call(cont=##14)
  ##14 Jump(cont=##27)
  ##15 Lookup(`g)
  ##16 Argument()
  ##17 BeginArgSlot(`v1:##17,sentinel=##19,branchdest=##20)
  ##18 Lookup(`v1)
  ##19 EndArgSlot()
  ##20 BeginArgSlot(`v2:##20,sentinel=##22,branchdest=##23)
  ##21 Lookup(`v2)
  ##22 EndArgSlot()
  ##23 BeginArgSlot(`v3:##23,sentinel=##25,branchdest=##26)
  ##24 Lookup(`v3)
  ##25 EndArgSlot()
  ##26 Call(cont=##27)
  ##27 NoOperation()
======== Basic Test ========
cond(true, 3) .. 3
cond(false, 3) .. <Nil>
cond(true, 3, 5) .. 3
cond(false, 3, 5) .. 5
cond(true, 'true', 'false') .. true
cond(false, 'true', 'false') .. false
{x = y = 0, v = cond(true, x += 1, y += 3), [v, x, y]} .. [1, 1, 0]
{x = y = 0, v = cond(false, x += 1, y += 3), [v, x, y]} .. [3, 0, 3]
