#!/usr/bin/env gurax
import(util.tester) {*}

TestCase('Property') {
	PrintProperty(Image)
}

TestCase('Property Test') {
	Tester(`Image.Blank(48, 32)) {|img|
		Tester(`img.format)
		Tester(`img.width)
		Tester(`img.height)
		Tester(`img.bytes)
		Tester(`img.bytesPerLine)
		Tester(`img.bytesPerPixel)
		Tester(`img.palette)
		Tester(`img.p)
	}
	Tester(`Image.Blank(48, 32):rgb) {|img|
		Tester(`img.format)
		Tester(`img.width)
		Tester(`img.height)
		Tester(`img.bytes)
		Tester(`img.bytesPerLine)
		Tester(`img.bytesPerPixel)
		Tester(`img.palette)
		Tester(`img.p)
	}
}

TestCase('Image#Fill()') {
}

TestCase('Image#FillRect()') {
}

TestCase('Image#Flip()') {
}

TestCase('Image#GetPixel()') {
}

TestCase('Image#MapAlphaLevel()') {
	img = Image.Blank(16, 16)
	p = img.p
	repeat (16 * 16) {|i| p.Put(`uint8, [i % 16, (i % 16) + 0x10, (i % 16) + 0x20, i])}
	mapLinear = Binary(), mapLinear.p.Put(`uint8, 0..255)
	mapReverse = Binary(), mapReverse.p.Put(`uint8, 255..0)
	mapShort = Binary(), mapLinear.p.Put(`uint8, 0..254)
	Println('original')
	img.p.Dump()
	Println('linear')
	img.MapAlphaLevel(mapLinear).p.Dump()
	Println('reverse')
	img.MapAlphaLevel(mapReverse).p.Dump()
	Tester(`img.MapAlphaLevel(mapShort))
	Tester(`(Image.Blank(16, 16):rgb).MapAlphaLevel(mapLinear))
}

TestCase('Image#MapColorLevel()') {
	img = Image.Blank(16, 16)
	p = img.p
	repeat (16 * 16) {|i| p.Put(`uint8, [i, i, i, 0xff])}
	mapLinear = Binary(), mapLinear.p.Put(`uint8, 0..255)
	mapReverse = Binary(), mapReverse.p.Put(`uint8, 255..0)
	mapShort = Binary(), mapLinear.p.Put(`uint8, 0..254)
	Println('original')
	img.p.Dump()
	Println('linear, linear, linear')
	img.MapColorLevel(mapLinear, mapLinear, mapLinear).p.Dump()
	Println('reverse, linear, linear')
	img.MapColorLevel(mapReverse, mapLinear, mapLinear).p.Dump()
	Println('linear, reverse, linear')
	img.MapColorLevel(mapLinear, mapReverse, mapLinear).p.Dump()
	Println('linear, linear, reverse')
	img.MapColorLevel(mapLinear, mapLinear, mapReverse).p.Dump()
	Tester(`img.MapColorLevel(mapShort, mapLinear, mapLinear))
	Tester(`img.MapColorLevel(mapLinear, mapShort, mapLinear))
	Tester(`img.MapColorLevel(mapLinear, mapLinear, mapShort))
}

TestCase('Image#PutPixel()') {
}

TestCase('Image#Paste()') {
}

TestCase('Image#Read()') {
}

TestCase('Image#Resize()') {
}

TestCase('Image#ResizePaste()') {
}

TestCase('Image#Rotate()') {
}

TestCase('Image#Scan()') {
	img = Image.Blank(5, 3)
	f(pixel:Pixel):map = Format('%d-%d', pixel.x, pixel.y)
	Tester(`f(img.Scan()).Join(' '))
	Tester(`f(img.Scan(scanDir = `left_top_horz)).Join(' '))
	Tester(`f(img.Scan(scanDir = `left_top_vert)).Join(' '))
	Tester(`f(img.Scan(scanDir = `left_bottom_horz)).Join(' '))
	Tester(`f(img.Scan(scanDir = `left_bottom_vert)).Join(' '))
	Tester(`f(img.Scan(scanDir = `right_top_horz)).Join(' '))
	Tester(`f(img.Scan(scanDir = `right_top_vert)).Join(' '))
	Tester(`f(img.Scan(scanDir = `right_bottom_horz)).Join(' '))
	Tester(`f(img.Scan(scanDir = `right_bottom_vert)).Join(' '))
}

TestCase('Image#Write()') {
}
