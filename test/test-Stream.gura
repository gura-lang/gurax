#!/usr/bin/env gurax
import(util.tester) {*}

TestCase('Property') {
	Stream.PrintPropSlots()
}

TestCase('Cast') {
	f(s:Stream) = {s}
	g(s:Stream:w) = {s}
	Tester(`f(b''))
	Tester(`g(B''))
	Tester(`g(b''))
}

TestCase('Stream#Addcr()') {
}

TestCase('Stream#Delcr()') {
}

TestCase('Stream#Flush()') {
}

TestCase('Stream.Pipe()') {
	(buffSrc = B'').p.Put(`uint8, Range(256))
	buffDst = B''
	Stream.Pipe(buffSrc, buffDst)
	buffDst.Dump()
}

TestCase('Stream#PipeFrom()') {
	(buffSrc = B'').p.Put(`uint8, Range(256))
	buffDst = B''
	buffDst.Writer {|streamDst|
		streamDst.PipeFrom(buffSrc)
	}
	buffDst.Dump()
}

TestCase('Stream#PipeTo()') {
	(buffSrc = B'').p.Put(`uint8, Range(256))
	buffDst = B''
	buffSrc.Reader {|streamSrc|
		streamSrc.PipeTo(buffDst)
	}
	buffDst.Dump()
}

TestCase('Stream#Print()') {
}

TestCase('Stream#Printf()') {
}

TestCase('Stream#Println()') {
}

TestCase('Stream#Read()') {
}

TestCase('Stream#ReadLine()') {
	Open('test-Stream/sample.txt') {|f|
		while (line = f.ReadLine()) {
			Print(line)
		}
	}
}

TestCase('Stream#ReadLines()') {
	Print(Open('test-Stream/sample.txt').ReadLines())
	Println('using block')
	Open('test-Stream/sample.txt').ReadLines() {|line|
		Print(line)
	}
}

TestCase('Stream#ReadText()') {
	Print(Open('test-Stream/sample.txt').ReadText())
}

TestCase('Stream#Seek()') {
}

TestCase('Stream#SkipLines()') {
	buffSrc = bR'''
	line.1 abcdefghijklmn
	line.2 opqrstu
	line.3 vwxyz
	line.4 0123456789
	'''
	Print(buffSrc.Reader().ReadText())
	Println('SkipLines(0)')
	Print(buffSrc.Reader().SkipLines(0).ReadText())
	Println('SkipLines(1)')
	Print(buffSrc.Reader().SkipLines(1).ReadText())
	Println('SkipLines(2)')
	Print(buffSrc.Reader().SkipLines(2).ReadText())
	Println('SkipLines(3)')
	Print(buffSrc.Reader().SkipLines(3).ReadText())
	Println('SkipLines(4)')
	Print(buffSrc.Reader().SkipLines(4).ReadText())
	Println('SkipLines(5)')
	Print(buffSrc.Reader().SkipLines(5).ReadText())
}

TestCase('Stream#Write()') {
}

TestCase('Stream << Binary') {
	(buffSrc = B'').p.Put(`uint8, Range(256))
	buffDst = B''
	buffDst.Writer {|streamDst|
		streamDst << buffSrc
	}
	buffDst.Dump()
}

TestCase('Stream << Pointer') {
	(buffSrc = B'').p.Put(`uint8, Range(256))
	buffDst = B''
	buffDst.Writer {|streamDst|
		streamDst << buffSrc.p
		streamDst << buffSrc.p + 128
	}
	buffDst.Dump()
}

TestCase('Stream << Stream') {
	(buffSrc = B'').p.Put(`uint8, Range(256))
	buffDst = B''
	buffDst.Writer {|streamDst|
		streamDst << buffSrc.Reader()
	}
	buffDst.Dump()
}

TestCase('Stream << String') {
	buffDst = B''
	buffDst.Writer {|streamDst|
		strSrc = Chr(0x20..0x7f).Join()
		streamDst << strSrc
	}
	buffDst.Dump()
}

TestCase('ReadLines()') {
	Print(ReadLines('test-Stream/sample.txt'))
	Println('using block')
	ReadLines('test-Stream/sample.txt') {|line|
		Print(line)
	}
}
