#!/usr/bin/env gurax
//==============================================================================
// test-yaml.gura
//==============================================================================
import(util.tester) {*}
import(yaml)

TestYAML(title as String, text as String) = {
	TestTitle(title)
	Print('|' + text.EachLine())
	if (text.Find('---')) {
		value = yaml.Parse(text):multi
    Println('\n# Gurax Style')
		Println(cond(value, value, '(nil)')):noMap
    Println('\n# YAML Style')
		yaml.Write(sys.cout, value):multi
    Println('\n# JSON Style')
		yaml.Write(sys.cout, value):multi:json
	} else {
		value = yaml.Parse(text)
    Println('\n# Gurax Style')
		Println(cond(value, value, '(nil)')):noMap
    Println('\n# YAML Style')
		yaml.Write(sys.cout, value)
    Println('\n# JSON Style')
		yaml.Write(sys.cout, value):json
	}
}

TestYAML('Blank', '')

TestYAML('Example 2.1 Sequene of Scalars (ball players)', R'''
- Mark McGwire
- Sammy Sosa
- Ken Griffey
''')

TestYAML('Example 2.2 Mapping Scalars to Scalars (player statistics)', R'''
hr:  65    # Home runs
avg: 0.278 # Batting average
rbi: 147   # Runs Batted In
''')

TestYAML('Example 2.3 Mapping Scalars to Sequences (ball clubs in each league)', R'''
american:
- Boston Red Sox
- Detroit Tigers
- New York Yankees
national:
- New York Mets
- Chicago Cubs
- Atlanta Braves	
''')

TestYAML('Example 2.4 Sequence of Mappings (players\' statistics)', R'''
-
    name: Mark McGwire
    hr:   65
    avg:  0.278
-
    name: Sammy Sosa
    hr:   63
    avg:  0.288
''')

TestYAML('Example 2.5 Sequence of Sequences', R'''
- [name        , hr, avg  ]
- [Mark McGwire, 65, 0.278]
- [Sammy Sosa  , 63, 0.288]
''')

TestYAML('Example 2.6 Mapping of Mappings', R'''
Mark McGwire: {hr: 65, avg: 0.278}
Sammy Sosa: {
	hr: 63,
	avg: 0.288,
	}
''')

TestYAML('Example 2.7 Two Documents in a Stream (each with a leading comment)', R'''
# Ranking of 1998 home runs
---
- Mark McGwire
- Sammy Sosa
- Ken Griffey

# Team ranking
---
- Chicago Cubs
- St Louis Cardinals
''')

TestYAML('Example 2.8 Play by Play Feed from a Game', R'''
---
time: 20:03:20
player: Sammy Sosa
action: strike (miss)
...
---
time: 20:03:47
player: Sammy Sosa
action: grand slam
...
''')

TestYAML('Example 2.9 Single Document with Two Comments', R'''
---
hr: # 1998 hr ranking
- Mark McGwire
- Sammy Sosa
# 1998 rbi ranking
rbi:
- Sammy Sosa
- Ken Griffey
''')

TestYAML('Example 2.10 Node for “Sammy Sosa” appears twice in this document', R'''
---
hr:
- Mark McGwire
# Following node labeled SS
- &SS Sammy Sosa
rbi:
- *SS # Subsequent occurrence
- Ken Griffey
''')

TestYAML('Example 2.11 Mapping between Sequences', R'''
? - Detroit Tigers
  - Chicago cubs
: - 2001-07-23

? [ New York Yankees,
    Atlanta Braves ]
: [ 2001-07-02, 2001-08-12,
    2001-08-14 ]
''')

TestYAML('Example 2.12 Compact Nested Mapping', R'''
---
# Products purchased
- item    : Super Hoop
  quantity: 1
- item    : Basketball
  quantity: 4
- item    : Big Shoes
  quantity: 1
''')

TestYAML('Example 2.13 In literals, newlines are preserved', R'''
# ASCII Art
--- |
  \//||\/||
  // ||  ||__
''')

TestYAML('Example 2.14 In the folded scalars, newlines become spaces', R'''
--- >
  Mark McGwire's
  year was crippled
  by a knee injury.
''')

TestYAML('Example 2.15 Folded newlines are preserved for “more indented” and blank lines', R'''
--- >
 Sammy Sosa completed another
 fine season with great stats.

   63 Home Runs
   0.288 Batting Average

 What a year!
''')

TestYAML('Example 2.16 Indentation determines scope', R'''
name: Mark McGwire
accomplishment: >
  Mark set a major league
  home run record in 1998.
stats: |
  65 Home Runs
  0.278 Batting Average
''')

TestYAML('Example 2.17 Quoted Scalars', R'''
unicode: "Sosa did fine.\u263A"
control: "\b1998\t1999\t2000\n"
hex esc: "\x0d\x0a is \r\n"

single: '"Howdy!" he cried.'
quoted: ' # Not a ''comment''.'
tie-fighter: '|\-*-/|'
''')

TestYAML('Example 2.18 Multi-line Flow Scalars', R'''
plain:
  This unquoted scalar
  spans many lines.

quoted: "So does this
  quoted scalar.\n"
''')

TestYAML('Example 2.19 Integers', R'''
canonical: 12345
decimal: +12345
octal: 0o14
hexadecimal: 0xC
''')

TestYAML('Example 2.20 Floating Point', R'''
canonical: 1.23015e+3
exponential: 12.3015e+02
fixed: 1230.15
negative infinity: -.inf
not a number: .nan
''')

TestYAML('Example 2.21 Miscellaneous', R'''
null:
booleans: [ true, false ]
string: '012345'
''')

TestYAML('Example 2.22 Timestamps', R'''
canonical: 2001-12-15T02:59:43.1Z
iso8601: 2001-12-14t21:59:43.10-05:00
spaced: 2001-12-14 21:59:43.10 -5
date: 2002-12-14
''')

TestYAML('Example 2.23 Various Explicit Tags', R'''
---
not-date: !!str 2002-04-28

picture: !!binary |
 R0lGODlhDAAMAIQAAP//9/X
 17unp5WZmZgAAAOfn515eXv
 Pz7Y6OjuDg4J+fn5OTk6enp
 56enmleECcgggoBADs=

application specific tag: !something |
 The semantics of the tag
 above may be different for
 different documents.
''')

TestYAML('Example 2.24 Global Tags', R'''
%TAG ! tag:clarkevans.com,2002:
--- !shape
  # Use the ! handle for presenting
  # tag:clarkevans.com,2002:circle
- !circle
  center: &ORIGIN {x: 73, y: 129}
  radius: 7
- !line
  start: *ORIGIN
  finish: { x: 89, y: 102 }
- !label
  start: *ORIGIN
  color: 0xFFEEBB
  text: Pretty vector drawing.
''')

TestYAML('Example 2.25 Unordered Sets', R'''
# Sets are represented as a
# Mapping where each key is
# associated with a null value
--- !!set
? Mark McGwire
? Sammy Sosa
? Ken Griffey
''')

TestYAML('Example 2.26 Ordered Mappings', R'''
# Ordered maps are represented as
# A sequence of mappings, with
# each mapping having one key
--- !!omap
- Mark McGwire: 65
- Sammy Sosa: 63
- Ken Griffey: 58
''')

TestYAML('Example 2.27 Invoice', R'''
--- !<tag:clarkevans.com,2002:invoice>
invoice: 34843
date   : 2001-01-23
bill-to: &id001
  given  : Chris
  family : Dumars
  address:
    lines: |
      458 Walkman Dr.
      Suite #292
    city    : Royal Oak
    state   : MI
    postal  : 48046
ship-to: *id001
product:
- sku         : BL394D
  quantity    : 4
  description : Basketball
  price       : 450.00
- sku         : BL4438H
  quantity    : 1
  description : Super Hoop
  price       : 2392.00
tax  : 251.42
total: 4443.52
comments:
  Late afternoon is best.
  Backup contact is Nancy
  Billsmer @ 338-4338.
''')

TestYAML('Example 2.28 Log File', R'''
---
Time: 2001-11-23 15:01:42 -5
User: ed
Warning:
  This is an error message
  for the log file
---
Time: 2001-11-23 15:02:31 -5
User: ed
Warning:
  A slightly different error
  message.
---
Date: 2001-11-23 15:03:17 -5
User: ed
Fatal:
  Unknown variable "bar"
Stack:
- file: TopClass.py
  line: 23
  code: |
    x = MoreObject("345\n")
- file: MoreClass.py
  line: 58
  code: |-
    foo = bar
''')

