#!/usr/bin/env gurax
import(wx)
import(cairo) {*}
import(png)
import(Samples)

M_PI = math.pi
sqrt(x) = math.Sqrt(x)

MyApp = class(wx.App) {
	OnInit() = {
		MyFrame(path.BaseName(path.FileName(sys.argv[0])), wx.Point(50, 50), wx.Size(800, 600)).Show()
		true
	}
}

MyFrame = class(wx.Frame) {
	canvas as Canvas
	__init__(title as String, pos as wx.Point, size as wx.Size) = {|nil, wx.ID_ANY, title, pos, size|
		PanelTop(this)
	}
}

PanelTop = class(wx.Panel) {
	canvas as Canvas
	textCtrl as wx.TextCtrl
	__init__(parent as wx.Window) = {|parent|
		sizerTop = wx.BoxSizer(wx.VERTICAL)
		this.SetSizer(sizerTop)
		wx.BoxSizer(wx.HORIZONTAL) {|hbox|
			sizerTop.Add(hbox, wx.SizerFlags(1).Expand())
			choices = Samples.samples:*name
			wx.ListBox(this, wx.ID_ANY, choices = choices) {|ctrl|
				hbox.Add(ctrl, wx.SizerFlags(1).Expand())
				wx.EVT_LISTBOX(ctrl, this.OnListBox)
				ctrl.SetSelection(0)
			}
			wx.BoxSizer(wx.VERTICAL) {|vbox|
				hbox.Add(vbox, wx.SizerFlags(3).Expand())
				Canvas(this) {|ctrl|
					vbox.Add(ctrl, wx.SizerFlags().Align(wx.CENTER))
					this.canvas = ctrl
				}
				wx.TextCtrl(this, wx.ID_ANY, style = wx.TE_MULTILINE) {|ctrl|
					vbox.Add(ctrl, wx.SizerFlags(1).Expand().Border(wx.TOP, 8))
					this.textCtrl = ctrl
				}
			}
		}
		this.EvalSample(Samples.samples[0])
	}
	EvalSample(sample as VType) = {
		this.canvas.EvalSample(sample)
		this.canvas.Refresh()
		this.textCtrl.SetValue(sample.Draw.expr.EachElem():*Textize().Join('\n'))
	}
	OnListBox(event as wx.CommandEvent) = {
		sample = Samples.samples[event.GetSelection()]
		this.EvalSample(sample)
	}
}

Canvas = class(wx.Panel) {
	img as Image
	__init__(parent as wx.Window) = {|parent, size = wx.Size(256, 256)|
		wx.EVT_PAINT(this, this.OnPaint)
	}
	EvalSample(sample as VType) = {
		surface = cairo_image_surface_create(CAIRO_FORMAT_ARGB32, 256, 256)
		cr = surface.create()
		sample().Draw(cr)
		cairo_fill(cr)
		cr.destroy()
		this.img = surface.ToImage()
		surface.destroy()
	}
	OnPaint(event as wx.PaintEvent) = {
		dc = wx.PaintDC(this)
		this.img && dc.DrawBitmap(this.img, 10, 10)
		dc = nil
	}
}

wx.ImplementApp(MyApp())
