#!/usr/bin/env gurax
// pi calculation by a continued-fraction
import(gmp)

generate_pi(cntFrac as Number) = {
	//              4
	// pi = -----------------
	//               1^2
	//      1 + -------------
	//                 2^2
	//          3 + ---------
	//                   3^2
	//              5 + -----
	//                   ...
	//4L / (cntFrac..1).reduce(2 * cntFrac + 1) {|n as gmp.Rational, accum as gmp.Rational|
	//	(2 * n - 1) + n * n / accum
	//}
	cntFracQ = gmp.Rational(cntFrac)
	accum = 2Lr * cntFrac + 1
	repeat (cntFrac - 1) {|i|
		n = cntFracQ - i
		accum = (2 * n - 1) + n * n / accum
	}
	4 / accum
}

blockCols = 5
blockRows = 20
gmp.Float.default_prec = 1000
pi = gmp.Float(generate_pi(10000))
Println('3')
Print(Format('%.f', pi).Split().Offset(2).\
	Fold(10):*Join().Fold(blockCols):*Join(' ').Fold(blockRows):*Join('\n'), '\n\n')
