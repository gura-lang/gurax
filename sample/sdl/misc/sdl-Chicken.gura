#!/usr/bin/env gurax
import(sdl) {*}
import(jpeg)
import(gif)

Chicken = struct {
	wd as Number
	x as Number
	y as Number
	xStep as Number
	dir as Symbol
	texturesL as Iterator
	texturesR as Iterator
	Render(renderer as SDL_Renderer):void = {
		texture = cond(this.dir == `left, this.texturesL, this.texturesR).NextValue()
		ht = texture.ht * this.wd / texture.wd
		SDL_RenderCopy(renderer, texture.entity, nil, SDL_Rect(this.x, 200 - ht, this.wd, ht))
	}
	Move(wdScreen as Number):void = {
		this.x += cond(this.dir == `left, -this.xStep, this.xStep)
		if (this.x + this.wd > wdScreen) {
			this.dir = `left
		} elsif (this.x <= 0) {
			this.dir = `right
		}
	}
}

Texture = class {
	entity as SDL_Texture
	wd as Number
	ht as Number
	__init__(renderer as SDL_Renderer, surface as SDL_Surface):map = {
		this.entity = SDL_CreateTextureFromSurface(renderer, surface)
		this.wd = surface.w
		this.ht = surface.h
		SDL_FreeSurface(surface)
	}
}


SDL_Init(SDL_INIT_EVERYTHING)
[wdScreen, htScreen] = [800, 600]
window = SDL_CreateWindow(path.FileName(sys.argv[0]), SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, wdScreen, htScreen, 0)
renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC)
textureBg = Texture(renderer, Image('seashore.jpg'))
event = SDL_Event()
x = 0, y = 0
wd = 100
images = gif.Content('chicken-anim.gif').EachImage():list
texturesChickenL = Texture(renderer, images)
texturesChickenR = Texture(renderer, images:*Flip(`horz))
chickens = [Chicken(wd, 10, 100, wd / 10, `left, texturesChickenL.Cycle(), texturesChickenR.Cycle())]
repeat {
	SDL_WaitEventTimeout(event, 100) // msec
	if (!event) {
		// nothing to do
	} elsif (event.type == SDL_QUIT) {
		break
	} elsif (event.type == SDL_KEYDOWN) {
		(event.key.keysym.sym == SDLK_ESCAPE) && break
	} elsif (event.type == SDL_MOUSEBUTTONDOWN) {
		//dir = choose(event.button, `left, `left, `right, `right)
		//chickens.add(Chicken(event.x, event.y, dir))
	}
	SDL_RenderCopy(renderer, textureBg.entity, nil, nil)
	chickens:*Render(renderer)
	chickens:*Move(wdScreen)
	SDL_RenderPresent(renderer)
}
SDL_DestroyRenderer(renderer)
SDL_DestroyWindow(window)
SDL_Quit()
