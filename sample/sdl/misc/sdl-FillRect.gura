#!/usr/bin/env gurax
import(sdl) {*}
import(jpeg)

I(fileName as String) = path.Join('../../resource', fileName)

Object = struct {
	x as Number
	y as Number
	xDir as Symbol
	yDir as Symbol
	color as Color
	xAdvance = 2
	yAdvance = 2
	Move(wdWindow as Number, htWindow as Number) = {
		if (this.x < 0) { this.xDir = `right }
		if (this.y < 0) { this.yDir = `down }
		if (this.x + 100 > wdWindow) { this.xDir = `left }
		if (this.y + 100 > htWindow) { this.yDir = `up}
		this.x += cond(this.xDir == `left, -this.xAdvance, +this.xAdvance)
		this.y += cond(this.yDir == `up, -this.yAdvance, +this.yAdvance)
	}
}

SDL_Init(SDL_INIT_EVERYTHING)
[wdWindow, htWindow] = [800, 600]
window = SDL_CreateWindow(path.FileName(sys.argv[0]), SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, wdWindow, htWindow, 0)
renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC)
event = SDL_Event()
textureBg = renderer.CreateTextureFromSurface(Image(I('rural-garden.jpg')))
xDirTbl = [`left, `right], yDirTbl = [`up, `down]
colorTbl = [Color.red, Color.green, Color.blue, Color.yellow]
objTbl = repeat (100):list {
	Object(Random.Int(wdWindow), Random.Int(htWindow), xDirTbl[Random.Int(2)], yDirTbl[Random.Int(2)], colorTbl[Random.Int(colorTbl.len)])
}
repeat {
	renderer.SetDrawColor(255, 255, 255, 0)
	renderer.Clear()
	renderer.SetDrawBlendMode(SDL_BLENDMODE_BLEND)
	objTbl.Each {|obj|
		renderer.SetDrawColor(obj.color.tupleRGB*, 128)
		renderer.FillRect((obj.x, obj.y, 100, 100))
		obj.Move(wdWindow, htWindow)
	}
	rtn = SDL_WaitEventTimeout(event, 10) // 10msec
	if (rtn == 0) {
		// nothing to do
	} elsif (event.type == SDL_KEYDOWN) {
		(event.key.keysym.sym == SDLK_ESCAPE) && break
	} elsif (event.type == SDL_QUIT) {
		break
	}
	renderer.Present()
}
renderer.Destroy()
window.Destroy()
SDL_Quit()
