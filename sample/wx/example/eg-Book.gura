#!/usr/bin/env gurax
import(wx)
import(image)

MyApp = class(wx.App) {
	OnInit() = {
		MyFrame(path.BaseName(path.FileName(sys.argv[0])), wx.Point(50, 50), wx.Size(800, 600)).Show()
		true
	}
}

MyFrame = class(wx.Frame) {
	__init__(title as String, pos as wx.Point, size as wx.Size) = {|nil, wx.ID_ANY, title, pos, size|
		PanelTop(this)
	}
}

imageIds = nil

PanelTop = class(wx.Panel) {
	nPage as Number = 0
	textCtrl as wx.TextCtrl
	simplebook as wx.SimpleBook
	__init__(parent as wx.Window) = {|parent|
		sizerTop = wx.BoxSizer(wx.VERTICAL)
		[imageList, imageIds:extern] = image.InitImageList(image.mini_icons)
		this.SetSizer(sizerTop)
		wx.BoxSizer(wx.HORIZONTAL) {|hbox|
			sizerTop.Add(hbox, wx.SizerFlags(4).Expand())
			wx.BoxSizer(wx.VERTICAL) {|vbox|
				hbox.Add(vbox, wx.SizerFlags(1).Expand())
				vbox.Add(wx.StaticText(this, wx.ID_ANY, 'Notebook'), wx.SizerFlags().Expand())
				wx.Notebook(this, wx.ID_ANY) {|book|
					vbox.Add(book, wx.SizerFlags(1).Expand())
					book.SetImageList(imageList)
					this.SetupPages(book)
					book.Bind(wx.EVT_NOTEBOOK_PAGE_CHANGED, this.OnBook, book)
					book.Bind(wx.EVT_NOTEBOOK_PAGE_CHANGING, this.OnBook, book)
				}
				vbox.Add(wx.StaticText(this, wx.ID_ANY, 'Treebook'), wx.SizerFlags().Expand())
				wx.Treebook(this, wx.ID_ANY) {|book|
					vbox.Add(book, wx.SizerFlags(1).Expand())
					['Page1', 'Page2', 'Page3', 'Page4', 'Page5'].Each {|label|
						wx.Panel(book) {|panel|
							book.AddPage(panel, label)
							wx.BoxSizer(wx.VERTICAL) {|vbox|
								panel.SetSizer(vbox)
								vbox.Add(wx.Button(panel, wx.ID_ANY, 'Content of ' + label), wx.SizerFlags(1).Expand())
							}
							book.AddSubPage(panel, 'hoge')
						}
					}
					book.Bind(wx.EVT_TREEBOOK_PAGE_CHANGED, this.OnBook, book)
					book.Bind(wx.EVT_TREEBOOK_PAGE_CHANGING, this.OnBook, book)
					book.Bind(wx.EVT_TREEBOOK_NODE_COLLAPSED, this.OnBook, book)
					book.Bind(wx.EVT_TREEBOOK_NODE_EXPANDED, this.OnBook, book)
				}
				vbox.Add(wx.StaticText(this, wx.ID_ANY, 'Listbook'), wx.SizerFlags().Expand())
				wx.Listbook(this, wx.ID_ANY) {|book|
					vbox.Add(book, wx.SizerFlags(1).Expand())
					this.SetupPages(book)
					book.Bind(wx.EVT_LISTBOOK_PAGE_CHANGED, this.OnBook, book)
					book.Bind(wx.EVT_LISTBOOK_PAGE_CHANGING, this.OnBook, book)
				}
			}
			wx.BoxSizer(wx.VERTICAL) {|vbox|
				hbox.Add(vbox, wx.SizerFlags(1).Expand().Border(wx.LEFT, 16))
				wx.BoxSizer(wx.HORIZONTAL) {|hbox|
					vbox.Add(hbox, wx.SizerFlags().Expand())
					hbox.Add(wx.StaticText(this, wx.ID_ANY, 'Simplebook'), wx.SizerFlags().Align(wx.CENTER))
					wx.Button(this, wx.ID_ANY, 'Next') {|ctrl|
						hbox.AddStretchSpacer(1)
						hbox.Add(ctrl, wx.SizerFlags())
						ctrl.Bind(wx.EVT_BUTTON, this.OnButton_Next)
					}
				}
				wx.Simplebook(this, wx.ID_ANY) {|book|
					vbox.Add(book, wx.SizerFlags(1).Expand())
					book.SetEffect(wx.SHOW_EFFECT_ROLL_TO_LEFT)
					book.SetEffectTimeout(1000)
					this.simplebook = book
				}
				vbox.Add(wx.StaticText(this, wx.ID_ANY, 'Toolbook'), wx.SizerFlags().Expand())
				wx.Toolbook(this, wx.ID_ANY) {|book|
					vbox.Add(book, wx.SizerFlags(1).Expand())
					book.SetImageList(imageList);
					//this.SetupPages(book)
				}
				vbox.Add(wx.StaticText(this, wx.ID_ANY, 'Choicebook'), wx.SizerFlags().Expand())
				wx.Choicebook(this, wx.ID_ANY) {|book|
					vbox.Add(book, wx.SizerFlags(1).Expand())
					this.SetupPages(book)
					book.Bind(wx.EVT_CHOICEBOOK_PAGE_CHANGED, this.OnBook, book)
					book.Bind(wx.EVT_CHOICEBOOK_PAGE_CHANGING, this.OnBook, book)
				}
			}
		}
		wx.TextCtrl(this, wx.ID_ANY, style = wx.TE_MULTILINE) {|ctrl|
			sizerTop.Add(ctrl, wx.SizerFlags(1).Expand().Border(wx.TOP, 4))
			this.textCtrl = ctrl
		}
	}
	OnBook(event as wx.BookCtrlEvent) = {
		nPage = event.GetSelection()
		eventName = event.GetEventType().name
		book = event.GetEventUserData()
		this.Printf('%s(%s)\n', eventName, book.GetPageText(nPage))
	}
	OnButton_Next(event) = {
		this.nPage += 1
		wx.Button(this.simplebook, wx.ID_ANY, Format('Page#%d', this.nPage)) {|ctrl|
			this.simplebook.ShowNewPage(ctrl)
		}
	}
	Printf(format as String, args*) = this.textCtrl.WriteText(Format(format, args*))
	SetupPages(book as wx.BookCtrlBase) = {
		['Page1', 'Page2', 'Page3', 'Page4', 'Page5'].Each {|label|
			wx.Panel(book) {|panel|
				book.AddPage(panel, label, imageId = imageIds[`action_forward])
				wx.BoxSizer(wx.VERTICAL) {|vbox|
					panel.SetSizer(vbox)
					vbox.Add(wx.Button(panel, wx.ID_ANY, 'Content of ' + label), wx.SizerFlags(1).Expand())
				}
			}
		}
	}
}

wx.ImplementApp(MyApp())
