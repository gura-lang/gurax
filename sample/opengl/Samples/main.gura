#!/usr/bin/env gurax
import(wx)
import(opengl) {*}
import(Samples)

AppMain = class(wx.App) {
	OnInit() = {
		FrameMain(path.BaseName(path.FileName(sys.argv[0])), wx.Point(50, 50), wx.Size(800, 600)).Show()
		true
	}
}

FrameMain = class(wx.Frame) {
	canvas as Canvas
	__init__(title as String, pos as wx.Point, size as wx.Size) = {|nil, wx.ID_ANY, title, pos, size|
		PanelTop(this)
	}
}

PanelTop = class(wx.Panel) {
	canvas as Canvas
	textCtrl_Init as wx.TextCtrl
	textCtrl_Reshape as wx.TextCtrl
	textCtrl_Display as wx.TextCtrl
	__init__(parent as wx.Window) = {|parent|
		sizerTop = wx.BoxSizer(wx.VERTICAL)
		this.SetSizer(sizerTop)
		wx.BoxSizer(wx.HORIZONTAL) {|hbox|
			sizerTop.Add(hbox, wx.SizerFlags(1).Expand())
			choices = Samples.samples:*name
			wx.ListBox(this, wx.ID_ANY, choices = choices) {|ctrl|
				hbox.Add(ctrl, wx.SizerFlags(1).Expand())
				wx.EVT_LISTBOX(ctrl, this.OnListBox)
				ctrl.SetSelection(0)
			}
			wx.BoxSizer(wx.VERTICAL) {|vbox|
				hbox.Add(vbox, wx.SizerFlags(3).Expand())
				Canvas(this) {|ctrl|
					vbox.Add(ctrl, wx.SizerFlags().Align(wx.CENTER))
					this.canvas = ctrl
				}
				wx.Notebook(this, wx.ID_ANY, style = wx.NB_FIXEDWIDTH) {|book|
					vbox.Add(book, wx.SizerFlags(1).Expand().Border(wx.TOP, 4))
					wx.TextCtrl(book, wx.ID_ANY, style = wx.TE_MULTILINE) {|ctrl|
						book.AddPage(ctrl, 'Init')
						ctrl.SetFont(wx.Font(12, wx.FONTFAMILY_TELETYPE,  wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL))
						this.textCtrl_Init = ctrl
					}
					wx.TextCtrl(book, wx.ID_ANY, style = wx.TE_MULTILINE) {|ctrl|
						book.AddPage(ctrl, 'Reshape')
						ctrl.SetFont(wx.Font(12, wx.FONTFAMILY_TELETYPE,  wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL))
						this.textCtrl_Reshape = ctrl
					}
					wx.TextCtrl(book, wx.ID_ANY, style = wx.TE_MULTILINE) {|ctrl|
						book.AddPage(ctrl, 'Display')
						ctrl.SetFont(wx.Font(12, wx.FONTFAMILY_TELETYPE,  wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL))
						this.textCtrl_Display = ctrl
					}
					book.SetSelection(2)
				}
			}
		}
		this.EvalSample(Samples.samples[0])
	}
	EvalSample(sample as Samples.SampleBase) = {
		this.canvas.EvalSample(sample)
		this.canvas.Refresh()
		this.textCtrl_Init.SetValue(sample.Init.expr.EachElem():*Textize('    ').Join('\n'))
		this.textCtrl_Reshape.SetValue(sample.Reshape.expr.EachElem():*Textize('    ').Join('\n'))
		this.textCtrl_Display.SetValue(sample.Display.expr.EachElem():*Textize('    ').Join('\n'))
	}
	OnListBox(event as wx.CommandEvent) = {
		sample = Samples.samples[event.GetSelection()]
		this.EvalSample(sample)
	}
}

Canvas = class(wx.GLCanvas) {
	m_context as wx.GLContext
	m_sample as Sample
	__init__(parent as wx.Window) = {|parent, wx.ID_ANY, size = wx.Size(400, 300)|
		this.m_context = wx.GLContext(this)
		this.Bind(wx.EVT_PAINT, this.OnPaint)
	}
	EvalSample(sample as Samples.SampleBase) = {
		this.m_sample = sample
		this.m_sample.Init()
		this.Refresh()
	}
	OnPaint(event as wx.PaintEvent) = {
		dc = wx.PaintDC(this)
		this.SetCurrent(this.m_context)
		this.m_sample && this.m_sample.Display()
		this.SwapBuffers()
		dc = nil
	}
}

wx.ImplementApp(AppMain())
