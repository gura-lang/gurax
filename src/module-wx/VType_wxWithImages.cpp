//==============================================================================
// VType_wxWithImages.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"""(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.WithImages, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.WithImages, `en)}

${help.ComposeMethodHelp(wx.WithImages, `en)}
)""";

static const char* g_docHelp_ja = u8R"""(
# 概要

# 定数

${help.ComposePropertyHelp(wx.WithImages, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.WithImages, `ja)}

${help.ComposeMethodHelp(wx.WithImages, `ja)}
)""";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.WithImages#AssignImageList(imageList as wx.ImageList)
Gurax_DeclareMethodAlias(wxWithImages, AssignImageList_gurax, "AssignImageList")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("imageList", VTYPE_wxImageList, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxWithImages, AssignImageList_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxImageList& value_imageList = args_gurax.Pick<Value_wxImageList>();
	wxImageList* imageList = value_imageList.GetEntityPtr();
	// Function body
	pEntity_gurax->AssignImageList(imageList);
	return Gurax::Value::nil();
}

// wx.WithImages#SetImageList(imageList as wx.ImageList)
Gurax_DeclareMethodAlias(wxWithImages, SetImageList_gurax, "SetImageList")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("imageList", VTYPE_wxImageList, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxWithImages, SetImageList_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxImageList& value_imageList = args_gurax.Pick<Value_wxImageList>();
	wxImageList* imageList = value_imageList.GetEntityPtr();
	// Function body
	pEntity_gurax->SetImageList(imageList);
	return Gurax::Value::nil();
}

// wx.WithImages#GetImageList() {block?}
Gurax_DeclareMethodAlias(wxWithImages, GetImageList_gurax, "GetImageList")
{
	Declare(VTYPE_wxImageList, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxWithImages, GetImageList_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxImageList(pEntity_gurax->GetImageList()));
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxWithImages
//------------------------------------------------------------------------------
VType_wxWithImages VTYPE_wxWithImages("WithImages");

void VType_wxWithImages::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_Object, Flag::Mutable);
	// Assignment of method
	Assign(Gurax_CreateMethod(wxWithImages, AssignImageList_gurax));
	Assign(Gurax_CreateMethod(wxWithImages, SetImageList_gurax));
	Assign(Gurax_CreateMethod(wxWithImages, GetImageList_gurax));
}

//------------------------------------------------------------------------------
// Value_wxWithImages
//------------------------------------------------------------------------------
VType& Value_wxWithImages::vtype = VTYPE_wxWithImages;

String Value_wxWithImages::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.WithImages");
}

Gurax_EndModuleScope(wx)
