//==============================================================================
// VType_wxGBSizerItem.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXGBSIZERITEM_H
#define GURAX_MODULE_WX_VTYPE_WXGBSIZERITEM_H
#include <gurax.h>
#include <wx/wx.h>
#include <wx/gbsizer.h>
#include "Util.h"
#include "VType_wxSizerItem.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxGBSizerItem
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxGBSizerItem : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxGBSizerItem VTYPE_wxGBSizerItem;

//------------------------------------------------------------------------------
// Value_wxGBSizerItem
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxGBSizerItem : public Value_wxSizerItem {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxGBSizerItem);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxGBSizerItem");
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxGBSizerItem() = delete;
	explicit Value_wxGBSizerItem(const wxGBSizerItem& entity, VType& vtype = VTYPE_wxGBSizerItem) :
		Value_wxSizerItem(entity, vtype) {}
	// Copy constructor/operator
	Value_wxGBSizerItem(const Value_wxGBSizerItem& src) = delete;
	Value_wxGBSizerItem& operator=(const Value_wxGBSizerItem& src) = delete;
	// Move constructor/operator
	Value_wxGBSizerItem(Value_wxGBSizerItem&& src) noexcept = delete;
	Value_wxGBSizerItem& operator=(Value_wxGBSizerItem&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxGBSizerItem() = default;
public:
	wxGBSizerItem& GetEntity() { return reinterpret_cast<wxGBSizerItem&>(Value_wxSizerItem::GetEntity()); }
	const wxGBSizerItem& GetEntity() const { return reinterpret_cast<const wxGBSizerItem&>(Value_wxSizerItem::GetEntity()); }
	wxGBSizerItem* GetEntityPtr() { return reinterpret_cast<wxGBSizerItem*>(Value_wxSizerItem::GetEntityPtr()); }\
	const wxGBSizerItem* GetEntityPtr() const { return reinterpret_cast<const wxGBSizerItem*>(Value_wxSizerItem::GetEntityPtr()); }
public:
	static wxGBSizerItem& GetEntity(Value& value) {
		return dynamic_cast<Value_wxGBSizerItem&>(value).GetEntity();
	}
	static const wxGBSizerItem& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxGBSizerItem&>(value).GetEntity();
	}
	static wxGBSizerItem* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxGBSizerItem&>(value).GetEntityPtr();
	}
	static const wxGBSizerItem* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxGBSizerItem&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
