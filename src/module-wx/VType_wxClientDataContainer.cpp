//==============================================================================
// VType_wxClientDataContainer.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"""(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.ClientDataContainer, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.ClientDataContainer, `en)}

${help.ComposeMethodHelp(wx.ClientDataContainer, `en)}
)""";

static const char* g_docHelp_ja = u8R"""(
# 概要

# 定数

${help.ComposePropertyHelp(wx.ClientDataContainer, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.ClientDataContainer, `ja)}

${help.ComposeMethodHelp(wx.ClientDataContainer, `ja)}
)""";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.ClientDataContainer() {block?}
Gurax_DeclareConstructorAlias(ClientDataContainer_gurax, "ClientDataContainer")
{
	Declare(VTYPE_wxClientDataContainer, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementConstructorEx(ClientDataContainer_gurax, processor_gurax, argument_gurax)
{
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxClientDataContainer(
		wxClientDataContainer()));
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.ClientDataContainer#GetClientObject()
Gurax_DeclareMethodAlias(wxClientDataContainer, GetClientObject_gurax, "GetClientObject")
{
	Declare(VTYPE_Any, Flag::None);
}

Gurax_ImplementMethodEx(wxClientDataContainer, GetClientObject_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	ClientData* rtn = dynamic_cast<ClientData*>(pEntity_gurax->GetClientObject());
	if (!rtn) return Value::nil();
	return rtn->GetValue().Reference();
}

// wx.ClientDataContainer#SetClientObject(data as Any)
Gurax_DeclareMethodAlias(wxClientDataContainer, SetClientObject_gurax, "SetClientObject")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("data", VTYPE_Any, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxClientDataContainer, SetClientObject_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const Value& data = args_gurax.PickValue();
	// Function body
	pEntity_gurax->SetClientObject(ClientData::Create(data));
	return Gurax::Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxClientDataContainer
//------------------------------------------------------------------------------
VType_wxClientDataContainer VTYPE_wxClientDataContainer("ClientDataContainer");

void VType_wxClientDataContainer::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_Object, Flag::Mutable, Gurax_CreateConstructor(ClientDataContainer_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxClientDataContainer, GetClientObject_gurax));
	Assign(Gurax_CreateMethod(wxClientDataContainer, SetClientObject_gurax));
}

//------------------------------------------------------------------------------
// Value_wxClientDataContainer
//------------------------------------------------------------------------------
VType& Value_wxClientDataContainer::vtype = VTYPE_wxClientDataContainer;

String Value_wxClientDataContainer::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.ClientDataContainer");
}

Gurax_EndModuleScope(wx)
