//==============================================================================
// VType_wxComboBox.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.ComboBox, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.ComboBox, `en)}

${help.ComposeMethodHelp(wx.ComboBox, `en)}
)**";

static const char* g_docHelp_ja = u8R"**(
# 概要

# 定数

${help.ComposePropertyHelp(wx.ComboBox, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.ComboBox, `ja)}

${help.ComposeMethodHelp(wx.ComboBox, `ja)}
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.ComboBox(parent as wx.Window, id as Number, value? as String, pos? as wx.Point, size? as wx.Size, choices[]? as String, style? as Number, validator? as wx.Validator, name? as String) {block?}
Gurax_DeclareConstructorAlias(ComboBox_gurax, "ComboBox")
{
	Declare(VTYPE_wxComboBox, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("id", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("value", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("pos", VTYPE_wxPoint, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("choices", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::ListVar);
	DeclareArg("style", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("validator", VTYPE_wxValidator, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("name", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementConstructorEx(ComboBox_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	wxWindowID id = args_gurax.PickNumber<wxWindowID>();
	const char* value = args_gurax.IsValid()? args_gurax.PickString() : "";
	const wxPoint& pos = args_gurax.IsValid()? args_gurax.Pick<Value_wxPoint>().GetEntity() : wxDefaultPosition;
	const wxSize& size = args_gurax.IsValid()? args_gurax.Pick<Value_wxSize>().GetEntity() : wxDefaultSize;
	wxArrayString choices = Util::CreateArrayString(args_gurax.PickList());
	bool style_validFlag = args_gurax.IsValid();
	long style = style_validFlag? args_gurax.PickNumber<long>() : 0;
	const wxValidator& validator = args_gurax.IsValid()? args_gurax.Pick<Value_wxValidator>().GetEntity() : wxDefaultValidator;
	const char* name = args_gurax.IsValid()? args_gurax.PickString() : wxComboBoxNameStr;
	// Function body
	auto pEntity_gurax = new Value_wxComboBox::EntityT(parent, id, value, pos, size, choices, style, validator, name);
	RefPtr<Value_wxComboBox> pValue_gurax(new Value_wxComboBox(pEntity_gurax));
	pEntity_gurax->core_gurax.SetInfo(processor_gurax.Reference(), *pValue_gurax);
	return argument_gurax.ReturnValue(processor_gurax, pValue_gurax.release());
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.ComboBox#GetCurrentSelection()
Gurax_DeclareMethodAlias(wxComboBox, GetCurrentSelection_gurax, "GetCurrentSelection")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetCurrentSelection_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	int rtn = pEntity_gurax->GetCurrentSelection();
	return new Gurax::Value_Number(rtn);
}

// wx.ComboBox#GetInsertionPoint()
Gurax_DeclareMethodAlias(wxComboBox, GetInsertionPoint_gurax, "GetInsertionPoint")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetInsertionPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	long rtn = pEntity_gurax->GetInsertionPoint();
	return new Gurax::Value_Number(rtn);
}

// wx.ComboBox#IsEmpty()
Gurax_DeclareMethodAlias(wxComboBox, IsEmpty_gurax, "IsEmpty")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, IsEmpty_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return Value::nil();
}

// wx.ComboBox#IsListEmpty()
Gurax_DeclareMethodAlias(wxComboBox, IsListEmpty_gurax, "IsListEmpty")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, IsListEmpty_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsListEmpty();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#IsTextEmpty()
Gurax_DeclareMethodAlias(wxComboBox, IsTextEmpty_gurax, "IsTextEmpty")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, IsTextEmpty_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsTextEmpty();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#SetValue(text as String)
Gurax_DeclareMethodAlias(wxComboBox, SetValue_gurax, "SetValue")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetValue_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* text = args_gurax.PickString();
	// Function body
	pEntity_gurax->SetValue(text);
	return Gurax::Value::nil();
}

// wx.ComboBox#Popup()
Gurax_DeclareMethodAlias(wxComboBox, Popup_gurax, "Popup")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Popup_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Popup();
	return Gurax::Value::nil();
}

// wx.ComboBox#Dismiss()
Gurax_DeclareMethodAlias(wxComboBox, Dismiss_gurax, "Dismiss")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Dismiss_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Dismiss();
	return Gurax::Value::nil();
}

// wx.ComboBox#GetSelection()
Gurax_DeclareMethodAlias(wxComboBox, GetSelection_gurax, "GetSelection")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetSelection_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	int rtn = pEntity_gurax->GetSelection();
	return new Gurax::Value_Number(rtn);
}

// wx.ComboBox#SetSelection(n as Number)
Gurax_DeclareMethodAlias(wxComboBox, SetSelection_gurax, "SetSelection")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("n", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetSelection_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int n = args_gurax.PickNumber<int>();
	// Function body
	pEntity_gurax->SetSelection(n);
	return Gurax::Value::nil();
}

// wx.ComboBox#FindString(s as String, bCase? as Bool)
Gurax_DeclareMethodAlias(wxComboBox, FindString_gurax, "FindString")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("s", VTYPE_String, ArgOccur::Once, ArgFlag::None);
	DeclareArg("bCase", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, FindString_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* s = args_gurax.PickString();
	bool bCase = args_gurax.IsValid()? args_gurax.PickBool() : false;
	// Function body
	int rtn = pEntity_gurax->FindString(s, bCase);
	return new Gurax::Value_Number(rtn);
}

// wx.ComboBox#GetString(n as Number)
Gurax_DeclareMethodAlias(wxComboBox, GetString_gurax, "GetString")
{
	Declare(VTYPE_String, Flag::None);
	DeclareArg("n", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetString_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned int n = args_gurax.PickNumber<unsigned int>();
	// Function body
	wxString rtn = pEntity_gurax->GetString(n);
	return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
}

// wx.ComboBox#GetStringSelection()
Gurax_DeclareMethodAlias(wxComboBox, GetStringSelection_gurax, "GetStringSelection")
{
	Declare(VTYPE_String, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetStringSelection_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxString rtn = pEntity_gurax->GetStringSelection();
	return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
}

// wx.ComboBox#SetString(n as Number, text as String)
Gurax_DeclareMethodAlias(wxComboBox, SetString_gurax, "SetString")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("n", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetString_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned int n = args_gurax.PickNumber<unsigned int>();
	const char* text = args_gurax.PickString();
	// Function body
	pEntity_gurax->SetString(n, text);
	return Gurax::Value::nil();
}

// wx.ComboBox#GetCount()
Gurax_DeclareMethodAlias(wxComboBox, GetCount_gurax, "GetCount")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	unsigned int rtn = pEntity_gurax->GetCount();
	return new Gurax::Value_Number(rtn);
}

// wx.ComboBox#Clear()
Gurax_DeclareMethodAlias(wxComboBox, Clear_gurax, "Clear")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Clear_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Clear();
	return Gurax::Value::nil();
}

// wx.ComboBox#Delete(n as Number)
Gurax_DeclareMethodAlias(wxComboBox, Delete_gurax, "Delete")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("n", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Delete_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned int n = args_gurax.PickNumber<unsigned int>();
	// Function body
	pEntity_gurax->Delete(n);
	return Gurax::Value::nil();
}

// wx.ComboBox#HasClientData()
Gurax_DeclareMethodAlias(wxComboBox, HasClientData_gurax, "HasClientData")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, HasClientData_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->HasClientData();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#HasClientObjectData()
Gurax_DeclareMethodAlias(wxComboBox, HasClientObjectData_gurax, "HasClientObjectData")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, HasClientObjectData_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->HasClientObjectData();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#HasClientUntypedData()
Gurax_DeclareMethodAlias(wxComboBox, HasClientUntypedData_gurax, "HasClientUntypedData")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, HasClientUntypedData_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->HasClientUntypedData();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#Append(item as Any, clientData? as Any)
Gurax_DeclareMethodAlias(wxComboBox, Append_gurax, "Append")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("item", VTYPE_Any, ArgOccur::Once, ArgFlag::None);
	DeclareArg("clientData", VTYPE_Any, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Append_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const Gurax::Value& item = args_gurax.PickValue();
	const Gurax::Value& clientData = args_gurax.IsValid()? args_gurax.PickValue() : Value::C_nil();
	// Function body
	int rtn = 0;
	if (item.IsType(VTYPE_String)) {
		if (clientData.IsInvalid()) {
			rtn = pEntity_gurax->Append(Value_String::GetString(item));
		} else {
			rtn = pEntity_gurax->Append(Value_String::GetString(item), ClientData::Create(clientData));
		}
	} else if (item.IsType(VTYPE_List)) {
		const ValueOwner& items = Value_List::GetValueOwner(item);
		if (!items.IsElemInstanceOf(VTYPE_String)) {
			Error::Issue(ErrorType::TypeError, "The list must contain values of String");
			return Value::nil();
		}
		if (clientData.IsInvalid()) {
			rtn = pEntity_gurax->Append(Util::CreateArrayString(items));
		} else if (clientData.IsType(VTYPE_List)) {
			const ValueOwner& clientDataTbl = Value_List::GetValueOwner(clientData);
			if (items.size() != clientDataTbl.size()) {
				Error::Issue(ErrorType::ValueError, "The lists for item and clientData must have the same length");
				return Value::nil();
			}
			rtn = pEntity_gurax->Append(Util::CreateArrayString(items), ClientData::Create(clientDataTbl).data());
		} else {
			Error::Issue(ErrorType::TypeError, "The argument clientData takes a value of List");
			return Value::nil();
		}
	} else {
		Error::Issue(ErrorType::TypeError, "The argument item takes a value of String or List");
		return Value::nil();
	}
	return new Value_Number(rtn);
}

// wx.ComboBox#GetClientData(n as Number)
Gurax_DeclareMethodAlias(wxComboBox, GetClientData_gurax, "GetClientData")
{
	Declare(VTYPE_Any, Flag::None);
	DeclareArg("n", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetClientData_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned int n = args_gurax.PickNumber<unsigned int>();
	// Function body
	auto pClientData = dynamic_cast<ClientData*>(pEntity_gurax->GetClientObject(n));
	if (!pClientData) return Value::nil();
	return pClientData->GetValue().Reference();
}

// wx.ComboBox#GetClientObject(n as Number)
Gurax_DeclareMethodAlias(wxComboBox, GetClientObject_gurax, "GetClientObject")
{
	Declare(VTYPE_Any, Flag::None);
	DeclareArg("n", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetClientObject_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned int n = args_gurax.PickNumber<unsigned int>();
	// Function body
	auto pClientData = dynamic_cast<ClientData*>(pEntity_gurax->GetClientObject(n));
	if (!pClientData) return Value::nil();
	return pClientData->GetValue().Reference();
}

// wx.ComboBox#SetClientData(n as Number, data as Any)
Gurax_DeclareMethodAlias(wxComboBox, SetClientData_gurax, "SetClientData")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("n", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("data", VTYPE_Any, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetClientData_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned int n = args_gurax.PickNumber<unsigned int>();
	const Gurax::Value& data = args_gurax.PickValue();
	// Function body
	pEntity_gurax->SetClientObject(n, ClientData::Create(data));
	return Value::nil();
}

// wx.ComboBox#SetClientObject(n as Number, data as Any)
Gurax_DeclareMethodAlias(wxComboBox, SetClientObject_gurax, "SetClientObject")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("n", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("data", VTYPE_Any, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetClientObject_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned int n = args_gurax.PickNumber<unsigned int>();
	const Gurax::Value& data = args_gurax.PickValue();
	// Function body
	pEntity_gurax->SetClientObject(n, ClientData::Create(data));
	return Value::nil();
}

// wx.ComboBox#Insert(item as Any, pos as Number, clientData? as Any)
Gurax_DeclareMethodAlias(wxComboBox, Insert_gurax, "Insert")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("item", VTYPE_Any, ArgOccur::Once, ArgFlag::None);
	DeclareArg("pos", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("clientData", VTYPE_Any, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Insert_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const Gurax::Value& item = args_gurax.PickValue();
	unsigned int pos = args_gurax.PickNumber<unsigned int>();
	const Gurax::Value& clientData = args_gurax.IsValid()? args_gurax.PickValue() : Value::C_nil();
	// Function body
	int rtn = 0;
	if (item.IsType(VTYPE_String)) {
		if (clientData.IsInvalid()) {
			rtn = pEntity_gurax->Insert(Value_String::GetString(item), pos);
		} else {
			rtn = pEntity_gurax->Insert(Value_String::GetString(item), pos, ClientData::Create(clientData));
		}
	} else if (item.IsType(VTYPE_List)) {
		const ValueOwner& items = Value_List::GetValueOwner(item);
		if (!items.IsElemInstanceOf(VTYPE_String)) {
			Error::Issue(ErrorType::TypeError, "The list must contain values of String");
			return Value::nil();
		}
		if (clientData.IsInvalid()) {
			rtn = pEntity_gurax->Insert(Util::CreateArrayString(items), pos);
		} else if (clientData.IsType(VTYPE_List)) {
			const ValueOwner& clientDataTbl = Value_List::GetValueOwner(clientData);
			if (items.size() != clientDataTbl.size()) {
				Error::Issue(ErrorType::ValueError, "The lists for item and clientData must have the same length");
				return Value::nil();
			}
			rtn = pEntity_gurax->Insert(Util::CreateArrayString(items), pos, ClientData::Create(clientDataTbl).data());
		} else {
			Error::Issue(ErrorType::TypeError, "The argument clientData takes a value of List");
			return Value::nil();
		}
	} else {
		Error::Issue(ErrorType::TypeError, "The argument item takes a value of String or List");
		return Value::nil();
	}
	return new Value_Number(rtn);
}

// wx.ComboBox#Set(items[] as String, clientData? as Any)
Gurax_DeclareMethodAlias(wxComboBox, Set_gurax, "Set")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("items", VTYPE_String, ArgOccur::Once, ArgFlag::ListVar);
	DeclareArg("clientData", VTYPE_Any, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Set_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	wxArrayString items = Util::CreateArrayString(args_gurax.PickList());
	const Gurax::Value& clientData = args_gurax.IsValid()? args_gurax.PickValue() : Value::C_nil();
	// Function body
	if (clientData.IsInvalid()) {
		pEntity_gurax->Set(items);
	} else if (clientData.IsType(VTYPE_List)) {
		const ValueOwner& clientDataTbl = Value_List::GetValueOwner(clientData);
		if (items.size() != clientDataTbl.size()) {
			Error::Issue(ErrorType::ValueError, "The lists for item and clientData must have the same length");
			return Value::nil();
		}
		pEntity_gurax->Set(items, ClientData::Create(clientDataTbl).data());
	} else {
		Error::Issue(ErrorType::TypeError, "The argument clientData takes a value of List");
		return Value::nil();
	}
	return Value::nil();
}

// wx.ComboBox#AppendText(text as String)
Gurax_DeclareMethodAlias(wxComboBox, AppendText_gurax, "AppendText")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, AppendText_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* text = args_gurax.PickString();
	// Function body
	pEntity_gurax->AppendText(text);
	return Gurax::Value::nil();
}

// wx.ComboBox#AutoComplete(choices[] as String)
Gurax_DeclareMethodAlias(wxComboBox, AutoComplete_gurax, "AutoComplete")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("choices", VTYPE_String, ArgOccur::Once, ArgFlag::ListVar);
}

Gurax_ImplementMethodEx(wxComboBox, AutoComplete_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	wxArrayString choices = Util::CreateArrayString(args_gurax.PickList());
	// Function body
	bool rtn = pEntity_gurax->AutoComplete(choices);
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#AutoCompleteFileNames()
Gurax_DeclareMethodAlias(wxComboBox, AutoCompleteFileNames_gurax, "AutoCompleteFileNames")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, AutoCompleteFileNames_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->AutoCompleteFileNames();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#AutoCompleteDirectories()
Gurax_DeclareMethodAlias(wxComboBox, AutoCompleteDirectories_gurax, "AutoCompleteDirectories")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, AutoCompleteDirectories_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->AutoCompleteDirectories();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#CanCopy()
Gurax_DeclareMethodAlias(wxComboBox, CanCopy_gurax, "CanCopy")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, CanCopy_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanCopy();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#CanCut()
Gurax_DeclareMethodAlias(wxComboBox, CanCut_gurax, "CanCut")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, CanCut_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanCut();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#CanPaste()
Gurax_DeclareMethodAlias(wxComboBox, CanPaste_gurax, "CanPaste")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, CanPaste_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanPaste();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#CanRedo()
Gurax_DeclareMethodAlias(wxComboBox, CanRedo_gurax, "CanRedo")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, CanRedo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanRedo();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#CanUndo()
Gurax_DeclareMethodAlias(wxComboBox, CanUndo_gurax, "CanUndo")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, CanUndo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanUndo();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#ChangeValue(value as String)
Gurax_DeclareMethodAlias(wxComboBox, ChangeValue_gurax, "ChangeValue")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("value", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, ChangeValue_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* value = args_gurax.PickString();
	// Function body
	pEntity_gurax->ChangeValue(value);
	return Gurax::Value::nil();
}

// wx.ComboBox#Copy()
Gurax_DeclareMethodAlias(wxComboBox, Copy_gurax, "Copy")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Copy_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Copy();
	return Gurax::Value::nil();
}

// wx.ComboBox#Cut()
Gurax_DeclareMethodAlias(wxComboBox, Cut_gurax, "Cut")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Cut_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Cut();
	return Gurax::Value::nil();
}

// wx.ComboBox#GetLastPosition()
Gurax_DeclareMethodAlias(wxComboBox, GetLastPosition_gurax, "GetLastPosition")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetLastPosition_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	long rtn = pEntity_gurax->GetLastPosition();
	return new Gurax::Value_Number(rtn);
}

// wx.ComboBox#GetRange(from as Number, to as Number)
Gurax_DeclareMethodAlias(wxComboBox, GetRange_gurax, "GetRange")
{
	Declare(VTYPE_String, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetRange_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long from = args_gurax.PickNumber<long>();
	long to = args_gurax.PickNumber<long>();
	// Function body
	wxString rtn = pEntity_gurax->GetRange(from, to);
	return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
}

// wx.ComboBox#GetValue()
Gurax_DeclareMethodAlias(wxComboBox, GetValue_gurax, "GetValue")
{
	Declare(VTYPE_String, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetValue_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxString rtn = pEntity_gurax->GetValue();
	return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
}

// wx.ComboBox#IsEditable()
Gurax_DeclareMethodAlias(wxComboBox, IsEditable_gurax, "IsEditable")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, IsEditable_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsEditable();
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#Paste()
Gurax_DeclareMethodAlias(wxComboBox, Paste_gurax, "Paste")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Paste_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Paste();
	return Gurax::Value::nil();
}

// wx.ComboBox#Redo()
Gurax_DeclareMethodAlias(wxComboBox, Redo_gurax, "Redo")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Redo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Redo();
	return Gurax::Value::nil();
}

// wx.ComboBox#Remove(from as Number, to as Number)
Gurax_DeclareMethodAlias(wxComboBox, Remove_gurax, "Remove")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Remove_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long from = args_gurax.PickNumber<long>();
	long to = args_gurax.PickNumber<long>();
	// Function body
	pEntity_gurax->Remove(from, to);
	return Gurax::Value::nil();
}

// wx.ComboBox#Replace(from as Number, to as Number, value as String)
Gurax_DeclareMethodAlias(wxComboBox, Replace_gurax, "Replace")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("value", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Replace_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long from = args_gurax.PickNumber<long>();
	long to = args_gurax.PickNumber<long>();
	const char* value = args_gurax.PickString();
	// Function body
	pEntity_gurax->Replace(from, to, value);
	return Gurax::Value::nil();
}

// wx.ComboBox#SetEditable(editable as Bool)
Gurax_DeclareMethodAlias(wxComboBox, SetEditable_gurax, "SetEditable")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("editable", VTYPE_Bool, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetEditable_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	bool editable = args_gurax.PickBool();
	// Function body
	pEntity_gurax->SetEditable(editable);
	return Gurax::Value::nil();
}

// wx.ComboBox#SetInsertionPoint(pos as Number)
Gurax_DeclareMethodAlias(wxComboBox, SetInsertionPoint_gurax, "SetInsertionPoint")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("pos", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetInsertionPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long pos = args_gurax.PickNumber<long>();
	// Function body
	pEntity_gurax->SetInsertionPoint(pos);
	return Gurax::Value::nil();
}

// wx.ComboBox#SetInsertionPointEnd()
Gurax_DeclareMethodAlias(wxComboBox, SetInsertionPointEnd_gurax, "SetInsertionPointEnd")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetInsertionPointEnd_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->SetInsertionPointEnd();
	return Gurax::Value::nil();
}

// wx.ComboBox#SetMaxLength(len as Number)
Gurax_DeclareMethodAlias(wxComboBox, SetMaxLength_gurax, "SetMaxLength")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("len", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetMaxLength_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned long len = args_gurax.PickNumber<unsigned long>();
	// Function body
	pEntity_gurax->SetMaxLength(len);
	return Gurax::Value::nil();
}

// wx.ComboBox#SelectAll()
Gurax_DeclareMethodAlias(wxComboBox, SelectAll_gurax, "SelectAll")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SelectAll_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->SelectAll();
	return Gurax::Value::nil();
}

// wx.ComboBox#SelectNone()
Gurax_DeclareMethodAlias(wxComboBox, SelectNone_gurax, "SelectNone")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SelectNone_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->SelectNone();
	return Gurax::Value::nil();
}

// wx.ComboBox#SetHint(hint as String)
Gurax_DeclareMethodAlias(wxComboBox, SetHint_gurax, "SetHint")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("hint", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetHint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* hint = args_gurax.PickString();
	// Function body
	bool rtn = pEntity_gurax->SetHint(hint);
	return new Gurax::Value_Bool(rtn);
}

// wx.ComboBox#GetHint()
Gurax_DeclareMethodAlias(wxComboBox, GetHint_gurax, "GetHint")
{
	Declare(VTYPE_String, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, GetHint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxString rtn = pEntity_gurax->GetHint();
	return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
}

// wx.ComboBox#GetMargins() {block?}
Gurax_DeclareMethodAlias(wxComboBox, GetMargins_gurax, "GetMargins")
{
	Declare(VTYPE_wxPoint, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxComboBox, GetMargins_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxPoint(
		pEntity_gurax->GetMargins()));
}

// wx.ComboBox#Undo()
Gurax_DeclareMethodAlias(wxComboBox, Undo_gurax, "Undo")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxComboBox, Undo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Undo();
	return Gurax::Value::nil();
}

// wx.ComboBox#WriteText(text as String)
Gurax_DeclareMethodAlias(wxComboBox, WriteText_gurax, "WriteText")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, WriteText_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* text = args_gurax.PickString();
	// Function body
	pEntity_gurax->WriteText(text);
	return Gurax::Value::nil();
}

// wx.ComboBox#SetMargins(args* as Any)
Gurax_DeclareMethodAlias(wxComboBox, SetMargins_gurax, "SetMargins")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("args", VTYPE_Any, ArgOccur::ZeroOrMore, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxComboBox, SetMargins_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const Gurax::ValueList& args = args_gurax.PickList();
	// Function body
	// SetMargins(pt as const_Point_r) as bool
	do {
		static DeclCallable* pDeclCallable = nullptr;
		if (!pDeclCallable) {
			pDeclCallable = new DeclCallable();
			pDeclCallable->DeclareArg("pt", VTYPE_wxPoint);
		}
		RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
		if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
		Error::Clear();
		ArgPicker args(*pArgument);
		const wxPoint& pt = args.Pick<Value_wxPoint>().GetEntity();
		bool rtn = pEntity_gurax->SetMargins(pt);
		return new Value_Bool(rtn);
	} while (0);
	Error::ClearIssuedFlag();
	// SetMargins(left as Coord, top as Coord = -1) as bool
	do {
		static DeclCallable* pDeclCallable = nullptr;
		if (!pDeclCallable) {
			pDeclCallable = new DeclCallable();
			pDeclCallable->DeclareArg("left", VTYPE_Number);
			pDeclCallable->DeclareArg("top", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
		}
		RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
		if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
		Error::Clear();
		ArgPicker args(*pArgument);
		wxCoord left = args.PickNumber<wxCoord>();
		wxCoord top = args.IsValid()? args.PickNumber<wxCoord>() : -1;
		bool rtn = pEntity_gurax->SetMargins(left, top);
		return new Value_Bool(rtn);
	} while (0);
	return Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxComboBox
//------------------------------------------------------------------------------
VType_wxComboBox VTYPE_wxComboBox("ComboBox");

void VType_wxComboBox::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_wxControl, Flag::Mutable, Gurax_CreateConstructor(ComboBox_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxComboBox, GetCurrentSelection_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetInsertionPoint_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, IsEmpty_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, IsListEmpty_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, IsTextEmpty_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetValue_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Popup_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Dismiss_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetSelection_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetSelection_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, FindString_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetString_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetStringSelection_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetString_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetCount_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Clear_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Delete_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, HasClientData_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, HasClientObjectData_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, HasClientUntypedData_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Append_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetClientData_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetClientObject_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetClientData_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetClientObject_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Insert_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Set_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, AppendText_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, AutoComplete_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, AutoCompleteFileNames_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, AutoCompleteDirectories_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, CanCopy_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, CanCut_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, CanPaste_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, CanRedo_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, CanUndo_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, ChangeValue_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Copy_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Cut_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetLastPosition_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetRange_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetValue_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, IsEditable_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Paste_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Redo_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Remove_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Replace_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetEditable_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetInsertionPoint_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetInsertionPointEnd_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetMaxLength_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SelectAll_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SelectNone_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetHint_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetHint_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, GetMargins_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, Undo_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, WriteText_gurax));
	Assign(Gurax_CreateMethod(wxComboBox, SetMargins_gurax));
}

//------------------------------------------------------------------------------
// Value_wxComboBox
//------------------------------------------------------------------------------
VType& Value_wxComboBox::vtype = VTYPE_wxComboBox;

String Value_wxComboBox::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.ComboBox");
}

//------------------------------------------------------------------------------
// Value_wxComboBox::EntityT
//------------------------------------------------------------------------------

Gurax_EndModuleScope(wx)
