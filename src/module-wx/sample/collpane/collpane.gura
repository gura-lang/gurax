#!/usr/bin/env gurax
/////////////////////////////////////////////////////////////////////////////
// Name:        collpane.cpp
// Purpose:     wxCollapsiblePane sample
// Author:      Francesco Montorsi
// Modified by:
// Created:     14/10/06
// Copyright:   (c) Francesco Montorsi
// Licence:     wxWindows licence
/////////////////////////////////////////////////////////////////////////////
import(wx)

// ============================================================================
// declarations
// ============================================================================

// ----------------------------------------------------------------------------
// constants
// ----------------------------------------------------------------------------

// ID for the menu commands
[
	PANE_COLLAPSE,
	PANE_EXPAND,
	PANE_SETLABEL,
	PANE_SHOWDLG,
] = 100..
PANE_ABOUT = wx.ID_ABOUT
[
	PANE_QUIT
	PANE_BUTTON,
	PANE_TEXTCTRL
] = wx.ID_EXIT..

// ----------------------------------------------------------------------------
// our classes
// ----------------------------------------------------------------------------

MyApp = class(wx.App) {
	__init__() = {}
	OnInit() = {
		//if ( !wxApp::OnInit() )
		//	return false;

		// create and show the main frame
		frame = MyFrame()

		frame.Show(true)

		true
	}
}

MyFrame = class(wx.Frame) {
	__init__() = {|nil, wx.ID_ANY, 'wxCollapsiblePane sample', wx.DefaultPosition, wx.Size(420, 300)|
		//SetIcon(wxICON(sample));
		this.CreateStatusBar(2);

		// Make a menubar
		paneMenu = wx.Menu()
		paneMenu.Append(PANE_COLLAPSE, "Collapse\tCtrl-C");
		paneMenu.Append(PANE_EXPAND, "Expand\tCtrl-E");
		paneMenu.AppendSeparator();
		paneMenu.Append(PANE_SETLABEL, "Set label...\tCtrl-L");
		paneMenu.AppendSeparator();
		paneMenu.Append(PANE_SHOWDLG, "Show dialog...\tCtrl-S");
		paneMenu.AppendSeparator();
		paneMenu.Append(PANE_QUIT);

		helpMenu = wx.Menu();
		helpMenu.Append(PANE_ABOUT);

		menuBar = wx.MenuBar();
		menuBar.Append(paneMenu, "&Pane");
		menuBar.Append(helpMenu, "&Help");
		this.SetMenuBar(menuBar);

		this.m_collPane = wx.CollapsiblePane(this, -1, "This is a wxCollapsiblePane");
		win = this.m_collPane.GetPane();

		this.m_paneSizer = wx.BoxSizer( wx.HORIZONTAL );
		paneSubSizer = wx.BoxSizer( wx.VERTICAL );
		this.m_paneSizer.AddSpacer( 20 );
		//this.m_paneSizer.Add( paneSubSizer, 1 );
		/*
		paneSubSizer.Add( wx.StaticText(win, -1, "Static text" ), 0, wx.ALIGN_LEFT | wx.ALL, 3 );
		paneSubSizer.Add( wx.StaticText(win, -1, "Yet another one!" ), 0, wx.ALIGN_LEFT | wx.ALL, 3 );
		paneSubSizer.Add( wx.TextCtrl(win, PANE_TEXTCTRL, "Text control", wx.DefaultPosition, wx.Size(80,-1) ), 0, wx.ALIGN_LEFT | wx.ALL, 3 );
		paneSubSizer.Add( wx.Button(win, PANE_BUTTON, "Press to align right" ), 0, wx.ALIGN_LEFT | wx.ALL, 3 );

		win.SetSizer( this.m_paneSizer );

		this.m_collHeaderCtrl = wx.CollapsibleHeaderCtrl(this, wx.ID_ANY, "Collapsed wx.CollapsibleHeaderCtrl");

		sizerTop = wx.BoxSizer(wx.VERTICAL);
		sizerTop.Add(this.m_collPane, wx.SizerFlags(1).Expand());
		sizerTop.Add(this.m_collHeaderCtrl);
		this.SetSizer(sizerTop);
		*/
		//this.EventTable()
	}
	// Menu commands
	OnCollapse(event as wx.CommandEvent) = {
	}
	OnExpand(event as wx.CommandEvent) = {
	}
	OnSetLabel(event as wx.CommandEvent) = {
	}
	OnShowDialog(event as wx.CommandEvent) = {
	}
	Quit(event as wx.CommandEvent) = {
	}
	OnAbout(event as wx.CommandEvent) = {
	}

	// UI update handlers
	OnCollapseUpdateUI(event as wx.UpdateUIEvent) = {
	}
	OnExpandUpdateUI(event as wx.UpdateUIEvent) = {
	}

	OnCollapsibleHeaderChanged(event as wx.CommandEvent) = {
	}

	m_collPane as wx.CollapsiblePane
	m_collHeaderCtrl as wx.CollapsibleHeaderCtrl
	m_paneSizer as wx.BoxSizer
	
	EventTable() = {
		wx.EVT_MENU(this, id = PANE_COLLAPSE, this.OnCollapse)
		wx.EVT_MENU(this, id = PANE_EXPAND, this.OnExpand)
		wx.EVT_MENU(this, id = PANE_SETLABEL, this.OnSetLabel)
		wx.EVT_MENU(this, id = PANE_SHOWDLG, this.OnShowDialog)
		wx.EVT_MENU(this, id = PANE_ABOUT, this.OnAbout)
		wx.EVT_MENU(this, id = PANE_QUIT, this.Quit)

		wx.EVT_UPDATE_UI(this, id = PANE_COLLAPSE, this.OnCollapseUpdateUI)
		wx.EVT_UPDATE_UI(this, id = PANE_EXPAND, this.OnExpandUpdateUI)

		wx.EVT_COLLAPSIBLEHEADER_CHANGED(this, id = wxID_ANY, this.OnCollapsibleHeaderChanged)
	}
}

MyDialog = class(wx.Dialog) {
	__init__(parent as wx.Frame) = {
	}
	OnToggleStatus(event as wx.CommandEvent) = {
	}
	OnAlignButton(event as wx.CommandEvent) = {
	}
	OnPaneChanged(event as wx.CollapsiblePaneEvent) = {
	}

	m_collPane as wx.CollapsiblePane
	m_paneSizer as wx.GridSizer
}

// ============================================================================
// implementation
// ============================================================================

// ----------------------------------------------------------------------------
// MyApp
// ----------------------------------------------------------------------------

wx.ImplementApp(MyApp())

/*

// ----------------------------------------------------------------------------
// MyFrame
// ----------------------------------------------------------------------------


// My frame constructor
MyFrame::MyFrame()
	   : wxFrame(NULL, wxID_ANY, "wxCollapsiblePane sample",
				 wxDefaultPosition, wxSize(420, 300))
{
}

MyFrame::~MyFrame()
{
}

// menu command handlers

void MyFrame::Quit(wxCommandEvent& WXUNUSED(event) )
{
	Close(true);
}

void MyFrame::OnCollapse(wxCommandEvent& WXUNUSED(event) )
{
	m_collPane.Collapse();
}

void MyFrame::OnExpand(wxCommandEvent& WXUNUSED(event) )
{
	m_collPane.Expand();
}

void MyFrame::OnSetLabel(wxCommandEvent& WXUNUSED(event) )
{
	wxString text = wxGetTextFromUser
					(
						"Enter new label",
						wxGetTextFromUserPromptStr,
						m_collPane.GetLabel()
					);
	m_collPane.SetLabel(text);
}

void MyFrame::OnShowDialog(wxCommandEvent& WXUNUSED(event) )
{
	MyDialog dlg(this);
	dlg.ShowModal();
}

void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event) )
{
	wxAboutDialogInfo info;
	info.SetName(_("wxCollapsiblePane sample"));
	info.SetDescription(_("This sample program demonstrates usage of wxCollapsiblePane"));
	info.SetCopyright("(C) 2006 Francesco Montorsi <frm@users.sourceforge.net>");

	wxAboutBox(info, this);
}

void MyFrame::OnCollapseUpdateUI(wxUpdateUIEvent& event)
{
	event.Enable(!m_collPane.IsCollapsed());
}

void MyFrame::OnExpandUpdateUI(wxUpdateUIEvent& event)
{
	event.Enable(m_collPane.IsCollapsed());
}

void MyFrame::OnCollapsibleHeaderChanged(wxCommandEvent& WXUNUSED(event))
{
	m_collHeaderCtrl.SetLabel
		(
			wxString::Format
			(
				"%s wxCollapsibleHeaderCtrl",
				m_collHeaderCtrl.IsCollapsed() ? "Collapsed" : "Expanded"
			)
		);
}

// ----------------------------------------------------------------------------
// MyDialog
// ----------------------------------------------------------------------------

enum
{
	PANEDLG_TOGGLESTATUS_BTN = wxID_HIGHEST
};

wxBEGIN_EVENT_TABLE(MyDialog, wxDialog)
	EVT_BUTTON(PANEDLG_TOGGLESTATUS_BTN, MyDialog::OnToggleStatus)
	EVT_COLLAPSIBLEPANE_CHANGED(wxID_ANY, MyDialog::OnPaneChanged)
	EVT_BUTTON(PANE_BUTTON, MyDialog::OnAlignButton)
wxEND_EVENT_TABLE()

MyDialog::MyDialog(wxFrame *parent)
				: wxDialog(parent, wxID_ANY, "Test dialog",
							wxDefaultPosition, wxDefaultSize,
							wxRESIZE_BORDER|wxDEFAULT_DIALOG_STYLE )
{
	wxSizer *sz = new wxBoxSizer(wxVERTICAL);
	sz.Add(new wxStaticText(this, -1,
		"This dialog allows you to test the wxCollapsiblePane control"),
		0, wxALL, 5);
	sz.Add(new wxButton(this, PANEDLG_TOGGLESTATUS_BTN, "Change status"),
		1, wxGROW|wxALL, 5);

	m_collPane = new wxCollapsiblePane(this, -1, "Click here for a surprise");
	sz.Add(m_collPane, 0, wxGROW|wxALL, 5);
	sz.Add(new wxTextCtrl(this, -1, "just a test"), 0, wxGROW|wxALL, 5);
	sz.AddSpacer(10);
	sz.Add(new wxButton(this, wxID_OK), 0, wxALIGN_RIGHT|wxALL, 5);

	// now add test controls in the collapsible pane
	wxWindow *win = m_collPane.GetPane();
	m_paneSizer = new wxGridSizer(4, 1, 5, 5);

	m_paneSizer.Add( new wxStaticText(win, -1, "Static text" ), 0, wxALIGN_LEFT );
	m_paneSizer.Add( new wxStaticText(win, -1, "Yet another one!" ), 0, wxALIGN_LEFT );
	m_paneSizer.Add( new wxTextCtrl(win, PANE_TEXTCTRL, "Text control", wxDefaultPosition, wxSize(80,-1) ), 0, wxALIGN_LEFT );
	m_paneSizer.Add( new wxButton(win, PANE_BUTTON, "Press to align right" ), 0, wxALIGN_LEFT );
	win.SetSizer( m_paneSizer );

	win.SetSizer( m_paneSizer );
	m_paneSizer.SetSizeHints(win);

	SetSizer(sz);
	sz.SetSizeHints(this);
}

void MyDialog::OnToggleStatus(wxCommandEvent& WXUNUSED(ev))
{
	m_collPane.Collapse(!m_collPane.IsCollapsed());
}

void MyDialog::OnAlignButton(wxCommandEvent& WXUNUSED(ev))
{
   wxSizerItem *item = m_paneSizer.GetItem( FindWindow(PANE_TEXTCTRL), true );
   item.SetFlag(  wxALIGN_RIGHT );

   Layout();
}

void MyDialog::OnPaneChanged(wxCollapsiblePaneEvent& event)
{
	wxLogMessage("The pane has just been %s by the user",
			   event.GetCollapsed() ? "collapsed" : "expanded");
}
*/
