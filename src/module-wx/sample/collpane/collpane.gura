#!/usr/bin/env gurax
/////////////////////////////////////////////////////////////////////////////
// Name:        collpane.cpp
// Purpose:     wxCollapsiblePane sample
// Author:      Francesco Montorsi
// Modified by:
// Created:     14/10/06
// Copyright:   (c) Francesco Montorsi
// Licence:     wxWindows licence
/////////////////////////////////////////////////////////////////////////////
import(wx)

// ============================================================================
// declarations
// ============================================================================

// ----------------------------------------------------------------------------
// constants
// ----------------------------------------------------------------------------

// ID for the menu commands
[
	PANE_COLLAPSE,
	PANE_EXPAND,
	PANE_SETLABEL,
	PANE_SHOWDLG,
] = 100..
PANE_ABOUT = wx.ID_ABOUT
[
	PANE_QUIT
	PANE_BUTTON,
	PANE_TEXTCTRL
] = wx.ID_EXIT..

PANEDLG_TOGGLESTATUS_BTN = wx.ID_HIGHEST

// ----------------------------------------------------------------------------
// our classes
// ----------------------------------------------------------------------------

MyApp = class(wx.App) {
	__init__() = {}
	OnInit() = {
		//if ( !wxApp::OnInit() )
		//	return false;

		// create and show the main frame
		frame = MyFrame()

		frame.Show(true)

		true
	}
}

MyFrame = class(wx.Frame) {
	__init__() = {|nil, wx.ID_ANY, 'wxCollapsiblePane sample', wx.DefaultPosition, wx.Size(420, 300)|
		//SetIcon(wxICON(sample));
		this.CreateStatusBar(2);

		// Make a menubar
		paneMenu = wx.Menu()
		paneMenu.Append(PANE_COLLAPSE, "Collapse\tCtrl-C");
		paneMenu.Append(PANE_EXPAND, "Expand\tCtrl-E");
		paneMenu.AppendSeparator();
		paneMenu.Append(PANE_SETLABEL, "Set label...\tCtrl-L");
		paneMenu.AppendSeparator();
		paneMenu.Append(PANE_SHOWDLG, "Show dialog...\tCtrl-S");
		paneMenu.AppendSeparator();
		paneMenu.Append(PANE_QUIT);

		helpMenu = wx.Menu();
		helpMenu.Append(PANE_ABOUT);

		menuBar = wx.MenuBar();
		menuBar.Append(paneMenu, "&Pane");
		menuBar.Append(helpMenu, "&Help");
		this.SetMenuBar(menuBar);

		this.m_collPane = wx.CollapsiblePane(this, -1, "This is a wxCollapsiblePane");
		win = this.m_collPane.GetPane();

		this.m_paneSizer = wx.BoxSizer( wx.HORIZONTAL );
		paneSubSizer = wx.BoxSizer( wx.VERTICAL );
		this.m_paneSizer.AddSpacer( 20 );
		this.m_paneSizer.Add( paneSubSizer, 1 );
		
		paneSubSizer.Add( wx.StaticText(win, -1, "Static text" ), 0, wx.ALIGN_LEFT | wx.ALL, 3 );
		paneSubSizer.Add( wx.StaticText(win, -1, "Yet another one!" ), 0, wx.ALIGN_LEFT | wx.ALL, 3 );
		paneSubSizer.Add( wx.TextCtrl(win, PANE_TEXTCTRL, "Text control", wx.DefaultPosition, wx.Size(80,-1) ), 0, wx.ALIGN_LEFT | wx.ALL, 3 );
		paneSubSizer.Add( wx.Button(win, PANE_BUTTON, "Press to align right" ), 0, wx.ALIGN_LEFT | wx.ALL, 3 );

		win.SetSizer( this.m_paneSizer );

		this.m_collHeaderCtrl = wx.CollapsibleHeaderCtrl(this, wx.ID_ANY, "Collapsed wx.CollapsibleHeaderCtrl");

		sizerTop = wx.BoxSizer(wx.VERTICAL);
		sizerTop.Add(this.m_collPane, wx.SizerFlags(1).Expand());
		sizerTop.Add(this.m_collHeaderCtrl);
		this.SetSizer(sizerTop);
		this.EventTable()
	}
	// Menu commands
	OnCollapse(event as wx.CommandEvent) = {
		this.m_collPane.Collapse();
	}
	OnExpand(event as wx.CommandEvent) = {
		this.m_collPane.Expand();
	}
	OnSetLabel(event as wx.CommandEvent) = {
		text = wx.GetTextFromUser(
				"Enter new label",
				wx.GetTextFromUserPromptStr,
				this.m_collPane.GetLabel()
			);
		this.m_collPane.SetLabel(text);
	}
	OnShowDialog(event as wx.CommandEvent) = {
		dlg = MyDialog(this);
		dlg.ShowModal();
	}
	Quit(event as wx.CommandEvent) = {
		this.Close(true);
	}
	OnAbout(event as wx.CommandEvent) = {
		info = wx.AboutDialogInfo();
		info.SetName("wxCollapsiblePane sample");
		info.SetDescription("This sample program demonstrates usage of wxCollapsiblePane");
		info.SetCopyright("(C) 2006 Francesco Montorsi <frm@users.sourceforge.net>");

		wx.AboutBox(info, this);
	}

	// UI update handlers
	OnCollapseUpdateUI(event as wx.UpdateUIEvent) = {
		event.Enable(!this.m_collPane.IsCollapsed());
	}
	OnExpandUpdateUI(event as wx.UpdateUIEvent) = {
		event.Enable(this.m_collPane.IsCollapsed());
	}

	OnCollapsibleHeaderChanged(event as wx.CommandEvent) = {
		this.m_collHeaderCtrl.SetLabel
			(
				Format(
					"%s wxCollapsibleHeaderCtrl",
					cond(this.m_collHeaderCtrl.IsCollapsed(), "Collapsed", "Expanded")
				)
			);
	}

	m_collPane as wx.CollapsiblePane
	m_collHeaderCtrl as wx.CollapsibleHeaderCtrl
	m_paneSizer as wx.BoxSizer
	
	EventTable() = {
		wx.EVT_MENU(this, id = PANE_COLLAPSE, this.OnCollapse)
		wx.EVT_MENU(this, id = PANE_EXPAND, this.OnExpand)
		wx.EVT_MENU(this, id = PANE_SETLABEL, this.OnSetLabel)
		wx.EVT_MENU(this, id = PANE_SHOWDLG, this.OnShowDialog)
		wx.EVT_MENU(this, id = PANE_ABOUT, this.OnAbout)
		wx.EVT_MENU(this, id = PANE_QUIT, this.Quit)

		wx.EVT_UPDATE_UI(this, id = PANE_COLLAPSE, this.OnCollapseUpdateUI)
		wx.EVT_UPDATE_UI(this, id = PANE_EXPAND, this.OnExpandUpdateUI)

		wx.EVT_COLLAPSIBLEHEADER_CHANGED(this, this.OnCollapsibleHeaderChanged)
	}
}

MyDialog = class(wx.Dialog) {
	__init__(parent as wx.Frame) = {|parent, wx.ID_ANY, "Test dialog",
							wx.DefaultPosition, wx.DefaultSize,
							(wx.RESIZE_BORDER | wx.DEFAULT_DIALOG_STYLE)|
		sz = wx.BoxSizer(wx.VERTICAL);
		sz.Add(wx.StaticText(this, -1,
			"This dialog allows you to test the wx.CollapsiblePane control"),
			0, wx.ALL, 5);
		sz.Add('aa', wx.Button(this, PANEDLG_TOGGLESTATUS_BTN, "Change status"),
			1, wx.GROW|wx.ALL, 5);

		this.m_collPane = wx.CollapsiblePane(this, -1, "Click here for a surprise");
		sz.Add(this.m_collPane, 0, wx.GROW|wx.ALL, 5);
		sz.Add(wx.TextCtrl(this, -1, "just a test"), 0, wx.GROW|wx.ALL, 5);
		sz.AddSpacer(10);
		sz.Add(wx.Button(this, wx.ID_OK), 0, wx.ALIGN_RIGHT|wx.ALL, 5);

		// now add test controls in the collapsible pane
		win = this.m_collPane.GetPane();
		this.m_paneSizer = wx.GridSizer(4, 1, 5, 5);

		this.m_paneSizer.Add( wx.StaticText(win, -1, "Static text" ), 0, wx.ALIGN_LEFT );
		this.m_paneSizer.Add( wx.StaticText(win, -1, "Yet another one!" ), 0, wx.ALIGN_LEFT );
		this.m_paneSizer.Add( wx.TextCtrl(win, PANE_TEXTCTRL, "Text control", wx.DefaultPosition, wx.Size(80,-1) ), 0, wx.ALIGN_LEFT );
		this.m_paneSizer.Add( wx.Button(win, PANE_BUTTON, "Press to align right" ), 0, wx.ALIGN_LEFT );
		win.SetSizer( this.m_paneSizer );

		win.SetSizer( this.m_paneSizer );
		this.m_paneSizer.SetSizeHints(win);

		this.SetSizer(sz);
		sz.SetSizeHints(this);
	}
	OnToggleStatus(event as wx.CommandEvent) = {
		m_collPane.Collapse(!m_collPane.IsCollapsed());
	}
	OnAlignButton(event as wx.CommandEvent) = {
		item = this.m_paneSizer.GetItem( this.FindWindow(PANE_TEXTCTRL), true );
		item.SetFlag(  wx.ALIGN_RIGHT );
		this.Layout();
	}
	OnPaneChanged(event as wx.CollapsiblePaneEvent) = {
		wx.LogMessage("The pane has just been %s by the user",
				cond(event.GetCollapsed(), "collapsed", "expanded"));
	}

	m_collPane as wx.CollapsiblePane
	m_paneSizer as wx.GridSizer
	EventTable() = {
		EVT_BUTTON(this, id = PANEDLG_TOGGLESTATUS_BTN, this.OnToggleStatus)
		EVT_COLLAPSIBLEPANE_CHANGED(this, id = wx.ID_ANY, this.OnPaneChanged)
		EVT_BUTTON(this, this.PANE_BUTTON, this.OnAlignButton)
	}
}

wx.ImplementApp(MyApp())
