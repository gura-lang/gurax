//==============================================================================
// VType_wxRealPoint.gura
//==============================================================================
RealPoint = Class {
	__init__(args* as any) = \
		R'''
		// wxRealPoint(x as double = 0, y as double = 0)
		do {
			static DeclCallable* pDeclCallable = nullptr;
			if (!pDeclCallable) {
				pDeclCallable = new DeclCallable();
				pDeclCallable->DeclareArg("x", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
				pDeclCallable->DeclareArg("y", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
			}
			RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
			if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
			Error::Clear();
			ArgPicker args(*pArgument);
			double x = args.IsValid()? args.PickNumber<double>() : 0;
			double y = args.IsValid()? args.PickNumber<double>() : 0;
			return new Value_wxRealPoint(wxRealPoint(x, y));
		} while (0);
		Error::ClearIssuedFlag();
		// wxRealPoint(pt as const_RealPoint_r)
		do {
			static DeclCallable* pDeclCallable = nullptr;
			if (!pDeclCallable) {
				pDeclCallable = new DeclCallable();
				pDeclCallable->DeclareArg("pt", VTYPE_wxPoint);
			}
			RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
			if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
			Error::Clear();
			ArgPicker args(*pArgument);
			const wxPoint& pt = args.Pick<Value_wxPoint>().GetEntity();
			return new Value_wxRealPoint(wxRealPoint(pt));
		} while (0);
		return Value::nil();
		'''
	x.getter as double = \
		R'''
		return new Value_Number(valueThis_gurax.GetEntity().x);
		'''
	x.setter as double = \
		R'''
		double x = Value_Number::GetNumber<double>(value_gurax);
		valueThis_gurax.GetEntity().x = x;
		'''
	y.getter as double = \
		R'''
		return new Value_Number(valueThis_gurax.GetEntity().y);
		'''
	y.setter as double = \
		R'''
		double y = Value_Number::GetNumber<double>(value_gurax);
		valueThis_gurax.GetEntity().y = y;
		'''
	__cast__() = \
		R'''
		if (value.IsInstanceOf(VTYPE_wxPoint)) {
			const wxPoint& pt = Value_wxPoint::GetEntity(value);
			return new Value_wxRealPoint(wxRealPoint(pt));
		}
		return nullptr;
		'''
	__toString__() = \
		R'''
		const wxRealPoint& pt = GetEntity();
		return ToStringGeneric(ss, String().Format("wx.RealPoint:x=%g:y=%g", pt.x, pt.y));
		'''
} %% R'''
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.RealPoint, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.RealPoint, `en)}

${help.ComposeMethodHelp(wx.RealPoint, `en)}
''' %% R'''
# 概要

# 定数

${help.ComposePropertyHelp(wx.RealPoint, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.RealPoint, `ja)}

${help.ComposeMethodHelp(wx.RealPoint, `ja)}
'''ja

(const_RealPoint_r == const_RealPoint_r) as bool
(const_RealPoint_r != const_RealPoint_r) as bool
(const_RealPoint_r + const_RealPoint_r) as RealPoint
(const_RealPoint_r - const_RealPoint_r) as RealPoint
(const_RealPoint_r + const_Size_r) as RealPoint
(const_RealPoint_r - const_Size_r) as RealPoint
(const_Size_r + const_RealPoint_r) as RealPoint
(const_Size_r - const_RealPoint_r) as RealPoint
(const_RealPoint_r / int) as RealPoint
(const_RealPoint_r * int) as RealPoint
(-const_RealPoint_r) as RealPoint
