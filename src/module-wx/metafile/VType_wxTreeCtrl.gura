//==============================================================================
// VType_wxTreeCtrl.gura
//==============================================================================
TreeCtrl = Class(Control) {
	@include['wx/treectrl.h']	
	__init__(parent as Window_p, id as WindowID = wxID_ANY, pos as const_Point_r = wxDefaultPosition, size as const_Size_r = wxDefaultSize,
		style as long = wxTR_DEFAULT_STYLE, validator as const_Validator_r = wxDefaultValidator, name as String = wxTreeCtrlNameStr)
	AddRoot(text as const_String_r, image as int = -1, selImage as int = -1, data? as TreeItemData_p) as TreeItemId
	AppendItem(parent as const_TreeItemId_r, text as const_String_r, image as int = -1, selImage as int = -1, data? as TreeItemData_p) as TreeItemId
	//AssignButtonsImageList(imageList as ImageList_p) as void
	AssignImageList(imageList as ImageList_p) as void
	AssignStateImageList(imageList as ImageList_p) as void
	Collapse(item as const_TreeItemId_r) as void
	CollapseAll() as void
	CollapseAllChildren(item as const_TreeItemId_r) as void
	CollapseAndReset(item as const_TreeItemId_r) as void
	Create(parent as Window_p, id as WindowID = wxID_ANY, pos as const_Point_r = wxDefaultPosition, size as const_Size_r = wxDefaultSize, style as long = wxTR_DEFAULT_STYLE, validator as const_Validator_r = wxDefaultValidator, name as const_String_r = wxTreeCtrlNameStr) as bool
	Delete(item as const_TreeItemId_r) as void
	DeleteAllItems() as void
	DeleteChildren(item as const_TreeItemId_r) as void
	EnableBellOnNoMatch(on as bool = true) as void
	EndEditLabel(item as const_TreeItemId_r, discardChanges as bool = false) as void
	EnsureVisible(item as const_TreeItemId_r) as void
	Expand(item as const_TreeItemId_r) as void
	ExpandAll() as void
	ExpandAllChildren(item as const_TreeItemId_r) as void
	GetBoundingRect(item as const_TreeItemId_r, rect as Rect_r, textOnly as bool = false) as bool
	//GetButtonsImageList() as ImageList_p
	GetChildrenCount(item as const_TreeItemId_r, recursively as bool = true) as size_t
	GetCount() as unsigned_int
	GetEditControl() as TextCtrl_p
	//GetFirstChild(item as const_TreeItemId_r, cookie as TreeItemIdValue_r) as TreeItemId
	GetFirstVisibleItem() as TreeItemId
	GetFocusedItem() as TreeItemId
	ClearFocusedItem() as void
	SetFocusedItem(item as const_TreeItemId_r) as void
	GetImageList() as ImageList_p
	GetIndent() as unsigned_int
	GetSpacing() as unsigned_int
	GetItemBackgroundColour(item as const_TreeItemId_r) as Colour
	//GetItemData(item as const_TreeItemId_r) as TreeItemData_p
	GetItemFont(item as const_TreeItemId_r) as Font
	//GetItemImage(item as const_TreeItemId_r, which as TreeItemIcon = wxTreeItemIcon_Normal) as int
	GetItemParent(item as const_TreeItemId_r) as TreeItemId
	GetItemState(item as const_TreeItemId_r) as int
	GetItemText(item as const_TreeItemId_r) as String
	GetItemTextColour(item as const_TreeItemId_r) as Colour
	GetLastChild(item as const_TreeItemId_r) as TreeItemId
	//GetNextChild(item as const_TreeItemId_r, cookie as TreeItemIdValue_r) as TreeItemId
	GetNextSibling(item as const_TreeItemId_r) as TreeItemId
	GetNextVisible(item as const_TreeItemId_r) as TreeItemId
	GetPrevSibling(item as const_TreeItemId_r) as TreeItemId
	GetPrevVisible(item as const_TreeItemId_r) as TreeItemId
	GetQuickBestSize() as bool
	GetRootItem() as TreeItemId
	GetSelection() as TreeItemId
	//GetSelections(selection as ArrayTreeItemIds_r) as size_t
	GetStateImageList() as ImageList_p
	//HitTest(point as const_Point_r, flags as int_r) as TreeItemId
	HitTest(point as const_Point_r) = \
		R'''
		int flags;
		wxTreeItemId rtn = pEntity_gurax->HitTest(point, flags);
		return Value_Tuple::Create(new Value_wxTreeItemId(rtn), new Value_Number(flags));
		'''
	//InsertItem(parent as const_TreeItemId_r, previous as const_TreeItemId_r, text as const_String_r, image as int = -1, selImage as int = -1, data as TreeItemData_p = NULL) as TreeItemId
	//InsertItem(parent as const_TreeItemId_r, pos as size_t, text as const_String_r, image as int = -1, selImage as int = -1, data as TreeItemData_p = NULL) as TreeItemId
	InsertItem(parent as const_TreeItemId_r, pos as any, text as const_String_r, image as int = -1, selImage as int = -1, data? as TreeItemData_p) as TreeItemId = \
		R'''
		if (pos.IsType(VTYPE_wxTreeItemId)) {
			wxTreeItemId rtn = pEntity_gurax->InsertItem(parent, Value_wxTreeItemId::GetEntity(pos), text, image, selImage, data);
			return new Value_wxTreeItemId(rtn);
		} else if (pos.IsType(VTYPE_Number)) {
			wxTreeItemId rtn = pEntity_gurax->InsertItem(parent, Value_Number::GetNumber<size_t>(pos), text, image, selImage, data);
			return new Value_wxTreeItemId(rtn);
		}
		Error::Issue(ErrorType::TypeError, "");
		return Value::nil();
		'''
	IsBold(item as const_TreeItemId_r) as bool
	IsEmpty() as bool
	IsExpanded(item as const_TreeItemId_r) as bool
	IsSelected(item as const_TreeItemId_r) as bool
	IsVisible(item as const_TreeItemId_r) as bool
	ItemHasChildren(item as const_TreeItemId_r) as bool
	OnCompareItems(item1 as const_TreeItemId_r, item2 as const_TreeItemId_r) as int
	//PrependItem(parent as const_TreeItemId_r, text as const_String_r, image as int = -1, selImage as int = -1, data as TreeItemData_p = NULL) as TreeItemId
	ScrollTo(item as const_TreeItemId_r) as void
	SelectItem(item as const_TreeItemId_r, select as bool = true) as void
	//SetButtonsImageList(imageList as ImageList_p) as void
	SetImageList(imageList as ImageList_p) as void
	SetIndent(indent as unsigned_int) as void
	SetSpacing(spacing as unsigned_int) as void
	SetItemBackgroundColour(item as const_TreeItemId_r, col as const_Colour_r) as void
	SetItemBold(item as const_TreeItemId_r, bold as bool = true) as void
	//SetItemData(item as const_TreeItemId_r, data as TreeItemData_p) as void
	SetItemDropHighlight(item as const_TreeItemId_r, highlight as bool = true) as void
	SetItemFont(item as const_TreeItemId_r, font as const_Font_r) as void
	SetItemHasChildren(item as const_TreeItemId_r, hasChildren as bool = true) as void
	//SetItemImage(item as const_TreeItemId_r, image as int, which as TreeItemIcon = wxTreeItemIcon_Normal) as void
	SetItemState(item as const_TreeItemId_r, state as int) as void
	SetItemText(item as const_TreeItemId_r, text as const_String_r) as void
	SetItemTextColour(item as const_TreeItemId_r, col as const_Colour_r) as void
	SetQuickBestSize(quickBestSize as bool) as void
	SetStateImageList(imageList as ImageList_p) as void
	SetWindowStyle(styles as long) as void
	SortChildren(item as const_TreeItemId_r) as void
	Toggle(item as const_TreeItemId_r) as void
	ToggleItemSelection(item as const_TreeItemId_r) as void
	Unselect() as void
	UnselectAll() as void
	UnselectItem(item as const_TreeItemId_r) as void
	SelectChildren(parent as const_TreeItemId_r) as void
}
