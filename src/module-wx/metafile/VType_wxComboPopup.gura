//==============================================================================
// VType_wxComboPopup.gura
//==============================================================================
ComboPopup = Class():loosePointer {
	@include['wx/combo.h']
	__init__()
	Create(parent as Window_p):virtual:pure as bool = 'return false;'
	DestroyPopup():virtual as void
	Dismiss() as void
	//FindItem(item as const_String_r, trueItem as String_p = NULL) as bool
	FindItem(item as const_String_r, &trueItem?:nilRef as String) as bool = \
		R'''
		bool rtn;
		if (trueItem) {
			wxString trueItem_;
			rtn = pEntity_gurax->FindItem(item, &trueItem_);
			trueItem->SetValue(new Value_String(trueItem_.ToUTF8().data()));
		} else {
			rtn = pEntity_gurax->FindItem(item);
		}
		return new Value_Bool(rtn);
		'''
	GetAdjustedSize(minWidth as int, prefHeight as int, maxHeight as int):virtual as Size
	GetComboCtrl() as ComboCtrl_p
	GetControl():virtual:pure as Window_p = 'return nullptr;'
	GetStringValue():const:virtual:pure as String = 'return "";'
	Init():virtual as void
	IsCreated() as bool
	LazyCreate():virtual as bool
	OnComboDoubleClick():virtual as void
	//OnComboKeyEvent(event as KeyEvent_r):virtual as void
	OnDismiss():virtual as void
	OnPopup():virtual as void
	PaintComboControl(dc as DC_r, rect as const_Rect_r):virtual as void
	SetStringValue(value as const_String_r):virtual as void
} %% R'''
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.ComboPopup, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.ComboPopup, `en)}

${help.ComposeMethodHelp(wx.ComboPopup, `en)}
''' %% R'''
# 概要

# 定数

${help.ComposePropertyHelp(wx.ComboPopup, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.ComboPopup, `ja)}

${help.ComposeMethodHelp(wx.ComboPopup, `ja)}
'''ja
