//==============================================================================
// VType_wxPen.gura
//==============================================================================
Pen = Class(GDIObject) {
	GetCap() as PenCap
	GetColour() as Colour
	//GetDashes(dashes as Dash_p_p) as int
	GetDashes() as List@gurax = \
		R'''
		wxDash* dashes;
		int n = pEntity_gurax->GetDashes(&dashes);
		return Value_List::Create(dashes, n);
		'''
	GetJoin() as PenJoin
	GetStipple() as Bitmap_p
	GetStyle() as PenStyle
	GetWidth() as int
	IsOk() as bool
	IsNonTransparent() as bool
	IsTransparent() as bool
	SetCap(capStyle as PenCap) as void
	//SetDashes(n as int, dash as const_Dash_p) as void
	SetDashes(dash[] as Dash) as void = \
		R'''
		int n = dash.sizeT<int>();
		pEntity_gurax->SetDashes(n, dash);
		return Value::nil();
		'''
	SetJoin(join_style as PenJoin) as void
	SetStipple(stipple as const_Bitmap_r) as void
	SetStyle(style as PenStyle) as void
	SetWidth(width as int) as void
	SetColour(colour as Colour_r) as void
	SetColourRGB(red as unsigned_char, green as unsigned_char, blue as unsigned_char) as void = SetColour
}

@enum {
	PenCap {
		CAP_INVALID
		CAP_ROUND
		CAP_PROJECTING
		CAP_BUTT
	}
	PenJoin {
		JOIN_INVALID
		JOIN_BEVEL
		JOIN_MITER
		JOIN_ROUND
	}
	PenStyle {
		PENSTYLE_INVALID 	
		PENSTYLE_SOLID 	
		PENSTYLE_DOT 	
		PENSTYLE_LONG_DASH 	
		PENSTYLE_SHORT_DASH 	
		PENSTYLE_DOT_DASH 	
		PENSTYLE_USER_DASH 	
		PENSTYLE_TRANSPARENT 	
		PENSTYLE_STIPPLE_MASK_OPAQUE 	
		PENSTYLE_STIPPLE_MASK 	
		PENSTYLE_STIPPLE 	
		PENSTYLE_BDIAGONAL_HATCH 	
		PENSTYLE_CROSSDIAG_HATCH 	
		PENSTYLE_FDIAGONAL_HATCH 	
		PENSTYLE_CROSS_HATCH 	
		PENSTYLE_HORIZONTAL_HATCH 	
		PENSTYLE_VERTICAL_HATCH 	
		PENSTYLE_FIRST_HATCH 	
		PENSTYLE_LAST_HATCH 	
	}
}
