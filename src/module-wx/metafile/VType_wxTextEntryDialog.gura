//==============================================================================
// VType_wxTextEntryDialog.gura
//==============================================================================
TextEntryDialog = Class(Dialog) {
	@include['wx/textdlg.h']
	__init__(parent:nil as Window_p, message as const_String_r, caption as const_String_r = wxGetTextFromUserPromptStr, value as const_String_r = wxEmptyString, style as long = wxTextEntryDialogStyle, pos as const_Point_r = wxDefaultPosition)
	Create(parent as Window_p, message as const_String_r, caption as const_String_r = wxGetTextFromUserPromptStr, value as const_String_r = wxEmptyString, style as long = wxTextEntryDialogStyle, pos as const_Point_r = wxDefaultPosition) as bool
	GetValue() as String
	SetMaxLength(len as unsigned_long) as void
	SetValue(value as const_String_r) as void
	ShowModal() as int
	SetTextValidator(args* as any) as void = \
		R'''
		// SetTextValidator(validator as const_TextValidator_r) as void
		do {
			static DeclCallable* pDeclCallable = nullptr;
			if (!pDeclCallable) {
				pDeclCallable = new DeclCallable();
				pDeclCallable->DeclareArg("validator", VTYPE_wxTextValidator);
			}
			RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
			if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
			Error::Clear();
			ArgPicker args(*pArgument);
			const wxTextValidator& validator = args.Pick<Value_wxTextValidator>().GetEntity();
			pEntity_gurax->SetTextValidator(validator);
			return Value::nil();
		} while (0);
		Error::ClearIssuedFlag();
		// SetTextValidator(style as TextValidatorStyle = wxFILTER_NONE) as void
		do {
			static DeclCallable* pDeclCallable = nullptr;
			if (!pDeclCallable) {
				pDeclCallable = new DeclCallable();
				pDeclCallable->DeclareArg("style", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
			}
			RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
			if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
			Error::Clear();
			ArgPicker args(*pArgument);
			wxTextValidatorStyle style = args.IsValid()? args.PickNumber<wxTextValidatorStyle>() : wxFILTER_NONE;
			pEntity_gurax->SetTextValidator(style);
			return Value::nil();
		} while (0);
		return Value::nil();
		'''
} %% R'''
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.TextEntryDialog, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.TextEntryDialog, `en)}

${help.ComposeMethodHelp(wx.TextEntryDialog, `en)}
''' %% R'''
# 概要

# 定数

${help.ComposePropertyHelp(wx.TextEntryDialog, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.TextEntryDialog, `ja)}

${help.ComposeMethodHelp(wx.TextEntryDialog, `ja)}
'''ja

@const {
	TextEntryDialogStyle
}

@string {
	GetTextFromUserPromptStr
	GetPasswordFromUserPromptStr
}
