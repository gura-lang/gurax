//==============================================================================
// VType_wxMouseState.gura
//==============================================================================
MouseState = Class():mixin {
	@mixin[KeyboardState]
	GetX() as Coord
	GetY() as Coord
	LeftIsDown() as bool
	MiddleIsDown() as bool
	RightIsDown() as bool
	Aux1IsDown() as bool
	Aux2IsDown() as bool
	SetX(x as Coord) as void
	SetY(y as Coord) as void
	SetPosition(pos as Point) as void
	SetLeftDown(down as bool) as void
	SetMiddleDown(down as bool) as void
	SetRightDown(down as bool) as void
	SetAux1Down(down as bool) as void
	SetAux2Down(down as bool) as void
	//SetState(state as const_MouseState_r) as void
	GetPosition() as Point
	//GetPosition(x as int_p, y as int_p) as void
	GetPositionXY() as Tuple@gurax = \
		R'''
		int x, y;
		pEntity_gurax->GetPosition(&x, &y);
		return Value_Tuple::Create(new Value_Number(x), new Value_Number(y));
		'''
} %% R'''
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.MouseState, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.MouseState, `en)}

${help.ComposeMethodHelp(wx.MouseState, `en)}
''' %% R'''
# 概要

# 定数

${help.ComposePropertyHelp(wx.MouseState, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.MouseState, `ja)}

${help.ComposeMethodHelp(wx.MouseState, `ja)}
'''ja
