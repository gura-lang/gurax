//==============================================================================
// VType_wxBitmap.gura
//==============================================================================
Bitmap = Class(GDIObject):holdEntity {
	__init__()
	ConvertToImage() as Image
	CopyFromIcon(icon as const_Icon_r) as bool
	Create(width as int, height as int, depth as int = wxBITMAP_SCREEN_DEPTH) as bool
	//Create(sz as const_Size_r, depth as int = wxBITMAP_SCREEN_DEPTH) as bool
	GetDepth() as int
	GetHeight() as int
	GetMask() as Mask_p
	GetPalette() as Palette_p
	GetSubBitmap(rect as const_Rect_r) as Bitmap
	GetSize() as Size
	ConvertToDisabled(brightness as unsigned_char = 255) as Bitmap
	GetWidth() as int
	IsOk() as bool
	LoadFile(name as const_String_r, type as BitmapType = wxBITMAP_DEFAULT_TYPE) as bool
	SaveFile(name as const_String_r, type as BitmapType, palette as const_Palette_p = NULL) as bool
	SetDepth(depth as int) as void
	SetHeight(height as int) as void
	SetMask(mask as Mask_p) as void
	SetPalette(palette as const_Palette_r) as void
	SetWidth(width as int) as void
	// Static Public Member Functions
	AddHandler(handler as GDIImageHandler_p):static as void
	CleanUpHandlers():static as void
	FindHandler(name as const_String_r):static as GDIImageHandler_p
	//FindHandler(extension as const_String_r, bitmapType as BitmapType):static as GDIImageHandler_p
	//FindHandler(bitmapType as BitmapType):static as GDIImageHandler_p
	//GetHandlers():static as List
	InitStandardHandlers():static as void
	InsertHandler(handler as GDIImageHandler_p):static as void
	NewFrom(image as Image@gurax):static as Bitmap = \
		R'''
		return new Value_wxBitmap(wxBitmap(Util::CreateImage(*image)));
		'''
	//NewFromPNGData(data as const_void_p, size as size_t):static as Bitmap
	NewFromPNGData(data as Pointer@gurax, size? as size_t):static as Bitmap = \
		R'''
		auto rtn = wxBitmap::NewFromPNGData(data->GetPointerC<void>(), size_validFlag? size : data->GetBytesAvailable());
		return new Value_wxBitmap(rtn);
		'''
	RemoveHandler(name as const_String_r):static as bool
	__cast__() = \
		R'''
		RefPtr<Value_Image> pValueCasted(value.Cast<Value_Image>(processor, flags));
		if (pValueCasted) {
			return new Value_wxBitmap(wxBitmap(Util::CreateImage(pValueCasted->GetImage())));
		}
		return nullptr;
		'''
} %% R'''
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.Bitmap, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.Bitmap, `en)}

${help.ComposeMethodHelp(wx.Bitmap, `en)}
''' %% R'''
# 概要

# 定数

${help.ComposePropertyHelp(wx.Bitmap, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.Bitmap, `ja)}

${help.ComposeMethodHelp(wx.Bitmap, `ja)}
'''ja
