//==============================================================================
// VType_wxComboBox.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXCOMBOBOX_H
#define GURAX_MODULE_WX_VTYPE_WXCOMBOBOX_H
#include <gurax.h>
#include <wx/wx.h>
#include "Util.h"
#include "VType_wxControl.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxComboBox
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxComboBox : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxComboBox VTYPE_wxComboBox;

//------------------------------------------------------------------------------
// Value_wxComboBox
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxComboBox : public Value_wxControl {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxComboBox);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxComboBox");
public:
	class EntityT : public wxComboBox {
	public:
		using wxComboBox::wxComboBox;
	public:
		EntityCore core;
	};
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxComboBox() = delete;
	explicit Value_wxComboBox(wxEvtHandler* pEntity, VType& vtype = VTYPE_wxComboBox) :
		Value_wxControl(pEntity, vtype) {}
	// Copy constructor/operator
	Value_wxComboBox(const Value_wxComboBox& src) = delete;
	Value_wxComboBox& operator=(const Value_wxComboBox& src) = delete;
	// Move constructor/operator
	Value_wxComboBox(Value_wxComboBox&& src) noexcept = delete;
	Value_wxComboBox& operator=(Value_wxComboBox&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxComboBox() = default;
public:
	wxComboBox& GetEntity() {
		return reinterpret_cast<wxComboBox&>(Value_wxEvtHandler::GetEntity());
	}
	const wxComboBox& GetEntity() const {
		return reinterpret_cast<const wxComboBox&>(Value_wxEvtHandler::GetEntity());
	}
	wxComboBox* GetEntityPtr() {
		return reinterpret_cast<wxComboBox*>(Value_wxEvtHandler::GetEntityPtr());
	}
	const wxComboBox* GetEntityPtr() const {
		return reinterpret_cast<const wxComboBox*>(Value_wxEvtHandler::GetEntityPtr());
	}
public:
	static wxComboBox& GetEntity(Value& value) {
		return dynamic_cast<Value_wxComboBox&>(value).GetEntity();
	}
	static const wxComboBox& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxComboBox&>(value).GetEntity();
	}
	static wxComboBox* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxComboBox&>(value).GetEntityPtr();
	}
	static const wxComboBox* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxComboBox&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
