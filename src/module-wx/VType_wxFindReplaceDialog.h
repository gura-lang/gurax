//==============================================================================
// VType_wxFindReplaceDialog.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXFINDREPLACEDIALOG_H
#define GURAX_MODULE_WX_VTYPE_WXFINDREPLACEDIALOG_H
#include <gurax.h>
#include <wx/wx.h>
#include <wx/fdrepdlg.h>
#include "Util.h"
#include "VType_wxDialog.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxFindReplaceDialog
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxFindReplaceDialog : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxFindReplaceDialog VTYPE_wxFindReplaceDialog;

//------------------------------------------------------------------------------
// Value_wxFindReplaceDialog
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxFindReplaceDialog : public Value_wxDialog {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxFindReplaceDialog);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxFindReplaceDialog");
protected:
	wxWeakRef<wxFindReplaceDialog> _pEntity;
public:
	class EntityT : public wxFindReplaceDialog {
	public:
		using wxFindReplaceDialog::wxFindReplaceDialog;
	public:
		EntityCore core_gurax;
	};
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxFindReplaceDialog() = delete;
	explicit Value_wxFindReplaceDialog(wxFindReplaceDialog* pEntity, VType& vtype = VTYPE_wxFindReplaceDialog) :
		Value_wxDialog(pEntity, vtype), _pEntity(pEntity) {}
	// Copy constructor/operator
	Value_wxFindReplaceDialog(const Value_wxFindReplaceDialog& src) = delete;
	Value_wxFindReplaceDialog& operator=(const Value_wxFindReplaceDialog& src) = delete;
	// Move constructor/operator
	Value_wxFindReplaceDialog(Value_wxFindReplaceDialog&& src) noexcept = delete;
	Value_wxFindReplaceDialog& operator=(Value_wxFindReplaceDialog&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxFindReplaceDialog() = default;
public:
	wxFindReplaceDialog& GetEntity() { return *_pEntity; }
	const wxFindReplaceDialog& GetEntity() const { return *_pEntity; }
	wxFindReplaceDialog* GetEntityPtr() { return _pEntity.get(); }
	const wxFindReplaceDialog* GetEntityPtr() const { return _pEntity.get(); }
public:
	static wxFindReplaceDialog& GetEntity(Value& value) {
		return dynamic_cast<Value_wxFindReplaceDialog&>(value).GetEntity();
	}
	static const wxFindReplaceDialog& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxFindReplaceDialog&>(value).GetEntity();
	}
	static wxFindReplaceDialog* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxFindReplaceDialog&>(value).GetEntityPtr();
	}
	static const wxFindReplaceDialog* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxFindReplaceDialog&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
