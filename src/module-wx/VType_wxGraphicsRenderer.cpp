//==============================================================================
// VType_wxGraphicsRenderer.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

# Property

# Operator

# Cast Operation

# Constructor

# Method
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.GraphicsRenderer#CreateBitmapFromImage(image as wx.Image) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateBitmapFromImage_gurax, "CreateBitmapFromImage")
{
	Declare(VTYPE_wxGraphicsBitmap, Flag::None);
	DeclareArg("image", VTYPE_wxImage, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateBitmapFromImage_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxImage& value_image = args_gurax.Pick<Value_wxImage>();
	const wxImage& image = value_image.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsBitmap(
		pEntity_gurax->CreateBitmapFromImage(image)));
}

// wx.GraphicsRenderer#CreateImageFromBitmap(bmp as wx.GraphicsBitmap) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateImageFromBitmap_gurax, "CreateImageFromBitmap")
{
	Declare(VTYPE_wxImage, Flag::None);
	DeclareArg("bmp", VTYPE_wxGraphicsBitmap, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateImageFromBitmap_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxGraphicsBitmap& value_bmp = args_gurax.Pick<Value_wxGraphicsBitmap>();
	const wxGraphicsBitmap& bmp = value_bmp.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxImage(
		pEntity_gurax->CreateImageFromBitmap(bmp)));
}

// wx.GraphicsRenderer#CreateBitmapFromNativeBitmap(bitmap as Pointer) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateBitmapFromNativeBitmap_gurax, "CreateBitmapFromNativeBitmap")
{
	Declare(VTYPE_wxGraphicsBitmap, Flag::None);
	DeclareArg("bitmap", VTYPE_Pointer, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateBitmapFromNativeBitmap_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	void* bitmap = args_gurax.Pick<Gurax::Value_Pointer>().GetPointer().GetWritablePointerC<void>();
	if (!bitmap) {
		Error::Issue(ErrorType::MemoryError, "the pointer is not writable");
		return Value::nil();
	}
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsBitmap(
		pEntity_gurax->CreateBitmapFromNativeBitmap(bitmap)));
}

// wx.GraphicsRenderer#CreateContext(window as wx.Window) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateContext_gurax, "CreateContext")
{
	Declare(VTYPE_wxGraphicsContext, Flag::None);
	DeclareArg("window", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateContext_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_window = args_gurax.Pick<Value_wxWindow>();
	wxWindow* window = value_window.GetEntityPtr();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsContext(
		*pEntity_gurax->CreateContext(window)));
}

// wx.GraphicsRenderer#CreateContextFromImage(image as wx.Image) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateContextFromImage_gurax, "CreateContextFromImage")
{
	Declare(VTYPE_wxGraphicsContext, Flag::None);
	DeclareArg("image", VTYPE_wxImage, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateContextFromImage_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxImage& value_image = args_gurax.Pick<Value_wxImage>();
	wxImage& image = value_image.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsContext(
		*pEntity_gurax->CreateContextFromImage(image)));
}

// wx.GraphicsRenderer#CreateBrush(brush as wx.Brush) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateBrush_gurax, "CreateBrush")
{
	Declare(VTYPE_wxGraphicsBrush, Flag::None);
	DeclareArg("brush", VTYPE_wxBrush, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateBrush_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxBrush& value_brush = args_gurax.Pick<Value_wxBrush>();
	const wxBrush& brush = value_brush.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsBrush(
		pEntity_gurax->CreateBrush(brush)));
}

// wx.GraphicsRenderer#CreateContextFromNativeContext(context as Pointer) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateContextFromNativeContext_gurax, "CreateContextFromNativeContext")
{
	Declare(VTYPE_wxGraphicsContext, Flag::None);
	DeclareArg("context", VTYPE_Pointer, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateContextFromNativeContext_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	void* context = args_gurax.Pick<Gurax::Value_Pointer>().GetPointer().GetWritablePointerC<void>();
	if (!context) {
		Error::Issue(ErrorType::MemoryError, "the pointer is not writable");
		return Value::nil();
	}
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsContext(
		*pEntity_gurax->CreateContextFromNativeContext(context)));
}

// wx.GraphicsRenderer#CreateContextFromNativeWindow(window as Pointer) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateContextFromNativeWindow_gurax, "CreateContextFromNativeWindow")
{
	Declare(VTYPE_wxGraphicsContext, Flag::None);
	DeclareArg("window", VTYPE_Pointer, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateContextFromNativeWindow_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	void* window = args_gurax.Pick<Gurax::Value_Pointer>().GetPointer().GetWritablePointerC<void>();
	if (!window) {
		Error::Issue(ErrorType::MemoryError, "the pointer is not writable");
		return Value::nil();
	}
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsContext(
		*pEntity_gurax->CreateContextFromNativeWindow(window)));
}

// wx.GraphicsRenderer#CreateMeasuringContext() {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateMeasuringContext_gurax, "CreateMeasuringContext")
{
	Declare(VTYPE_wxGraphicsContext, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateMeasuringContext_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsContext(
		*pEntity_gurax->CreateMeasuringContext()));
}

// wx.GraphicsRenderer#CreateFont(font as wx.Font, col? as wx.Colour) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateFont_gurax, "CreateFont")
{
	Declare(VTYPE_wxGraphicsFont, Flag::None);
	DeclareArg("font", VTYPE_wxFont, ArgOccur::Once, ArgFlag::None);
	DeclareArg("col", VTYPE_wxColour, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateFont_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxFont& value_font = args_gurax.Pick<Value_wxFont>();
	const wxFont& font = value_font.GetEntity();
	const wxColour& col = args_gurax.IsValid()? args_gurax.Pick<Value_wxColour>().GetEntity() : *wxBLACK;
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsFont(
		pEntity_gurax->CreateFont(font, col)));
}

// wx.GraphicsRenderer#CreateLinearGradientBrush(x1 as Number, y1 as Number, x2 as Number, y2 as Number, stops as wx.GraphicsGradientStops) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateLinearGradientBrush_gurax, "CreateLinearGradientBrush")
{
	Declare(VTYPE_wxGraphicsBrush, Flag::None);
	DeclareArg("x1", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y1", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("x2", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y2", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("stops", VTYPE_wxGraphicsGradientStops, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateLinearGradientBrush_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x1 = args_gurax.PickNumber<Double>();
	Double y1 = args_gurax.PickNumber<Double>();
	Double x2 = args_gurax.PickNumber<Double>();
	Double y2 = args_gurax.PickNumber<Double>();
	Value_wxGraphicsGradientStops& value_stops = args_gurax.Pick<Value_wxGraphicsGradientStops>();
	const wxGraphicsGradientStops& stops = value_stops.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsBrush(
		pEntity_gurax->CreateLinearGradientBrush(x1, y1, x2, y2, stops)));
}

// wx.GraphicsRenderer#CreateMatrix(a? as Number, b? as Number, c? as Number, d? as Number, tx? as Number, ty? as Number) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateMatrix_gurax, "CreateMatrix")
{
	Declare(VTYPE_wxGraphicsMatrix, Flag::None);
	DeclareArg("a", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("b", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("c", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("d", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("tx", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("ty", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateMatrix_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	bool a_validFlag = args_gurax.IsValid();
	Double a = a_validFlag? args_gurax.PickNumber<Double>() : 1.0;
	bool b_validFlag = args_gurax.IsValid();
	Double b = b_validFlag? args_gurax.PickNumber<Double>() : 0.0;
	bool c_validFlag = args_gurax.IsValid();
	Double c = c_validFlag? args_gurax.PickNumber<Double>() : 0.0;
	bool d_validFlag = args_gurax.IsValid();
	Double d = d_validFlag? args_gurax.PickNumber<Double>() : 1.0;
	bool tx_validFlag = args_gurax.IsValid();
	Double tx = tx_validFlag? args_gurax.PickNumber<Double>() : 0.0;
	bool ty_validFlag = args_gurax.IsValid();
	Double ty = ty_validFlag? args_gurax.PickNumber<Double>() : 0.0;
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsMatrix(
		pEntity_gurax->CreateMatrix(a, b, c, d, tx, ty)));
}

// wx.GraphicsRenderer#CreatePath() {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreatePath_gurax, "CreatePath")
{
	Declare(VTYPE_wxGraphicsPath, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreatePath_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsPath(
		pEntity_gurax->CreatePath()));
}

// wx.GraphicsRenderer#CreateRadialGradientBrush(xo as Number, yo as Number, xc as Number, yc as Number, radius as Number, stops as wx.GraphicsGradientStops) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateRadialGradientBrush_gurax, "CreateRadialGradientBrush")
{
	Declare(VTYPE_wxGraphicsBrush, Flag::None);
	DeclareArg("xo", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("yo", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("xc", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("yc", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("radius", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("stops", VTYPE_wxGraphicsGradientStops, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateRadialGradientBrush_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double xo = args_gurax.PickNumber<Double>();
	Double yo = args_gurax.PickNumber<Double>();
	Double xc = args_gurax.PickNumber<Double>();
	Double yc = args_gurax.PickNumber<Double>();
	Double radius = args_gurax.PickNumber<Double>();
	Value_wxGraphicsGradientStops& value_stops = args_gurax.Pick<Value_wxGraphicsGradientStops>();
	const wxGraphicsGradientStops& stops = value_stops.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsBrush(
		pEntity_gurax->CreateRadialGradientBrush(xo, yo, xc, yc, radius, stops)));
}

// wx.GraphicsRenderer#CreateSubBitmap(bitmap as wx.GraphicsBitmap, x as Number, y as Number, w as Number, h as Number) {block?}
Gurax_DeclareMethodAlias(wxGraphicsRenderer, CreateSubBitmap_gurax, "CreateSubBitmap")
{
	Declare(VTYPE_wxGraphicsBitmap, Flag::None);
	DeclareArg("bitmap", VTYPE_wxGraphicsBitmap, ArgOccur::Once, ArgFlag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("w", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("h", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsRenderer, CreateSubBitmap_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxGraphicsBitmap& value_bitmap = args_gurax.Pick<Value_wxGraphicsBitmap>();
	const wxGraphicsBitmap& bitmap = value_bitmap.GetEntity();
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	Double w = args_gurax.PickNumber<Double>();
	Double h = args_gurax.PickNumber<Double>();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsBitmap(
		pEntity_gurax->CreateSubBitmap(bitmap, x, y, w, h)));
}

// wx.GraphicsRenderer.GetDefaultRenderer() {block?}
Gurax_DeclareClassMethodAlias(wxGraphicsRenderer, GetDefaultRenderer_gurax, "GetDefaultRenderer")
{
	Declare(VTYPE_wxGraphicsRenderer, Flag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementClassMethodEx(wxGraphicsRenderer, GetDefaultRenderer_gurax, processor_gurax, argument_gurax)
{
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsRenderer(
		wxGraphicsRenderer::GetDefaultRenderer()));
}

// wx.GraphicsRenderer.GetCairoRenderer() {block?}
Gurax_DeclareClassMethodAlias(wxGraphicsRenderer, GetCairoRenderer_gurax, "GetCairoRenderer")
{
	Declare(VTYPE_wxGraphicsRenderer, Flag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementClassMethodEx(wxGraphicsRenderer, GetCairoRenderer_gurax, processor_gurax, argument_gurax)
{
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGraphicsRenderer(
		wxGraphicsRenderer::GetCairoRenderer()));
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxGraphicsRenderer
//------------------------------------------------------------------------------
VType_wxGraphicsRenderer VTYPE_wxGraphicsRenderer("GraphicsRenderer");

void VType_wxGraphicsRenderer::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelpTmpl(Gurax_Symbol(en), g_docHelp_en);
	// Declaration of VType
	Declare(VTYPE_Object, Flag::Mutable);
	// Assignment of method
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateBitmapFromImage_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateImageFromBitmap_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateBitmapFromNativeBitmap_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateContext_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateContextFromImage_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateBrush_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateContextFromNativeContext_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateContextFromNativeWindow_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateMeasuringContext_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateFont_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateLinearGradientBrush_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateMatrix_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreatePath_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateRadialGradientBrush_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, CreateSubBitmap_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, GetDefaultRenderer_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsRenderer, GetCairoRenderer_gurax));
}

//------------------------------------------------------------------------------
// Value_wxGraphicsRenderer
//------------------------------------------------------------------------------
VType& Value_wxGraphicsRenderer::vtype = VTYPE_wxGraphicsRenderer;

String Value_wxGraphicsRenderer::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.GraphicsRenderer");
}

Gurax_EndModuleScope(wx)
