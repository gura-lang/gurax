//==============================================================================
// VType_wxStaticText.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.StaticText, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.StaticText, `en)}

${help.ComposeMethodHelp(wx.StaticText, `en)}
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.StaticText(parent as wx.Window, id as Number, label as String, pos? as wx.Point, size? as wx.Size, style? as Number, name? as String) {block?}
Gurax_DeclareConstructorAlias(StaticText_gurax, "StaticText")
{
	Declare(VTYPE_wxStaticText, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("id", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("label", VTYPE_String, ArgOccur::Once, ArgFlag::None);
	DeclareArg("pos", VTYPE_wxPoint, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("style", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("name", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp("en", u8R"**(
Creates an instance of wx.StaticText.
)**");
}

Gurax_ImplementConstructorEx(StaticText_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	wxWindowID id = args_gurax.PickNumber<wxWindowID>();
	const char* label = args_gurax.PickString();
	const wxPoint& pos = args_gurax.IsValid()? args_gurax.Pick<Value_wxPoint>().GetEntity() : wxDefaultPosition;
	const wxSize& size = args_gurax.IsValid()? args_gurax.Pick<Value_wxSize>().GetEntity() : wxDefaultSize;
	bool style_validFlag = args_gurax.IsValid();
	long style = style_validFlag? args_gurax.PickNumber<long>() : 0;
	const char* name = args_gurax.IsValid()? args_gurax.PickString() : wxStaticTextNameStr;
	// Function body
	auto pEntity_gurax = new Value_wxStaticText::EntityT(parent, id, label, pos, size, style, name);
	RefPtr<Value_wxStaticText> pValue_gurax(new Value_wxStaticText(pEntity_gurax));
	pEntity_gurax->core_gurax.SetInfo(processor_gurax.Reference(), *pValue_gurax);
	return argument_gurax.ReturnValue(processor_gurax, pValue_gurax.release());
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.StaticText#IsEllipsized()
Gurax_DeclareMethodAlias(wxStaticText, IsEllipsized_gurax, "IsEllipsized")
{
	Declare(VTYPE_Bool, Flag::None);
	AddHelp("en", u8R"**(

)**");
}

Gurax_ImplementMethodEx(wxStaticText, IsEllipsized_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsEllipsized();
	return new Gurax::Value_Bool(rtn);
}

// wx.StaticText#Wrap(width as Number)
Gurax_DeclareMethodAlias(wxStaticText, Wrap_gurax, "Wrap")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("width", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp("en", u8R"**(

)**");
}

Gurax_ImplementMethodEx(wxStaticText, Wrap_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int width = args_gurax.PickNumber<int>();
	// Function body
	pEntity_gurax->Wrap(width);
	return Gurax::Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxStaticText
//------------------------------------------------------------------------------
VType_wxStaticText VTYPE_wxStaticText("StaticText");

void VType_wxStaticText::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp("en", g_docHelp_en);
	// Declaration of VType
	Declare(VTYPE_wxControl, Flag::Mutable, Gurax_CreateConstructor(StaticText_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxStaticText, IsEllipsized_gurax));
	Assign(Gurax_CreateMethod(wxStaticText, Wrap_gurax));
}

//------------------------------------------------------------------------------
// Value_wxStaticText
//------------------------------------------------------------------------------
VType& Value_wxStaticText::vtype = VTYPE_wxStaticText;

String Value_wxStaticText::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.StaticText");
}

//------------------------------------------------------------------------------
// Value_wxStaticText::EntityT
//------------------------------------------------------------------------------

Gurax_EndModuleScope(wx)
