import(re)

//------------------------------------------------------------------------------
txt = R'''
virtual void 	DrawCellHighlight (wxDC &dc, const wxGridCellAttr *attr)

virtual void 	DrawRowLabels (wxDC &dc, const wxArrayInt &rows)
 
virtual void 	DrawRowLabel (wxDC &dc, int row)
 
virtual void 	DrawColLabels (wxDC &dc, const wxArrayInt &cols)
 
virtual void 	DrawColLabel (wxDC &dc, int col)
 
virtual void 	DrawCornerLabel (wxDC &dc)
 
void 	DrawTextRectangle (wxDC &dc, const wxString &text, const wxRect &rect, int horizontalAlignment=wxALIGN_LEFT, int verticalAlignment=wxALIGN_TOP, int textOrientation=wxHORIZONTAL) const
 
void 	DrawTextRectangle (wxDC &dc, const wxArrayString &lines, const wxRect &rect, int horizontalAlignment=wxALIGN_LEFT, int verticalAlignment=wxALIGN_TOP, int textOrientation=wxHORIZONTAL) const
 
wxColour 	GetCellHighlightColour () const
 
int 	GetCellHighlightPenWidth () const
 
int 	GetCellHighlightROPenWidth () const
 
void 	SetCellHighlightColour (const wxColour &colour)
 
void 	SetCellHighlightPenWidth (int width)
 
void 	SetCellHighlightROPenWidth (int width)

a 	wxGrid (wxWindow *parent, wxWindowID id, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxWANTS_CHARS, const wxString &name=wxGridNameStr)
 	Constructor creating the grid window. More...
 
bool 	Create (wxWindow *parent, wxWindowID id, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxWANTS_CHARS, const wxString &name=wxGridNameStr)
 	Creates the grid window for an object initialized using the default constructor. More...
 
bool 	CreateGrid (int numRows, int numCols, wxGridSelectionModes selmode=wxGridSelectCells)
 	Creates a grid with the specified initial number of rows and columns. More...
 
bool 	SetTable (wxGridTableBase *table, bool takeOwnership=false, wxGridSelectionModes selmode=wxGridSelectCells)
 	Passes a pointer to a custom grid table to be used by the grid. More...
 
bool 	ProcessTableMessage (wxGridTableMessage &msg)
 	Receive and handle a message from the table. More...
void 	EnableGridLines (bool enable=true)
 	Turns the drawing of grid lines on or off. More...
 
virtual wxPen 	GetColGridLinePen (int col)
 	Returns the pen used for vertical grid lines. More...
 
virtual wxPen 	GetDefaultGridLinePen ()
 	Returns the pen used for grid lines. More...
 
wxColour 	GetGridLineColour () const
 	Returns the colour used for grid lines. More...
 
virtual wxPen 	GetRowGridLinePen (int row)
 	Returns the pen used for horizontal grid lines. More...
 
bool 	GridLinesEnabled () const
 	Returns true if drawing of grid lines is turned on, false otherwise. More...
 
void 	SetGridLineColour (const wxColour &colour)
 	Sets the colour used to draw grid lines. More...
 
 void 	GetColLabelAlignment (int *horiz, int *vert) const
 	Sets the arguments to the current column label alignment values. More...
 
int 	GetColLabelTextOrientation () const
 	Returns the orientation of the column labels (either wxHORIZONTAL or wxVERTICAL). More...
 
wxString 	GetColLabelValue (int col) const
 	Returns the specified column label. More...
 
wxColour 	GetLabelBackgroundColour () const
 	Returns the colour used for the background of row and column labels. More...
 
wxFont 	GetLabelFont () const
 	Returns the font used for row and column labels. More...
 
wxColour 	GetLabelTextColour () const
 	Returns the colour used for row and column label text. More...
 
void 	GetRowLabelAlignment (int *horiz, int *vert) const
 	Returns the alignment used for row labels. More...
 
wxString 	GetRowLabelValue (int row) const
 	Returns the specified row label. More...
 
void 	HideColLabels ()
 	Hides the column labels by calling SetColLabelSize() with a size of 0. More...
 
void 	HideRowLabels ()
 	Hides the row labels by calling SetRowLabelSize() with a size of 0. More...
 
void 	SetColLabelAlignment (int horiz, int vert)
 	Sets the horizontal and vertical alignment of column label text. More...
 
void 	SetColLabelTextOrientation (int textOrientation)
 	Sets the orientation of the column labels (either wxHORIZONTAL or wxVERTICAL). More...
 
void 	SetColLabelValue (int col, const wxString &value)
 	Set the value for the given column label. More...
 
void 	SetLabelBackgroundColour (const wxColour &colour)
 	Sets the background colour for row and column labels. More...
 
void 	SetLabelFont (const wxFont &font)
 	Sets the font for row and column labels. More...
 
void 	SetLabelTextColour (const wxColour &colour)
 	Sets the colour for row and column label text. More...
 
void 	SetRowLabelAlignment (int horiz, int vert)
 	Sets the horizontal and vertical alignment of row label text. More...
 
void 	SetRowLabelValue (int row, const wxString &value)
 	Sets the value for the given row label. More...
 
void 	SetUseNativeColLabels (bool native=true)
 	Call this in order to make the column labels use a native look by using wxRendererNative::DrawHeaderButton() internally. More...
 
void 	UseNativeColHeader (bool native=true)
 	Enable the use of native header window for column labels. More...

void 	GetCellAlignment (int row, int col, int *horiz, int *vert) const
 	Sets the arguments to the horizontal and vertical text alignment values for the grid cell at the specified location. More...
 
wxColour 	GetCellBackgroundColour (int row, int col) const
 	Returns the background colour of the cell at the specified location. More...
 
wxFont 	GetCellFont (int row, int col) const
 	Returns the font for text in the grid cell at the specified location. More...
 
wxColour 	GetCellTextColour (int row, int col) const
 	Returns the text colour for the grid cell at the specified location. More...
 
void 	GetDefaultCellAlignment (int *horiz, int *vert) const
 	Returns the default cell alignment. More...
 
wxColour 	GetDefaultCellBackgroundColour () const
 	Returns the current default background colour for grid cells. More...
 
wxFont 	GetDefaultCellFont () const
 	Returns the current default font for grid cell text. More...
 
wxColour 	GetDefaultCellTextColour () const
 	Returns the current default colour for grid cell text. More...
 
void 	SetCellAlignment (int row, int col, int horiz, int vert)
 	Sets the horizontal and vertical alignment for grid cell text at the specified location. More...
 
void 	SetCellAlignment (int align, int row, int col)
 	Sets the horizontal and vertical alignment for grid cell text at the specified location. More...
 
void 	SetCellBackgroundColour (int row, int col, const wxColour &colour)
 	Set the background colour for the given cell or all cells by default. More...
 
void 	SetCellFont (int row, int col, const wxFont &font)
 	Sets the font for text in the grid cell at the specified location. More...
 
void 	SetCellTextColour (int row, int col, const wxColour &colour)
 	Sets the text colour for the given cell. More...
 
void 	SetCellTextColour (const wxColour &val, int row, int col)
 	Sets the text colour for the given cell. More...
 
void 	SetCellTextColour (const wxColour &colour)
 	Sets the text colour for all cells by default. More...
 
void 	SetDefaultCellAlignment (int horiz, int vert)
 	Sets the default horizontal and vertical alignment for grid cell text. More...
 
void 	SetDefaultCellBackgroundColour (const wxColour &colour)
 	Sets the default background colour for grid cells. More...
 
void 	SetDefaultCellFont (const wxFont &font)
 	Sets the default font to be used for grid cell text. More...
 
void 	SetDefaultCellTextColour (const wxColour &colour)
 	Sets the current default colour for grid cell text. More...

bool 	CanEnableCellControl () const
 	Returns true if the in-place edit control for the current grid cell can be used and false otherwise. More...
 
void 	DisableCellEditControl ()
 	Disables in-place editing of grid cells. More...
 
void 	EnableCellEditControl (bool enable=true)
 	Enables or disables in-place editing of grid cell data. More...
 
void 	EnableEditing (bool edit)
 	Makes the grid globally editable or read-only. More...
 
wxGridCellEditor * 	GetCellEditor (int row, int col) const
 	Returns a pointer to the editor for the cell at the specified location. More...
 
wxGridCellRenderer * 	GetCellRenderer (int row, int col) const
 	Returns a pointer to the renderer for the grid cell at the specified location. More...
 
wxString 	GetCellValue (int row, int col) const
 	Returns the string contained in the cell at the specified location. More...
 
wxString 	GetCellValue (const wxGridCellCoords &coords) const
 	Returns the string contained in the cell at the specified location. More...
 
wxGridCellEditor * 	GetDefaultEditor () const
 	Returns a pointer to the current default grid cell editor. More...
 
virtual wxGridCellEditor * 	GetDefaultEditorForCell (int row, int col) const
 	Returns the default editor for the specified cell. More...
 
wxGridCellEditor * 	GetDefaultEditorForCell (const wxGridCellCoords &c) const
 	Returns the default editor for the specified cell. More...
 
virtual wxGridCellEditor * 	GetDefaultEditorForType (const wxString &typeName) const
 	Returns the default editor for the cells containing values of the given type. More...
 
wxGridCellRenderer * 	GetDefaultRenderer () const
 	Returns a pointer to the current default grid cell renderer. More...
 
virtual wxGridCellRenderer * 	GetDefaultRendererForCell (int row, int col) const
 	Returns the default renderer for the given cell. More...
 
virtual wxGridCellRenderer * 	GetDefaultRendererForType (const wxString &typeName) const
 	Returns the default renderer for the cell containing values of the given type. More...
 
void 	HideCellEditControl ()
 	Hides the in-place cell edit control. More...
 
bool 	IsCellEditControlEnabled () const
 	Returns true if the in-place edit control is currently enabled. More...
 
bool 	IsCellEditControlShown () const
 	Returns true if the in-place edit control is currently shown. More...
 
bool 	IsCurrentCellReadOnly () const
 	Returns true if the current cell is read-only. More...
 
bool 	IsEditable () const
 	Returns false if the whole grid has been set as read-only or true otherwise. More...
 
bool 	IsReadOnly (int row, int col) const
 	Returns true if the cell at the specified location can't be edited. More...
 
void 	RegisterDataType (const wxString &typeName, wxGridCellRenderer *renderer, wxGridCellEditor *editor)
 	Register a new data type. More...
 
void 	SaveEditControlValue ()
 	Sets the value of the current grid cell to the current in-place edit control value. More...
 
void 	SetCellEditor (int row, int col, wxGridCellEditor *editor)
 	Sets the editor for the grid cell at the specified location. More...
 
void 	SetCellRenderer (int row, int col, wxGridCellRenderer *renderer)
 	Sets the renderer for the grid cell at the specified location. More...
 
void 	SetCellValue (int row, int col, const wxString &s)
 	Sets the string value for the cell at the specified location. More...
 
void 	SetCellValue (const wxGridCellCoords &coords, const wxString &s)
 	Sets the string value for the cell at the specified location. More...
 
void 	SetCellValue (const wxString &val, int row, int col)
 
void 	SetColFormatBool (int col)
 	Sets the specified column to display boolean values. More...
 
void 	SetColFormatCustom (int col, const wxString &typeName)
 	Sets the specified column to display data in a custom format. More...
 
void 	SetColFormatFloat (int col, int width=-1, int precision=-1)
 	Sets the specified column to display floating point values with the given width and precision. More...
 
void 	SetColFormatNumber (int col)
 	Sets the specified column to display integer values. More...
 
void 	SetDefaultEditor (wxGridCellEditor *editor)
 	Sets the default editor for grid cells. More...
 
void 	SetDefaultRenderer (wxGridCellRenderer *renderer)
 	Sets the default renderer for grid cells. More...
 
void 	SetReadOnly (int row, int col, bool isReadOnly=true)
 	Makes the cell at the specified location read-only or editable. More...
 
void 	ShowCellEditControl ()
 	Displays the in-place cell edit control for the current cell. More...

void 	AutoSize ()
 	Automatically sets the height and width of all rows and columns to fit their contents. More...
 
void 	AutoSizeColLabelSize (int col)
 	Automatically adjusts width of the column to fit its label. More...
 
void 	AutoSizeColumn (int col, bool setAsMin=true)
 	Automatically sizes the column to fit its contents. More...
 
void 	AutoSizeColumns (bool setAsMin=true)
 	Automatically sizes all columns to fit their contents. More...
 
void 	AutoSizeRow (int row, bool setAsMin=true)
 	Automatically sizes the row to fit its contents. More...
 
void 	AutoSizeRowLabelSize (int col)
 	Automatically adjusts height of the row to fit its label. More...
 
void 	AutoSizeRows (bool setAsMin=true)
 	Automatically sizes all rows to fit their contents. More...
 
bool 	GetCellOverflow (int row, int col) const
 	Returns true if the cell value can overflow. More...
 
int 	GetColLabelSize () const
 	Returns the current height of the column labels. More...
 
int 	GetColMinimalAcceptableWidth () const
 	Returns the minimal width to which a column may be resized. More...
 
int 	GetColSize (int col) const
 	Returns the width of the specified column. More...
 
bool 	IsColShown (int col) const
 	Returns true if the specified column is not currently hidden. More...
 
bool 	GetDefaultCellOverflow () const
 	Returns true if the cells can overflow by default. More...
 
int 	GetDefaultColLabelSize () const
 	Returns the default height for column labels. More...
 
int 	GetDefaultColSize () const
 	Returns the current default width for grid columns. More...
 
int 	GetDefaultRowLabelSize () const
 	Returns the default width for the row labels. More...
 
int 	GetDefaultRowSize () const
 	Returns the current default height for grid rows. More...
 
int 	GetRowMinimalAcceptableHeight () const
 	Returns the minimal size to which rows can be resized. More...
 
int 	GetRowLabelSize () const
 	Returns the current width of the row labels. More...
 
int 	GetRowSize (int row) const
 	Returns the height of the specified row. More...
 
bool 	IsRowShown (int row) const
 	Returns true if the specified row is not currently hidden. More...
 
void 	SetCellOverflow (int row, int col, bool allow)
 	Sets the overflow permission of the cell. More...
 
void 	SetColLabelSize (int height)
 	Sets the height of the column labels. More...
 
void 	SetColMinimalAcceptableWidth (int width)
 	Sets the minimal width to which the user can resize columns. More...
 
void 	SetColMinimalWidth (int col, int width)
 	Sets the minimal width for the specified column col. More...
 
void 	SetColSize (int col, int width)
 	Sets the width of the specified column. More...
 
void 	HideCol (int col)
 	Hides the specified column. More...
 
void 	ShowCol (int col)
 	Shows the previously hidden column by resizing it to non-0 size. More...
 
void 	SetDefaultCellOverflow (bool allow)
 	Sets the default overflow permission of the cells. More...
 
void 	SetDefaultColSize (int width, bool resizeExistingCols=false)
 	Sets the default width for columns in the grid. More...
 
void 	SetDefaultRowSize (int height, bool resizeExistingRows=false)
 	Sets the default height for rows in the grid. More...
 
void 	SetRowLabelSize (int width)
 	Sets the width of the row labels. More...
 
void 	SetRowMinimalAcceptableHeight (int height)
 	Sets the minimal row height used by default. More...
 
void 	SetRowMinimalHeight (int row, int height)
 	Sets the minimal height for the specified row. More...
 
void 	SetRowSize (int row, int height)
 	Sets the height of the specified row. More...
 
void 	HideRow (int col)
 	Hides the specified row. More...
 
void 	ShowRow (int col)
 	Shows the previously hidden row. More...
 
wxGridSizesInfo 	GetColSizes () const
 	Get size information for all columns at once. More...
 
wxGridSizesInfo 	GetRowSizes () const
 	Get size information for all row at once. More...
 
void 	SetColSizes (const wxGridSizesInfo &sizeInfo)
 	Restore all columns sizes. More...
 
void 	SetRowSizes (const wxGridSizesInfo &sizeInfo)
 	Restore all rows sizes. More...
 
void 	SetCellSize (int row, int col, int num_rows, int num_cols)
 	Set the size of the cell. More...
 
CellSpan 	GetCellSize (int row, int col, int *num_rows, int *num_cols) const
 	Get the size of the cell in number of cells covered by it. More...
 
wxSize 	GetCellSize (const wxGridCellCoords &coords)
 	Get the number of rows and columns allocated for this cell. More...
bool 	CanDragCell () const
 	Return true if the dragging of cells is enabled or false otherwise. More...
 
bool 	CanDragColMove () const
 	Returns true if columns can be moved by dragging with the mouse. More...
 
bool 	CanDragColSize (int col) const
 	Returns true if the given column can be resized by dragging with the mouse. More...
 
bool 	CanDragGridSize () const
 	Return true if the dragging of grid lines to resize rows and columns is enabled or false otherwise. More...
 
bool 	CanDragRowSize (int row) const
 	Returns true if the given row can be resized by dragging with the mouse. More...
 
void 	DisableColResize (int col)
 	Disable interactive resizing of the specified column. More...
 
void 	DisableRowResize (int row)
 	Disable interactive resizing of the specified row. More...
 
void 	DisableDragColMove ()
 	Disables column moving by dragging with the mouse. More...
 
void 	DisableDragColSize ()
 	Disables column sizing by dragging with the mouse. More...
 
void 	DisableDragGridSize ()
 	Disable mouse dragging of grid lines to resize rows and columns. More...
 
void 	DisableDragRowSize ()
 	Disables row sizing by dragging with the mouse. More...
 
void 	EnableDragCell (bool enable=true)
 	Enables or disables cell dragging with the mouse. More...
 
void 	EnableDragColMove (bool enable=true)
 	Enables or disables column moving by dragging with the mouse. More...
 
void 	EnableDragColSize (bool enable=true)
 	Enables or disables column sizing by dragging with the mouse. More...
 
void 	EnableDragGridSize (bool enable=true)
 	Enables or disables row and column resizing by dragging gridlines with the mouse. More...
 
void 	EnableDragRowSize (bool enable=true)
 	Enables or disables row sizing by dragging with the mouse. More...
 
int 	GetColAt (int colPos) const
 	Returns the column ID of the specified column position. More...
 
int 	GetColPos (int colID) const
 	Returns the position of the specified column. More...
 
void 	SetColPos (int colID, int newPos)
 	Sets the position of the specified column. More...
 
void 	SetColumnsOrder (const wxArrayInt &order)
 	Sets the positions of all columns at once. More...
 
void 	ResetColPos ()
 	Resets the position of the columns to the default. More...
int 	GetGridCursorCol () const
 	Returns the current grid cell column position. More...
 
int 	GetGridCursorRow () const
 	Returns the current grid cell row position. More...
 
void 	GoToCell (int row, int col)
 	Make the given cell current and ensure it is visible. More...
 
void 	GoToCell (const wxGridCellCoords &coords)
 	Make the given cell current and ensure it is visible. More...
 
bool 	MoveCursorDown (bool expandSelection)
 	Moves the grid cursor down by one row. More...
 
bool 	MoveCursorDownBlock (bool expandSelection)
 	Moves the grid cursor down in the current column such that it skips to the beginning or end of a block of non-empty cells. More...
 
bool 	MoveCursorLeft (bool expandSelection)
 	Moves the grid cursor left by one column. More...
 
bool 	MoveCursorLeftBlock (bool expandSelection)
 	Moves the grid cursor left in the current row such that it skips to the beginning or end of a block of non-empty cells. More...
 
bool 	MoveCursorRight (bool expandSelection)
 	Moves the grid cursor right by one column. More...
 
bool 	MoveCursorRightBlock (bool expandSelection)
 	Moves the grid cursor right in the current row such that it skips to the beginning or end of a block of non-empty cells. More...
 
bool 	MoveCursorUp (bool expandSelection)
 	Moves the grid cursor up by one row. More...
 
bool 	MoveCursorUpBlock (bool expandSelection)
 	Moves the grid cursor up in the current column such that it skips to the beginning or end of a block of non-empty cells. More...
 
bool 	MovePageDown ()
 	Moves the grid cursor down by some number of rows so that the previous bottom visible row becomes the top visible row. More...
 
bool 	MovePageUp ()
 	Moves the grid cursor up by some number of rows so that the previous top visible row becomes the bottom visible row. More...
 
void 	SetGridCursor (int row, int col)
 	Set the grid cursor to the specified cell. More...
 
void 	SetGridCursor (const wxGridCellCoords &coords)
 	Set the grid cursor to the specified cell. More...
 
void 	SetTabBehaviour (TabBehaviour behaviour)
 	Set the grid's behaviour when the user presses the TAB key. More...

void 	ClearSelection ()
 	Deselects all cells that are currently selected. More...
 
void 	DeselectRow (int row)
 	Deselects a row of cells. More...
 
void 	DeselectCol (int col)
 	Deselects a column of cells. More...
 
void 	DeselectCell (int row, int col)
 	Deselects a cell. More...
 
wxGridCellCoordsArray 	GetSelectedCells () const
 	Returns an array of individually selected cells. More...
 
wxArrayInt 	GetSelectedCols () const
 	Returns an array of selected columns. More...
 
wxArrayInt 	GetSelectedRows () const
 	Returns an array of selected rows. More...
 
wxColour 	GetSelectionBackground () const
 	Returns the colour used for drawing the selection background. More...
 
wxGridCellCoordsArray 	GetSelectionBlockBottomRight () const
 	Returns an array of the bottom right corners of blocks of selected cells. More...
 
wxGridCellCoordsArray 	GetSelectionBlockTopLeft () const
 	Returns an array of the top left corners of blocks of selected cells. More...
 
wxColour 	GetSelectionForeground () const
 	Returns the colour used for drawing the selection foreground. More...
 
wxGridSelectionModes 	GetSelectionMode () const
 	Returns the current selection mode. More...
 
bool 	IsInSelection (int row, int col) const
 	Returns true if the given cell is selected. More...
 
bool 	IsInSelection (const wxGridCellCoords &coords) const
 	Returns true if the given cell is selected. More...
 
bool 	IsSelection () const
 	Returns true if there are currently any selected cells, rows, columns or blocks. More...
 
void 	SelectAll ()
 	Selects all cells in the grid. More...
 
void 	SelectBlock (int topRow, int leftCol, int bottomRow, int rightCol, bool addToSelected=false)
 	Selects a rectangular block of cells. More...
 
void 	SelectBlock (const wxGridCellCoords &topLeft, const wxGridCellCoords &bottomRight, bool addToSelected=false)
 	Selects a rectangular block of cells. More...
 
void 	SelectCol (int col, bool addToSelected=false)
 	Selects the specified column. More...
 
void 	SelectRow (int row, bool addToSelected=false)
 	Selects the specified row. More...
 
void 	SetSelectionBackground (const wxColour &c)
 	Set the colour to be used for drawing the selection background. More...
 
void 	SetSelectionForeground (const wxColour &c)
 	Set the colour to be used for drawing the selection foreground. More...
 
void 	SetSelectionMode (wxGridSelectionModes selmode)
 	Set the selection behaviour of the grid. More...
int 	GetScrollLineX () const
 	Returns the number of pixels per horizontal scroll increment. More...
 
int 	GetScrollLineY () const
 	Returns the number of pixels per vertical scroll increment. More...
 
bool 	IsVisible (int row, int col, bool wholeCellVisible=true) const
 	Returns true if a cell is either entirely or at least partially visible in the grid window. More...
 
bool 	IsVisible (const wxGridCellCoords &coords, bool wholeCellVisible=true) const
 	Returns true if a cell is either entirely or at least partially visible in the grid window. More...
 
void 	MakeCellVisible (int row, int col)
 	Brings the specified cell into the visible grid cell area with minimal scrolling. More...
 
void 	MakeCellVisible (const wxGridCellCoords &coords)
 	Brings the specified cell into the visible grid cell area with minimal scrolling. More...
 
void 	SetScrollLineX (int x)
 	Sets the number of pixels per horizontal scroll increment. More...
 
void 	SetScrollLineY (int y)
 	Sets the number of pixels per vertical scroll increment. More...
wxRect 	BlockToDeviceRect (const wxGridCellCoords &topLeft, const wxGridCellCoords &bottomRight) const
 	Convert grid cell coordinates to grid window pixel coordinates. More...
 
wxRect 	CellToRect (int row, int col) const
 	Return the rectangle corresponding to the grid cell's size and position in logical coordinates. More...
 
wxRect 	CellToRect (const wxGridCellCoords &coords) const
 	Return the rectangle corresponding to the grid cell's size and position in logical coordinates. More...
 
int 	XToCol (int x, bool clipToMinMax=false) const
 	Returns the column at the given pixel position. More...
 
int 	XToEdgeOfCol (int x) const
 	Returns the column whose right hand edge is close to the given logical x position. More...
 
wxGridCellCoords 	XYToCell (int x, int y) const
 	Translates logical pixel coordinates to the grid cell coordinates. More...
 
wxGridCellCoords 	XYToCell (const wxPoint &pos) const
 	Translates logical pixel coordinates to the grid cell coordinates. More...
 
int 	YToEdgeOfRow (int y) const
 	Returns the row whose bottom edge is close to the given logical y position. More...
 
int 	YToRow (int y, bool clipToMinMax=false) const
 	Returns the grid row that corresponds to the logical y coordinate. More...
bool 	AppendCols (int numCols=1, bool updateLabels=true)
 	Appends one or more new columns to the right of the grid. More...
 
bool 	AppendRows (int numRows=1, bool updateLabels=true)
 	Appends one or more new rows to the bottom of the grid. More...
 
bool 	AreHorzGridLinesClipped () const
 	Return true if the horizontal grid lines stop at the last column boundary or false if they continue to the end of the window. More...
 
bool 	AreVertGridLinesClipped () const
 	Return true if the vertical grid lines stop at the last row boundary or false if they continue to the end of the window. More...
 
void 	BeginBatch ()
 	Increments the grid's batch count. More...
 
void 	ClearGrid ()
 	Clears all data in the underlying grid table and repaints the grid. More...
 
void 	ClipHorzGridLines (bool clip)
 	Change whether the horizontal grid lines are clipped by the end of the last column. More...
 
void 	ClipVertGridLines (bool clip)
 	Change whether the vertical grid lines are clipped by the end of the last row. More...
 
bool 	DeleteCols (int pos=0, int numCols=1, bool updateLabels=true)
 	Deletes one or more columns from a grid starting at the specified position. More...
 
bool 	DeleteRows (int pos=0, int numRows=1, bool updateLabels=true)
 	Deletes one or more rows from a grid starting at the specified position. More...
 
void 	EndBatch ()
 	Decrements the grid's batch count. More...
 
virtual void 	Fit ()
 	Overridden wxWindow method. More...
 
void 	ForceRefresh ()
 	Causes immediate repainting of the grid. More...
 
int 	GetBatchCount ()
 	Returns the number of times that BeginBatch() has been called without (yet) matching calls to EndBatch(). More...
 
int 	GetNumberCols () const
 	Returns the total number of grid columns. More...
 
int 	GetNumberRows () const
 	Returns the total number of grid rows. More...
 
wxGridCellAttr * 	GetOrCreateCellAttr (int row, int col) const
 	Returns the attribute for the given cell creating one if necessary. More...
 
wxGridTableBase * 	GetTable () const
 	Returns a base pointer to the current table object. More...
 
bool 	InsertCols (int pos=0, int numCols=1, bool updateLabels=true)
 	Inserts one or more new columns into a grid with the first new column at the specified position. More...
 
bool 	InsertRows (int pos=0, int numRows=1, bool updateLabels=true)
 
void 	RefreshAttr (int row, int col)
 	Invalidates the cached attribute for the given cell. More...
 
void 	Render (wxDC &dc, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, const wxGridCellCoords &topLeft=wxGridCellCoords, const wxGridCellCoords &bottomRight=wxGridCellCoords, int style=wxGRID_DRAW_DEFAULT)
 	Draws part or all of a wxGrid on a wxDC for printing or display. More...
 
void 	SetAttr (int row, int col, wxGridCellAttr *attr)
 	Sets the cell attributes for the specified cell. More...
 
void 	SetColAttr (int col, wxGridCellAttr *attr)
 	Sets the cell attributes for all cells in the specified column. More...
 
void 	SetMargins (int extraWidth, int extraHeight)
 	Sets the extra margins used around the grid area. More...
 
void 	SetRowAttr (int row, wxGridCellAttr *attr)
 	Sets the cell attributes for all cells in the specified row. More...
 
wxArrayInt 	CalcRowLabelsExposed (const wxRegion &reg)
 	Appends one or more new columns to the right of the grid. More...
 
wxArrayInt 	CalcColLabelsExposed (const wxRegion &reg)
 	Appends one or more new columns to the right of the grid. More...
 
wxGridCellCoordsArray 	CalcCellsExposed (const wxRegion &reg)
 	Appends one or more new columns to the right of the grid. More...
actually sort it appropriately.
int 	GetSortingColumn () const
 	Return the column in which the sorting indicator is currently displayed. More...
 
bool 	IsSortingBy (int col) const
 	Return true if this column is currently used for sorting. More...
 
bool 	IsSortOrderAscending () const
 	Return true if the current sorting order is ascending or false if it is descending. More...
 
void 	SetSortingColumn (int col, bool ascending=true)
 	Set the column to display the sorting indicator in and its direction. More...
 
void 	UnsetSortingColumn ()
 	Remove any currently shown sorting indicator. More...
wxWindow * 	GetGridWindow () const
 	Return the main grid window containing the grid cells. More...
 
wxWindow * 	GetGridRowLabelWindow () const
 	Return the row labels window. More...
 
wxWindow * 	GetGridColLabelWindow () const
 	Return the column labels window. More...
 
wxWindow * 	GetGridCornerLabelWindow () const
 	Return the window in the top left grid corner. More...
 
wxHeaderCtrl * 	GetGridColHeader () const
 	Return the header control used for column labels display. More...
bool 	CanHaveAttributes () const
 	Returns true if this grid has support for cell attributes. More...
 
int 	GetColMinimalWidth (int col) const
 	Get the minimal width of the given column/row. More...
 
int 	GetColRight (int col) const
 	Returns the coordinate of the right border specified column. More...
 
int 	GetColLeft (int col) const
 	Returns the coordinate of the left border specified column. More...
 
int 	GetRowMinimalHeight (int col) const
 	Returns the minimal size for the given column. More...
      
 '''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
