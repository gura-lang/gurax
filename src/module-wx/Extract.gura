import(re)

//------------------------------------------------------------------------------
txt = R'''
a 	wxDataViewEvent (wxEventType commandType=wxEVT_NULL, int winid=0)
 	Constructor. More...
 
int 	GetColumn () const
 	Returns the position of the column in the control or -1 if no column field was set by the event emitter. More...
 
wxDataViewColumn * 	GetDataViewColumn () const
 	Returns a pointer to the wxDataViewColumn from which the event was emitted or NULL. More...
 
wxDataViewModel * 	GetModel () const
 	Returns the wxDataViewModel associated with the event. More...
 
wxPoint 	GetPosition () const
 	Returns the position of a context menu event in screen coordinates. More...
 
const wxVariant & 	GetValue () const
 	Returns a reference to a value. More...
 
bool 	IsEditCancelled () const
 	Can be used to determine whether the new value is going to be accepted in wxEVT_DATAVIEW_ITEM_EDITING_DONE handler. More...
 
void 	SetColumn (int col)
 	Sets the column index associated with this event. More...
 
void 	SetDataViewColumn (wxDataViewColumn *col)
 	For wxEVT_DATAVIEW_COLUMN_HEADER_CLICK only. More...
 
void 	SetModel (wxDataViewModel *model)
 	Sets the dataview model associated with this event. More...
 
void 	SetValue (const wxVariant &value)
 	Sets the value associated with this event. More...
 
void 	SetDataObject (wxDataObject *obj)
 	Set wxDataObject for data transfer within a drag operation. More...
 
wxDataFormat 	GetDataFormat () const
 	Gets the wxDataFormat during a drop operation. More...
 
size_t 	GetDataSize () const
 	Gets the data size for a drop data transfer. More...
 
void * 	GetDataBuffer () const
 	Gets the data buffer for a drop data transfer. More...
 
void 	SetDragFlags (int flags)
 	Specify the kind of the drag operation to perform. More...
 
wxDragResult 	GetDropEffect () const
 	Returns the effect the user requested to happen to the dropped data. More...
 
int 	GetCacheFrom () const
 	Return the first row that will be displayed. More...
 
int 	GetCacheTo () const
 	Return the last row that will be displayed. More...
 
wxDataViewItem 	GetItem () const
 
void 	SetItem (const wxDataViewItem &item)
 
void 	SetEditCanceled (bool editCancelled)
 
void 	SetPosition (int x, int y)
 
void 	SetCache (int from, int to)
 
wxDataObject * 	GetDataObject () const
 
void 	SetDataFormat (const wxDataFormat &format)
 
void 	SetDataSize (size_t size)
 
void 	SetDataBuffer (void *buf)
 
int 	GetDragFlags () const
 
void 	SetDropEffect (wxDragResult effect)
'''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
