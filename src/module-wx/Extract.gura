import(re)

//------------------------------------------------------------------------------
txt = R'''
a 	wxDataViewCtrl (wxWindow *parent, wxWindowID id, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=0, const wxValidator &validator=wxDefaultValidator, const wxString &name=wxDataViewCtrlNameStr)
 	Constructor. More...
 
bool 	Create (wxWindow *parent, wxWindowID id, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=0, const wxValidator &validator=wxDefaultValidator, const wxString &name=wxDataViewCtrlNameStr)
 	Create the control. More...
 
virtual bool 	AppendColumn (wxDataViewColumn *col)
 	Appends a wxDataViewColumn to the control. More...
 
virtual bool 	PrependColumn (wxDataViewColumn *col)
 	Prepends a wxDataViewColumn to the control. More...
 
virtual bool 	InsertColumn (unsigned int pos, wxDataViewColumn *col)
 	Inserts a wxDataViewColumn to the control. More...
 
virtual bool 	AssociateModel (wxDataViewModel *model)
 	Associates a wxDataViewModel with the control. More...
 
virtual bool 	ClearColumns ()
 	Removes all columns. More...
 
virtual void 	Collapse (const wxDataViewItem &item)
 	Collapses the item. More...
 
virtual bool 	DeleteColumn (wxDataViewColumn *column)
 	Deletes given column. More...
 
virtual void 	EditItem (const wxDataViewItem &item, const wxDataViewColumn *column)
 	Programmatically starts editing given cell of item. More...
 
virtual bool 	EnableDragSource (const wxDataFormat &format)
 	Enable drag operations using the given format. More...
 
virtual bool 	EnableDropTarget (const wxDataFormat &format)
 	Enable drop operations using the given format. More...
 
virtual void 	EnsureVisible (const wxDataViewItem &item, const wxDataViewColumn *column=NULL)
 	Call this to ensure that the given item is visible. More...
 
virtual void 	Expand (const wxDataViewItem &item)
 	Expands the item. More...
 
virtual void 	ExpandAncestors (const wxDataViewItem &item)
 	Expands all ancestors of the item. More...
 
virtual wxDataViewColumn * 	GetColumn (unsigned int pos) const
 	Returns pointer to the column. More...
 
virtual unsigned int 	GetColumnCount () const
 	Returns the number of columns. More...
 
virtual int 	GetColumnPosition (const wxDataViewColumn *column) const
 	Returns the position of the column or -1 if not found in the control. More...
 
wxDataViewColumn * 	GetExpanderColumn () const
 	Returns column containing the expanders. More...
 
wxDataViewItem 	GetCurrentItem () const
 	Returns the currently focused item. More...
 
wxDataViewColumn * 	GetCurrentColumn () const
 	Returns the column that currently has focus. More...
 
int 	GetIndent () const
 	Returns indentation. More...
 
virtual wxRect 	GetItemRect (const wxDataViewItem &item, const wxDataViewColumn *col=NULL) const
 	Returns item rectangle. More...
 
wxDataViewModel * 	GetModel ()
 	Returns pointer to the data model associated with the control (if any). More...
 
virtual int 	GetSelectedItemsCount () const
 	Returns the number of currently selected items. More...
 
virtual wxDataViewItem 	GetSelection () const
 	Returns first selected item or an invalid item if none is selected. More...
 
virtual int 	GetSelections (wxDataViewItemArray &sel) const
 	Fills sel with currently selected items and returns their number. More...
 
virtual wxDataViewColumn * 	GetSortingColumn () const
 	Returns the wxDataViewColumn currently responsible for sorting or NULL if none has been selected. More...
 
bool 	HasSelection () const
 	Returns true if any items are currently selected. More...
 
virtual void 	HitTest (const wxPoint &point, wxDataViewItem &item, wxDataViewColumn *&col) const
 	Hittest. More...
 
virtual bool 	IsExpanded (const wxDataViewItem &item) const
 	Return true if the item is expanded. More...
 
virtual bool 	IsSelected (const wxDataViewItem &item) const
 	Return true if the item is selected. More...
 
virtual void 	Select (const wxDataViewItem &item)
 	Select the given item. More...
 
virtual void 	SelectAll ()
 	Select all items. More...
 
void 	SetExpanderColumn (wxDataViewColumn *col)
 	Set which column shall contain the tree-like expanders. More...
 
void 	SetCurrentItem (const wxDataViewItem &item)
 	Changes the currently focused item. More...
 
void 	SetIndent (int indent)
 	Sets the indentation. More...
 
virtual void 	SetSelections (const wxDataViewItemArray &sel)
 	Sets the selection to the array of wxDataViewItems. More...
 
virtual void 	Unselect (const wxDataViewItem &item)
 	Unselect the given item. More...
 
virtual void 	UnselectAll ()
 	Unselect all item. More...
 
virtual bool 	SetRowHeight (int rowHeight)
 	Sets the row height. More...
 
wxDataViewColumn * 	AppendBitmapColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering a bitmap. More...
 
wxDataViewColumn * 	AppendBitmapColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering a bitmap. More...
 
wxDataViewColumn * 	PrependBitmapColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering a bitmap. More...
 
wxDataViewColumn * 	PrependBitmapColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering a bitmap. More...
 
wxDataViewColumn * 	AppendDateColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering a date. More...
 
wxDataViewColumn * 	AppendDateColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering a date. More...
 
wxDataViewColumn * 	PrependDateColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering a date. More...
 
wxDataViewColumn * 	PrependDateColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_ACTIVATABLE, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering a date. More...
 
wxDataViewColumn * 	AppendIconTextColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering text with an icon. More...
 
wxDataViewColumn * 	AppendIconTextColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering text with an icon. More...
 
wxDataViewColumn * 	PrependIconTextColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering text with an icon. More...
 
wxDataViewColumn * 	PrependIconTextColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering text with an icon. More...
 
wxDataViewColumn * 	AppendProgressColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=80, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering a progress indicator. More...
 
wxDataViewColumn * 	AppendProgressColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=80, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering a progress indicator. More...
 
wxDataViewColumn * 	PrependProgressColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=80, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering a progress indicator. More...
 
wxDataViewColumn * 	PrependProgressColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=80, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering a progress indicator. More...
 
wxDataViewColumn * 	AppendTextColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering text. More...
 
wxDataViewColumn * 	AppendTextColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering text. More...
 
wxDataViewColumn * 	PrependTextColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering text. More...
 
wxDataViewColumn * 	PrependTextColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=-1, wxAlignment align=wxALIGN_NOT, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering text. More...
 
wxDataViewColumn * 	AppendToggleColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=30, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering a toggle. More...
 
wxDataViewColumn * 	AppendToggleColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=30, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Appends a column for rendering a toggle. More...
 
wxDataViewColumn * 	PrependToggleColumn (const wxString &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=30, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering a toggle. More...
 
wxDataViewColumn * 	PrependToggleColumn (const wxBitmap &label, unsigned int model_column, wxDataViewCellMode mode=wxDATAVIEW_CELL_INERT, int width=30, wxAlignment align=wxALIGN_CENTER, int flags=wxDATAVIEW_COL_RESIZABLE)
 	Prepends a column for rendering a toggle. More...
'''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
