import(re)

//------------------------------------------------------------------------------
txt = R'''
void 	wxAboutBox (const wxAboutDialogInfo &info, wxWindow *parent=NULL)
 	This function shows the standard about dialog containing the information specified in info. More...
 
void 	wxGenericAboutBox (const wxAboutDialogInfo &info, wxWindow *parent=NULL)
 	This function does the same thing as wxAboutBox() except that it always uses the generic wxWidgets version of the dialog instead of the native one. More...
 
int 	wxGetSingleChoiceIndex (const wxString &message, const wxString &caption, const wxArrayString &aChoices, wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true, int width=wxCHOICE_WIDTH, int height=wxCHOICE_HEIGHT, int initialSelection=0)
 	Same as wxGetSingleChoice() but returns the index representing the selected string. More...
 
//int 	wxGetSingleChoiceIndex (const wxString &message, const wxString &caption, int n, const wxString &choices[], wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true, int width=wxCHOICE_WIDTH, int height=wxCHOICE_HEIGHT, int initialSelection=0)
 
int 	wxGetSingleChoiceIndex (const wxString &message, const wxString &caption, const wxArrayString &choices, int initialSelection, wxWindow *parent=NULL)
 
int 	wxGetSingleChoiceIndex (const wxString &message, const wxString &caption, int n, const wxString *choices, int initialSelection, wxWindow *parent=NULL)
 
wxString 	wxGetSingleChoice (const wxString &message, const wxString &caption, const wxArrayString &aChoices, wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true, int width=wxCHOICE_WIDTH, int height=wxCHOICE_HEIGHT, int initialSelection=0)
 	Pops up a dialog box containing a message, OK/Cancel buttons and a single-selection listbox. More...
 
//wxString 	wxGetSingleChoice (const wxString &message, const wxString &caption, int n, const wxString &choices[], wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true, int width=wxCHOICE_WIDTH, int height=wxCHOICE_HEIGHT, int initialSelection=0)
 
wxString 	wxGetSingleChoice (const wxString &message, const wxString &caption, const wxArrayString &choices, int initialSelection, wxWindow *parent=NULL)
 
wxString 	wxGetSingleChoice (const wxString &message, const wxString &caption, int n, const wxString *choices, int initialSelection, wxWindow *parent=NULL)
 
//wxString 	wxGetSingleChoiceData (const wxString &message, const wxString &caption, const wxArrayString &aChoices, const wxString &client_data[], wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true, int width=wxCHOICE_WIDTH, int height=wxCHOICE_HEIGHT, int initialSelection=0)
 	Same as wxGetSingleChoice but takes an array of client data pointers corresponding to the strings, and returns one of these pointers or NULL if Cancel was pressed. More...
 
//wxString 	wxGetSingleChoiceData (const wxString &message, const wxString &caption, int n, const wxString &choices[], const wxString &client_data[], wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true, int width=wxCHOICE_WIDTH, int height=wxCHOICE_HEIGHT, int initialSelection=0)
 
void * 	wxGetSingleChoiceData (const wxString &message, const wxString &caption, const wxArrayString &choices, void **client_data, int initialSelection, wxWindow *parent=NULL)
 
void * 	wxGetSingleChoiceData (const wxString &message, const wxString &caption, int n, const wxString *choices, void **client_data, int initialSelection, wxWindow *parent=NULL)
 
int 	wxGetSelectedChoices (wxArrayInt &selections, const wxString &message, const wxString &caption, const wxArrayString &aChoices, wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true, int width=wxCHOICE_WIDTH, int height=wxCHOICE_HEIGHT)
 	Pops up a dialog box containing a message, OK/Cancel buttons and a multiple-selection listbox. More...
 
//int 	wxGetSelectedChoices (wxArrayInt &selections, const wxString &message, const wxString &caption, int n, const wxString &choices[], wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true, int width=wxCHOICE_WIDTH, int height=wxCHOICE_HEIGHT)
 
wxColour 	wxGetColourFromUser (wxWindow *parent, const wxColour &colInit, const wxString &caption=wxEmptyString, wxColourData *data=NULL)
 	Shows the colour selection dialog and returns the colour selected by user or invalid colour (use wxColour::IsOk() to test whether a colour is valid) if the dialog was cancelled. More...
 
wxString 	wxDirSelector (const wxString &message=wxDirSelectorPromptStr, const wxString &default_path=wxEmptyString, long style=0, const wxPoint &pos=wxDefaultPosition, wxWindow *parent=NULL)
 	Pops up a directory selector dialog. More...
 
wxString 	wxFileSelector (const wxString &message, const wxString &default_path=wxEmptyString, const wxString &default_filename=wxEmptyString, const wxString &default_extension=wxEmptyString, const wxString &wildcard=wxFileSelectorDefaultWildcardStr, int flags=0, wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord)
 	Pops up a file selector box. More...
 
wxString 	wxFileSelectorEx (const wxString &message=wxFileSelectorPromptStr, const wxString &default_path=wxEmptyString, const wxString &default_filename=wxEmptyString, int *indexDefaultExtension=NULL, const wxString &wildcard=wxFileSelectorDefaultWildcardStr, int flags=0, wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord)
 	An extended version of wxFileSelector. More...
 
wxString 	wxLoadFileSelector (const wxString &what, const wxString &extension, const wxString &default_name=wxEmptyString, wxWindow *parent=NULL)
 	Ask for filename to load. More...
 
wxString 	wxSaveFileSelector (const wxString &what, const wxString &extension, const wxString &default_name=wxEmptyString, wxWindow *parent=NULL)
 	Ask for filename to save. More...
 
wxFont 	wxGetFontFromUser (wxWindow *parent, const wxFont &fontInit, const wxString &caption=wxEmptyString)
 	Shows the font selection dialog and returns the font selected by user or invalid font (use wxFont::IsOk() to test whether a font is valid) if the dialog was cancelled. More...
 
int 	wxMessageBox (const wxString &message, const wxString &caption=wxMessageBoxCaptionStr, int style=wxOK|wxCENTRE, wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord)
 	Show a general purpose message dialog. More...
 
long 	wxGetNumberFromUser (const wxString &message, const wxString &prompt, const wxString &caption, long value, long min=0, long max=100, wxWindow *parent=NULL, const wxPoint &pos=wxDefaultPosition)
 	Shows a dialog asking the user for numeric input. More...
 
wxString 	wxGetTextFromUser (const wxString &message, const wxString &caption=wxGetTextFromUserPromptStr, const wxString &default_value=wxEmptyString, wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true)
 	Pop up a dialog box with title set to caption, message, and a default_value. More...
 
wxString 	wxGetPasswordFromUser (const wxString &message, const wxString &caption=wxGetPasswordFromUserPromptStr, const wxString &default_value=wxEmptyString, wxWindow *parent=NULL, int x=wxDefaultCoord, int y=wxDefaultCoord, bool centre=true)
 	Similar to wxGetTextFromUser() but the text entered in the dialog is not shown on screen but replaced with stars. More...
 
wxTipProvider * 	wxCreateFileTipProvider (const wxString &filename, size_t currentTip)
 	This function creates a wxTipProvider which may be used with wxShowTip(). More...
 
bool 	wxShowTip (wxWindow *parent, wxTipProvider *tipProvider, bool showAtStartup=true)
 	This function shows a "startup tip" to the user. More...
 
void 	wxBeginBusyCursor (const wxCursor *cursor=wxHOURGLASS_CURSOR)
 	Changes the cursor to the given cursor for all windows in the application. More...
 
void 	wxEndBusyCursor ()
 	Changes the cursor back to the original cursor, for all windows in the application. More...
 
bool 	wxIsBusy ()
 	Returns true if between two wxBeginBusyCursor() and wxEndBusyCursor() calls. More...
 
void 	wxBell ()
 	Ring the system bell. More...
 
void 	wxInfoMessageBox (wxWindow *parent)
 	Shows a message box with the information about the wxWidgets build used, including its version, most important build parameters and the version of the underlying GUI toolkit. More...
 '''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
