import(re)

//------------------------------------------------------------------------------
txt = R'''
a 	wxPropertyGrid (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxPG_DEFAULT_STYLE, const wxString &name=wxPropertyGridNameStr)
 	Constructor. More...
 
void 	AddActionTrigger (int action, int keycode, int modifiers=0)
 	Adds given key combination to trigger given action. More...
 
bool 	AddToSelection (wxPGPropArg id)
 	Adds given property into selection. More...
 
void 	BeginLabelEdit (unsigned int colIndex=0)
 	Creates label editor wxTextCtrl for given column, for property that is currently selected. More...
 
bool 	ChangePropertyValue (wxPGPropArg id, wxVariant newValue)
 	Changes value of a property, as if from an editor. More...
 
void 	CenterSplitter (bool enableAutoResizing=false)
 	Centers the splitter. More...
 
virtual void 	Clear ()
 	Deletes all properties. More...
 
void 	ClearActionTriggers (int action)
 	Clears action triggers for given action. More...
 
virtual bool 	CommitChangesFromEditor (wxUint32 flags=0)
 	Forces updating the value of property from the editor control. More...
 
bool 	Create (wxWindow *parent, wxWindowID id=wxID_ANY, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxPG_DEFAULT_STYLE, const wxString &name=wxPropertyGridNameStr)
 	Two step creation. More...
 
void 	DedicateKey (int keycode)
 	Dedicates a specific keycode to wxPropertyGrid. More...
 
bool 	EnableCategories (bool enable)
 	Enables or disables (shows/hides) categories according to parameter enable. More...
 
void 	EndLabelEdit (bool commit=true)
 	Destroys label editor wxTextCtrl, if any. More...
 
bool 	EnsureVisible (wxPGPropArg id)
 	Scrolls and/or expands items to ensure that the given item is visible. More...
 
wxSize 	FitColumns ()
 	Reduces column sizes to minimum possible, while still retaining fully visible grid contents (labels, images). More...
 
wxTextCtrl * 	GetLabelEditor () const
 	Returns currently active label editor, NULL if none. More...
 
wxWindow * 	GetPanel ()
 	Returns wxWindow that the properties are painted on, and which should be used as the parent for editor controls. More...
 
wxColour 	GetCaptionBackgroundColour () const
 	Returns current category caption background colour. More...
 
wxFont & 	GetCaptionFont ()
 	Returns current category caption font. More...
 
wxColour 	GetCaptionForegroundColour () const
 	Returns current category caption text colour. More...
 
wxColour 	GetCellBackgroundColour () const
 	Returns current cell background colour. More...
 
wxColour 	GetCellDisabledTextColour () const
 	Returns current cell text colour when disabled. More...
 
wxColour 	GetCellTextColour () const
 	Returns current cell text colour. More...
 
unsigned int 	GetColumnCount () const
 	Returns number of columns currently on grid. More...
 
wxColour 	GetEmptySpaceColour () const
 	Returns colour of empty space below properties. More...
 
int 	GetFontHeight () const
 	Returns height of highest characters of used font. More...
 
wxPropertyGrid * 	GetGrid ()
 	Returns pointer to itself. More...
 
wxRect 	GetImageRect (wxPGProperty *property, int item) const
 	Returns rectangle of custom paint image. More...
 
wxSize 	GetImageSize (wxPGProperty *property=NULL, int item=-1) const
 	Returns size of the custom paint image in front of property. More...
 
wxPGProperty * 	GetLastItem (int flags=wxPG_ITERATE_DEFAULT)
 	Returns last item which could be iterated using given flags. More...
 
wxColour 	GetLineColour () const
 	Returns colour of lines between cells. More...
 
wxColour 	GetMarginColour () const
 	Returns background colour of margin. More...
 
wxPGProperty * 	GetRoot () const
 	Returns "root property". More...
 
int 	GetRowHeight () const
 	Returns height of a single grid row (in pixels). More...
 
wxPGProperty * 	GetSelectedProperty () const
 	Returns currently selected property. More...
 
wxPGProperty * 	GetSelection () const
 	Returns currently selected property. More...
 
wxColour 	GetSelectionBackgroundColour () const
 	Returns current selection background colour. More...
 
wxColour 	GetSelectionForegroundColour () const
 	Returns current selection text colour. More...
 
wxPGSortCallback 	GetSortFunction () const
 	Returns the property sort function (default is NULL). More...
 
int 	GetSplitterPosition (unsigned int splitterIndex=0) const
 	Returns current splitter x position. More...
 
wxTextCtrl * 	GetEditorTextCtrl () const
 	Returns wxTextCtrl active in currently selected property, if any. More...
 
const wxPGCell & 	GetUnspecifiedValueAppearance () const
 	Returns current appearance of unspecified value cells. More...
 
wxString 	GetUnspecifiedValueText (int argFlags=0) const
 	Returns (visual) text representation of the unspecified property value. More...
 
int 	GetVerticalSpacing () const
 	Returns current vertical spacing. More...
 
wxPropertyGridHitTestResult 	HitTest (const wxPoint &pt) const
 	Returns information about arbitrary position in the grid. More...
 
bool 	IsAnyModified () const
 	Returns true if any property has been modified by the user. More...
 
bool 	IsEditorFocused () const
 	Returns true if a property editor control has focus. More...
 
bool 	IsFrozen () const
 	Returns true if updating is frozen (ie. More...
 
void 	MakeColumnEditable (unsigned int column, bool editable=true)
 	Makes given column editable by user. More...
 
void 	OnTLPChanging (wxWindow *newTLP)
 	It is recommended that you call this function any time your code causes wxPropertyGrid's top-level parent to change. More...
 
void 	RefreshEditor ()
 	Refreshes any active editor control. More...
 
virtual void 	RefreshProperty (wxPGProperty *p)
 	Redraws given property. More...
 
void 	ResetColours ()
 	Resets all colours to the original system values. More...
 
void 	ResetColumnSizes (bool enableAutoResizing=false)
 	Resets column sizes and splitter positions, based on proportions. More...
 
bool 	RemoveFromSelection (wxPGPropArg id)
 	Removes given property from selection. More...
 
bool 	SelectProperty (wxPGPropArg id, bool focus=false)
 	Selects a property. More...
 
void 	SetCaptionBackgroundColour (const wxColour &col)
 	Sets category caption background colour. More...
 
void 	SetCaptionTextColour (const wxColour &col)
 	Sets category caption text colour. More...
 
void 	SetCellBackgroundColour (const wxColour &col)
 	Sets default cell background colour - applies to property cells. More...
 
void 	SetCellDisabledTextColour (const wxColour &col)
 	Sets cell text colour for disabled properties. More...
 
void 	SetCellTextColour (const wxColour &col)
 	Sets default cell text colour - applies to property name and value text. More...
 
void 	SetColumnCount (int colCount)
 	Set number of columns (2 or more). More...
 
void 	SetCurrentCategory (wxPGPropArg id)
 	Sets the 'current' category - Append will add non-category properties under it. More...
 
void 	SetEmptySpaceColour (const wxColour &col)
 	Sets colour of empty space below properties. More...
 
void 	SetLineColour (const wxColour &col)
 	Sets colour of lines between cells. More...
 
void 	SetMarginColour (const wxColour &col)
 	Sets background colour of margin. More...
 
void 	SetSelection (const wxArrayPGProperty &newSelection)
 	Set entire new selection from given list of properties. More...
 
void 	SetSelectionBackgroundColour (const wxColour &col)
 	Sets selection background colour - applies to selected property name background. More...
 
void 	SetSelectionTextColour (const wxColour &col)
 	Sets selection foreground colour - applies to selected property name text. More...
 
void 	SetSortFunction (wxPGSortCallback sortFunction)
 	Sets the property sorting function. More...
 
void 	SetSplitterPosition (int newxpos, int col=0)
 	Sets x coordinate of the splitter. More...
 
void 	SetSplitterLeft (bool privateChildrenToo=false)
 	Moves splitter as left as possible, while still allowing all labels to be shown in full. More...
 
void 	SetUnspecifiedValueAppearance (const wxPGCell &cell)
 	Sets appearance of value cells representing an unspecified property value. More...
 
void 	SetVerticalSpacing (int vspacing)
 	Sets vertical spacing. More...
virtual void 	DoShowPropertyError (wxPGProperty *property, const wxString &msg)
 	Override in derived class to display error messages in custom manner (these message usually only result from validation failure). More...
 
virtual void 	DoHidePropertyError (wxPGProperty *property)
 	Override in derived class to hide an error displayed by DoShowPropertyError(). More...
 
virtual wxStatusBar * 	GetStatusBar ()
 	Return wxStatusBar that is used by this wxPropertyGrid. More...
void 	EditorsValueWasModified ()
 	Call when editor widget's contents is modified. More...
 
void 	EditorsValueWasNotModified ()
 	Reverse of EditorsValueWasModified(). More...
 
wxVariant 	GetUncommittedPropertyValue ()
 	Returns most up-to-date value of selected property. More...
 
bool 	IsEditorsValueModified () const
 	Returns true if editor's value was marked modified. More...
 
void 	ShowPropertyError (wxPGPropArg id, const wxString &msg)
 	Shows an brief error message that is related to a property. More...
 
bool 	WasValueChangedInEvent () const
 	You can use this member function, for instance, to detect in wxPGProperty::OnEvent() if wxPGProperty::SetValueInEvent() was already called in wxPGEditor::OnEvent(). More...
static void 	AutoGetTranslation (bool enable)
 	This static function enables or disables automatic use of wxGetTranslation() for following strings: wxEnumProperty list labels, wxFlagsProperty child property labels. More...
 
static wxPGEditor * 	RegisterEditorClass (wxPGEditor *editor, bool noDefCheck=false)
 	Forwards to DoRegisterEditorClass with empty name. More...
 
static wxPGEditor * 	DoRegisterEditorClass (wxPGEditor *editor, const wxString &name, bool noDefCheck=false)
 	Registers a new editor class. More...
'''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
