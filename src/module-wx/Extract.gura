import(re)

//------------------------------------------------------------------------------
txt = R'''
a 	wxRichTextCtrl (wxWindow *parent, wxWindowID id=-1, const wxString &value=wxEmptyString, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxRE_MULTILINE, const wxValidator &validator=wxDefaultValidator, const wxString &name=wxTextCtrlNameStr)
 	Constructor, creating and showing a rich text control. More...
 
bool 	Create (wxWindow *parent, wxWindowID id=-1, const wxString &value=wxEmptyString, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxRE_MULTILINE, const wxValidator &validator=wxDefaultValidator, const wxString &name=wxTextCtrlNameStr)
 	Creates the underlying window. More...
 
void 	Init ()
 	Initialises the members of the control. More...
 
virtual wxString 	GetRange (long from, long to) const
 	Gets the text for the given range. More...
 
virtual int 	GetLineLength (long lineNo) const
 	Returns the length of the specified line in characters. More...
 
virtual wxString 	GetLineText (long lineNo) const
 	Returns the text for the given line. More...
 
virtual int 	GetNumberOfLines () const
 	Returns the number of lines in the buffer. More...
 
virtual bool 	IsModified () const
 	Returns true if the buffer has been modified. More...
 
virtual bool 	IsEditable () const
 	Returns true if the control is editable. More...
 
bool 	IsSingleLine () const
 	Returns true if the control is single-line. More...
 
bool 	IsMultiLine () const
 	Returns true if the control is multiline. More...
 
virtual wxString 	GetStringSelection () const
 	Returns the text within the current selection range, if any. More...
 
wxString 	GetFilename () const
 	Gets the current filename associated with the control. More...
 
void 	SetFilename (const wxString &filename)
 	Sets the current filename. More...
 
void 	SetDelayedLayoutThreshold (long threshold)
 	Sets the size of the buffer beyond which layout is delayed during resizing. More...
 
long 	GetDelayedLayoutThreshold () const
 	Gets the size of the buffer beyond which layout is delayed during resizing. More...
 
bool 	GetFullLayoutRequired () const
 
void 	SetFullLayoutRequired (bool b)
 
wxLongLong 	GetFullLayoutTime () const
 
void 	SetFullLayoutTime (wxLongLong t)
 
long 	GetFullLayoutSavedPosition () const
 
void 	SetFullLayoutSavedPosition (long p)
 
void 	ForceDelayedLayout ()
 
void 	SetTextCursor (const wxCursor &cursor)
 	Sets the text (normal) cursor. More...
 
wxCursor 	GetTextCursor () const
 	Returns the text (normal) cursor. More...
 
void 	SetURLCursor (const wxCursor &cursor)
 	Sets the cursor to be used over URLs. More...
 
wxCursor 	GetURLCursor () const
 	Returns the cursor to be used over URLs. More...
 
bool 	GetCaretAtLineStart () const
 	Returns true if we are showing the caret position at the start of a line instead of at the end of the previous one. More...
 
void 	SetCaretAtLineStart (bool atStart)
 	Sets a flag to remember that we are showing the caret position at the start of a line instead of at the end of the previous one. More...
 
bool 	GetDragging () const
 	Returns true if we are extending a selection. More...
 
void 	SetDragging (bool dragging)
 	Sets a flag to remember if we are extending a selection. More...
 
bool 	GetPreDrag () const
 	Are we trying to start Drag'n'Drop? More...
 
void 	SetPreDrag (bool pd)
 	Set if we're trying to start Drag'n'Drop. More...
 
const wxPoint 	GetDragStartPoint () const
 	Get the possible Drag'n'Drop start point. More...
 
void 	SetDragStartPoint (wxPoint sp)
 	Set the possible Drag'n'Drop start point. More...
 
const wxDateTime 	GetDragStartTime () const
 	Get the possible Drag'n'Drop start time. More...
 
void 	SetDragStartTime (wxDateTime st)
 	Set the possible Drag'n'Drop start time. More...
 
wxMenu * 	GetContextMenu () const
 	Returns the current context menu. More...
 
void 	SetContextMenu (wxMenu *menu)
 	Sets the current context menu. More...
 
long 	GetSelectionAnchor () const
 	Returns an anchor so we know how to extend the selection. More...
 
void 	SetSelectionAnchor (long anchor)
 	Sets an anchor so we know how to extend the selection. More...
 
wxRichTextObject * 	GetSelectionAnchorObject () const
 	Returns the anchor object if selecting multiple containers. More...
 
void 	SetSelectionAnchorObject (wxRichTextObject *anchor)
 	Sets the anchor object if selecting multiple containers. More...
 
wxRichTextParagraphLayoutBox * 	GetFocusObject () const
 	Returns the wxRichTextObject object that currently has the editing focus. More...
 
void 	StoreFocusObject (wxRichTextParagraphLayoutBox *obj)
 	Setter for m_focusObject. More...
 
bool 	SetFocusObject (wxRichTextParagraphLayoutBox *obj, bool setCaretPosition=true)
 	Sets the wxRichTextObject object that currently has the editing focus. More...
 
void 	Invalidate ()
 	Invalidates the whole buffer to trigger painting later. More...
 
virtual void 	Clear ()
 	Clears the buffer content, leaving a single empty paragraph. More...
 
virtual void 	Replace (long from, long to, const wxString &value)
 	Replaces the content in the specified range with the string specified by value. More...
 
virtual void 	Remove (long from, long to)
 	Removes the content in the specified range. More...
 
bool 	LoadFile (const wxString &file, int type=wxRICHTEXT_TYPE_ANY)
 	Loads content into the control's buffer using the given type. More...
 
virtual bool 	DoLoadFile (const wxString &file, int fileType)
 	Helper function for LoadFile(). More...
 
bool 	SaveFile (const wxString &file=wxEmptyString, int type=wxRICHTEXT_TYPE_ANY)
 	Saves the buffer content using the given type. More...
 
virtual bool 	DoSaveFile (const wxString &file=wxEmptyString, int fileType=wxRICHTEXT_TYPE_ANY)
 	Helper function for SaveFile(). More...
 
void 	SetHandlerFlags (int flags)
 	Sets flags that change the behaviour of loading or saving. More...
 
int 	GetHandlerFlags () const
 	Returns flags that change the behaviour of loading or saving. More...
 
virtual void 	MarkDirty ()
 	Marks the buffer as modified. More...
 
virtual void 	DiscardEdits ()
 	Sets the buffer's modified status to false, and clears the buffer's command history. More...
 
void 	SetModified (bool modified)
 
virtual void 	SetMaxLength (unsigned long len)
 	Sets the maximum number of characters that may be entered in a single line text control. More...
 
virtual void 	WriteText (const wxString &text)
 	Writes text at the current position. More...
 
virtual void 	AppendText (const wxString &text)
 	Sets the insertion point to the end of the buffer and writes the text. More...
 
virtual void 	SetStyle (wxRichTextObject *obj, const wxRichTextAttr &textAttr, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO)
 	Sets the attributes for a single object. More...
 
virtual bool 	SetStyleEx (const wxRichTextRange &range, const wxRichTextAttr &style, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO)
 	Sets the attributes for the given range, passing flags to determine how the attributes are set. More...
 
virtual const wxRichTextAttr & 	GetDefaultStyleEx () const
 	Returns the current default style, which can be used to change how subsequently inserted text is displayed. More...
 
virtual bool 	ClearListStyle (const wxRichTextRange &range, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO)
 	Clears the list style from the given range, clearing list-related attributes and applying any named paragraph style associated with each paragraph. More...
 
virtual bool 	SetProperties (const wxRichTextRange &range, const wxRichTextProperties &properties, int flags=wxRICHTEXT_SETPROPERTIES_WITH_UNDO)
 	Sets the properties for the given range, passing flags to determine how the attributes are set. More...
 
virtual bool 	Delete (const wxRichTextRange &range)
 	Deletes the content within the given range. More...
 
virtual long 	XYToPosition (long x, long y) const
 	Translates from column and line number to position. More...
 
virtual bool 	PositionToXY (long pos, long *x, long *y) const
 	Converts a text position to zero-based column and line numbers. More...
 
virtual void 	ShowPosition (long pos)
 	Scrolls the buffer so that the given position is in view. More...
 
virtual void 	Copy ()
 	Copies the selected content (if any) to the clipboard. More...
 
virtual void 	Cut ()
 	Copies the selected content (if any) to the clipboard and deletes the selection. More...
 
virtual void 	Paste ()
 	Pastes content from the clipboard to the buffer. More...
 
virtual void 	DeleteSelection ()
 	Deletes the content in the selection, if any. More...
 
virtual bool 	CanCopy () const
 	Returns true if selected content can be copied to the clipboard. More...
 
virtual bool 	CanCut () const
 	Returns true if selected content can be copied to the clipboard and deleted. More...
 
virtual bool 	CanPaste () const
 	Returns true if the clipboard content can be pasted to the buffer. More...
 
virtual bool 	CanDeleteSelection () const
 	Returns true if selected content can be deleted. More...
 
virtual void 	Undo ()
 	Undoes the command at the top of the command history, if there is one. More...
 
virtual void 	Redo ()
 	Redoes the current command. More...
 
virtual bool 	CanUndo () const
 	Returns true if there is a command in the command history that can be undone. More...
 
virtual bool 	CanRedo () const
 	Returns true if there is a command in the command history that can be redone. More...
 
virtual void 	SetInsertionPoint (long pos)
 	Sets the insertion point and causes the current editing style to be taken from the new position (unlike wxRichTextCtrl::SetCaretPosition). More...
 
virtual void 	SetInsertionPointEnd ()
 	Sets the insertion point to the end of the text control. More...
 
virtual long 	GetInsertionPoint () const
 	Returns the current insertion point. More...
 
virtual wxTextPos 	GetLastPosition () const
 	Returns the last position in the buffer. More...
 
virtual void 	SelectAll ()
 	Selects all the text in the buffer. More...
 
virtual void 	SetEditable (bool editable)
 	Makes the control editable, or not. More...
 
virtual bool 	HasSelection () const
 	Returns true if there is a selection and the object containing the selection was the same as the current focus object. More...
 
virtual bool 	HasUnfocusedSelection () const
 	Returns true if there was a selection, whether or not the current focus object is the same as the selection's container object. More...
 
virtual bool 	WriteImage (const wxString &filename, wxBitmapType bitmapType, const wxRichTextAttr &textAttr=wxRichTextAttr())
 	Loads an image from a file and writes it at the current insertion point. More...
 
virtual bool 	WriteImage (const wxRichTextImageBlock &imageBlock, const wxRichTextAttr &textAttr=wxRichTextAttr())
 	Writes an image block at the current insertion point. More...
 
virtual wxRichTextBox * 	WriteTextBox (const wxRichTextAttr &textAttr=wxRichTextAttr())
 	Write a text box at the current insertion point, returning the text box. More...
 
virtual wxRichTextField * 	WriteField (const wxString &fieldType, const wxRichTextProperties &properties, const wxRichTextAttr &textAttr=wxRichTextAttr())
 	Writes a field at the current insertion point. More...
 
virtual wxRichTextTable * 	WriteTable (int rows, int cols, const wxRichTextAttr &tableAttr=wxRichTextAttr(), const wxRichTextAttr &cellAttr=wxRichTextAttr())
 	Write a table at the current insertion point, returning the table. More...
 
virtual bool 	Newline ()
 	Inserts a new paragraph at the current insertion point. More...
 
virtual bool 	LineBreak ()
 	Inserts a line break at the current insertion point. More...
 
virtual void 	SetBasicStyle (const wxRichTextAttr &style)
 	Sets the basic (overall) style. More...
 
virtual const wxRichTextAttr & 	GetBasicStyle () const
 	Gets the basic (overall) style. More...
 
virtual bool 	BeginStyle (const wxRichTextAttr &style)
 	Begins applying a style. More...
 
virtual bool 	EndStyle ()
 	Ends the current style. More...
 
virtual bool 	EndAllStyles ()
 	Ends application of all styles in the current style stack. More...
 
bool 	BeginBold ()
 	Begins using bold. More...
 
bool 	EndBold ()
 	Ends using bold. More...
 
bool 	BeginItalic ()
 	Begins using italic. More...
 
bool 	EndItalic ()
 	Ends using italic. More...
 
bool 	BeginUnderline ()
 	Begins using underlining. More...
 
bool 	EndUnderline ()
 	End applying underlining. More...
 
bool 	BeginFontSize (int pointSize)
 	Begins using the given point size. More...
 
bool 	EndFontSize ()
 	Ends using a point size. More...
 
bool 	BeginFont (const wxFont &font)
 	Begins using this font. More...
 
bool 	EndFont ()
 	Ends using a font. More...
 
bool 	BeginTextColour (const wxColour &colour)
 	Begins using this colour. More...
 
bool 	EndTextColour ()
 	Ends applying a text colour. More...
 
bool 	BeginAlignment (wxTextAttrAlignment alignment)
 	Begins using alignment. More...
 
bool 	EndAlignment ()
 	Ends alignment. More...
 
bool 	BeginLeftIndent (int leftIndent, int leftSubIndent=0)
 	Begins applying a left indent and subindent in tenths of a millimetre. More...
 
bool 	EndLeftIndent ()
 	Ends left indent. More...
 
bool 	BeginRightIndent (int rightIndent)
 	Begins a right indent, specified in tenths of a millimetre. More...
 
bool 	EndRightIndent ()
 	Ends right indent. More...
 
bool 	BeginParagraphSpacing (int before, int after)
 	Begins paragraph spacing; pass the before-paragraph and after-paragraph spacing in tenths of a millimetre. More...
 
bool 	EndParagraphSpacing ()
 	Ends paragraph spacing. More...
 
bool 	BeginLineSpacing (int lineSpacing)
 	Begins appling line spacing. More...
 
bool 	EndLineSpacing ()
 	Ends line spacing. More...
 
bool 	BeginNumberedBullet (int bulletNumber, int leftIndent, int leftSubIndent, int bulletStyle=wxTEXT_ATTR_BULLET_STYLE_ARABIC|wxTEXT_ATTR_BULLET_STYLE_PERIOD)
 	Begins a numbered bullet. More...
 
bool 	EndNumberedBullet ()
 	Ends application of a numbered bullet. More...
 
bool 	BeginSymbolBullet (const wxString &symbol, int leftIndent, int leftSubIndent, int bulletStyle=wxTEXT_ATTR_BULLET_STYLE_SYMBOL)
 	Begins applying a symbol bullet, using a character from the current font. More...
 
bool 	EndSymbolBullet ()
 	Ends applying a symbol bullet. More...
 
bool 	BeginStandardBullet (const wxString &bulletName, int leftIndent, int leftSubIndent, int bulletStyle=wxTEXT_ATTR_BULLET_STYLE_STANDARD)
 	Begins applying a symbol bullet. More...
 
bool 	EndStandardBullet ()
 	Begins applying a standard bullet. More...
 
bool 	BeginCharacterStyle (const wxString &characterStyle)
 	Begins using the named character style. More...
 
bool 	EndCharacterStyle ()
 	Ends application of a named character style. More...
 
bool 	BeginParagraphStyle (const wxString &paragraphStyle)
 	Begins applying the named paragraph style. More...
 
bool 	EndParagraphStyle ()
 	Ends application of a named paragraph style. More...
 
bool 	BeginListStyle (const wxString &listStyle, int level=1, int number=1)
 	Begins using a specified list style. More...
 
bool 	EndListStyle ()
 	Ends using a specified list style. More...
 
bool 	BeginURL (const wxString &url, const wxString &characterStyle=wxEmptyString)
 	Begins applying wxTEXT_ATTR_URL to the content. More...
 
bool 	EndURL ()
 	Ends applying a URL. More...
 
bool 	SetDefaultStyleToCursorStyle ()
 	Sets the default style to the style under the cursor. More...
 
virtual void 	SelectNone ()
 	Cancels any selection. More...
 
virtual bool 	SelectWord (long position)
 	Selects the word at the given character position. More...
 
wxRichTextRange 	GetSelectionRange () const
 	Returns the selection range in character positions. More...
 
void 	SetSelectionRange (const wxRichTextRange &range)
 	Sets the selection to the given range. More...
 
wxRichTextRange 	GetInternalSelectionRange () const
 	Returns the selection range in character positions. More...
 
void 	SetInternalSelectionRange (const wxRichTextRange &range)
 	Sets the selection range in character positions. More...
 
virtual wxRichTextRange 	AddParagraph (const wxString &text)
 	Adds a new paragraph of text to the end of the buffer. More...
 
virtual wxRichTextRange 	AddImage (const wxImage &image)
 	Adds an image to the control's buffer. More...
 
virtual bool 	LayoutContent (bool onlyVisibleRect=false)
 	Lays out the buffer, which must be done before certain operations, such as setting the caret position. More...
 
virtual bool 	MoveCaret (long pos, bool showAtLineStart=false, wxRichTextParagraphLayoutBox *container=NULL)
 	Move the caret to the given character position. More...
 
virtual bool 	MoveRight (int noPositions=1, int flags=0)
 	Moves right. More...
 
virtual bool 	MoveLeft (int noPositions=1, int flags=0)
 	Moves left. More...
 
virtual bool 	MoveUp (int noLines=1, int flags=0)
 	Moves to the start of the paragraph. More...
 
virtual bool 	MoveDown (int noLines=1, int flags=0)
 	Moves the caret down. More...
 
virtual bool 	MoveToLineEnd (int flags=0)
 	Moves to the end of the line. More...
 
virtual bool 	MoveToLineStart (int flags=0)
 	Moves to the start of the line. More...
 
virtual bool 	MoveToParagraphEnd (int flags=0)
 	Moves to the end of the paragraph. More...
 
virtual bool 	MoveToParagraphStart (int flags=0)
 	Moves to the start of the paragraph. More...
 
virtual bool 	MoveHome (int flags=0)
 	Moves to the start of the buffer. More...
 
virtual bool 	MoveEnd (int flags=0)
 	Moves to the end of the buffer. More...
 
virtual bool 	PageUp (int noPages=1, int flags=0)
 	Moves one or more pages up. More...
 
virtual bool 	PageDown (int noPages=1, int flags=0)
 	Moves one or more pages down. More...
 
virtual bool 	WordLeft (int noPages=1, int flags=0)
 	Moves a number of words to the left. More...
 
virtual bool 	WordRight (int noPages=1, int flags=0)
 	Move a nuber of words to the right. More...
 
virtual bool 	BeginBatchUndo (const wxString &cmdName)
 	Starts batching undo history for commands. More...
 
virtual bool 	EndBatchUndo ()
 	Ends batching undo command history. More...
 
virtual bool 	BatchingUndo () const
 	Returns true if undo commands are being batched. More...
 
virtual bool 	BeginSuppressUndo ()
 	Starts suppressing undo history for commands. More...
 
virtual bool 	EndSuppressUndo ()
 	Ends suppressing undo command history. More...
 
virtual bool 	SuppressingUndo () const
 	Returns true if undo history suppression is on. More...
 
virtual bool 	HasCharacterAttributes (const wxRichTextRange &range, const wxRichTextAttr &style) const
 	Test if this whole range has character attributes of the specified kind. More...
 
virtual bool 	HasParagraphAttributes (const wxRichTextRange &range, const wxRichTextAttr &style) const
 	Test if this whole range has paragraph attributes of the specified kind. More...
 
virtual bool 	IsSelectionBold ()
 	Returns true if all of the selection, or the content at the caret position, is bold. More...
 
virtual bool 	IsSelectionItalics ()
 	Returns true if all of the selection, or the content at the caret position, is italic. More...
 
virtual bool 	IsSelectionUnderlined ()
 	Returns true if all of the selection, or the content at the caret position, is underlined. More...
 
virtual bool 	DoesSelectionHaveTextEffectFlag (int flag)
 	Returns true if all of the selection, or the content at the current caret position, has the supplied wxTextAttrEffects flag(s). More...
 
virtual bool 	IsSelectionAligned (wxTextAttrAlignment alignment)
 	Returns true if all of the selection is aligned according to the specified flag. More...
 
virtual bool 	ApplyBoldToSelection ()
 	Apples bold to the selection or the default style (undoable). More...
 
virtual bool 	ApplyItalicToSelection ()
 	Applies italic to the selection or the default style (undoable). More...
 
virtual bool 	ApplyUnderlineToSelection ()
 	Applies underline to the selection or the default style (undoable). More...
 
virtual bool 	ApplyTextEffectToSelection (int flags)
 	Applies one or more wxTextAttrEffects flags to the selection (undoable). More...
 
virtual bool 	ApplyAlignmentToSelection (wxTextAttrAlignment alignment)
 	Applies the given alignment to the selection or the default style (undoable). More...
 
virtual bool 	ApplyStyle (wxRichTextStyleDefinition *def)
 	Applies the style sheet to the buffer, matching paragraph styles in the sheet against named styles in the buffer. More...
 
void 	SetStyleSheet (wxRichTextStyleSheet *styleSheet)
 	Sets the style sheet associated with the control. More...
 
wxRichTextStyleSheet * 	GetStyleSheet () const
 	Returns the style sheet associated with the control, if any. More...
 
bool 	PushStyleSheet (wxRichTextStyleSheet *styleSheet)
 	Push the style sheet to top of stack. More...
 
wxRichTextStyleSheet * 	PopStyleSheet ()
 	Pops the style sheet from top of stack. More...
 
bool 	ApplyStyleSheet (wxRichTextStyleSheet *styleSheet=NULL)
 	Applies the style sheet to the buffer, for example if the styles have changed. More...
 
virtual bool 	ShowContextMenu (wxMenu *menu, const wxPoint &pt, bool addPropertyCommands)
 	Shows the given context menu, optionally adding appropriate property-editing commands for the current position in the object hierarchy. More...
 
virtual int 	PrepareContextMenu (wxMenu *menu, const wxPoint &pt, bool addPropertyCommands)
 	Prepares the context menu, optionally adding appropriate property-editing commands. More...
 
virtual bool 	CanEditProperties (wxRichTextObject *obj) const
 	Returns true if we can edit the object's properties via a GUI. More...
 
virtual bool 	EditProperties (wxRichTextObject *obj, wxWindow *parent)
 	Edits the object's properties via a GUI. More...
 
virtual wxString 	GetPropertiesMenuLabel (wxRichTextObject *obj)
 	Gets the object's properties menu label. More...
 
virtual void 	PrepareContent (wxRichTextParagraphLayoutBox &container)
 	Prepares the content just before insertion (or after buffer reset). More...
 
virtual bool 	CanDeleteRange (wxRichTextParagraphLayoutBox &container, const wxRichTextRange &range) const
 	Can we delete this range? Sends an event to the control. More...
 
virtual bool 	CanInsertContent (wxRichTextParagraphLayoutBox &container, long pos) const
 	Can we insert content at this position? Sends an event to the control. More...
 
virtual void 	EnableVerticalScrollbar (bool enable)
 	Enable or disable the vertical scrollbar. More...
 
virtual bool 	GetVerticalScrollbarEnabled () const
 	Returns true if the vertical scrollbar is enabled. More...
 
void 	SetFontScale (double fontScale, bool refresh=false)
 	Sets the scale factor for displaying fonts, for example for more comfortable editing. More...
 
double 	GetFontScale () const
 	Returns the scale factor for displaying fonts, for example for more comfortable editing. More...
 
void 	SetDimensionScale (double dimScale, bool refresh=false)
 	Sets the scale factor for displaying certain dimensions such as indentation and inter-paragraph spacing. More...
 
double 	GetDimensionScale () const
 	Returns the scale factor for displaying certain dimensions such as indentation and inter-paragraph spacing. More...
 
void 	SetScale (double scale, bool refresh=false)
 	Sets an overall scale factor for displaying and editing the content. More...
 
double 	GetScale () const
 	Returns an overall scale factor for displaying and editing the content. More...
 
wxPoint 	GetUnscaledPoint (const wxPoint &pt) const
 	Returns an unscaled point. More...
 
wxPoint 	GetScaledPoint (const wxPoint &pt) const
 	Returns a scaled point. More...
 
wxSize 	GetUnscaledSize (const wxSize &sz) const
 	Returns an unscaled size. More...
 
wxSize 	GetScaledSize (const wxSize &sz) const
 	Returns a scaled size. More...
 
wxRect 	GetUnscaledRect (const wxRect &rect) const
 	Returns an unscaled rectangle. More...
 
wxRect 	GetScaledRect (const wxRect &rect) const
 	Returns a scaled rectangle. More...
 
bool 	GetVirtualAttributesEnabled () const
 	Returns true if this control can use virtual attributes and virtual text. More...
 
void 	EnableVirtualAttributes (bool b)
 	Pass true to let the control use virtual attributes. More...
 
void 	Command (wxCommandEvent &event)
 	Sends the event to the control. More...
 
void 	OnDropFiles (wxDropFilesEvent &event)
 	Loads the first dropped file. More...
 
void 	OnCaptureLost (wxMouseCaptureLostEvent &event)
 
void 	OnSysColourChanged (wxSysColourChangedEvent &event)
 
void 	OnCut (wxCommandEvent &event)
 	Standard handler for the wxID_CUT command. More...
 
void 	OnCopy (wxCommandEvent &event)
 	Standard handler for the wxID_COPY command. More...
 
void 	OnPaste (wxCommandEvent &event)
 	Standard handler for the wxID_PASTE command. More...
 
void 	OnUndo (wxCommandEvent &event)
 	Standard handler for the wxID_UNDO command. More...
 
void 	OnRedo (wxCommandEvent &event)
 	Standard handler for the wxID_REDO command. More...
 
void 	OnSelectAll (wxCommandEvent &event)
 	Standard handler for the wxID_SELECTALL command. More...
 
void 	OnProperties (wxCommandEvent &event)
 	Standard handler for property commands. More...
 
void 	OnClear (wxCommandEvent &event)
 	Standard handler for the wxID_CLEAR command. More...
 
void 	OnUpdateCut (wxUpdateUIEvent &event)
 	Standard update handler for the wxID_CUT command. More...
 
void 	OnUpdateCopy (wxUpdateUIEvent &event)
 	Standard update handler for the wxID_COPY command. More...
 
void 	OnUpdatePaste (wxUpdateUIEvent &event)
 	Standard update handler for the wxID_PASTE command. More...
 
void 	OnUpdateUndo (wxUpdateUIEvent &event)
 	Standard update handler for the wxID_UNDO command. More...
 
void 	OnUpdateRedo (wxUpdateUIEvent &event)
 	Standard update handler for the wxID_REDO command. More...
 
void 	OnUpdateSelectAll (wxUpdateUIEvent &event)
 	Standard update handler for the wxID_SELECTALL command. More...
 
void 	OnUpdateProperties (wxUpdateUIEvent &event)
 	Standard update handler for property commands. More...
 
void 	OnUpdateClear (wxUpdateUIEvent &event)
 	Standard update handler for the wxID_CLEAR command. More...
 
void 	OnContextMenu (wxContextMenuEvent &event)
 	Shows a standard context menu with undo, redo, cut, copy, paste, clear, and select all commands. More...
 
void 	OnPaint (wxPaintEvent &event)
 
void 	OnEraseBackground (wxEraseEvent &event)
 
void 	OnLeftClick (wxMouseEvent &event)
 
void 	OnLeftUp (wxMouseEvent &event)
 
void 	OnMoveMouse (wxMouseEvent &event)
 
void 	OnLeftDClick (wxMouseEvent &event)
 
void 	OnMiddleClick (wxMouseEvent &event)
 
void 	OnRightClick (wxMouseEvent &event)
 
void 	OnChar (wxKeyEvent &event)
 
void 	OnSize (wxSizeEvent &event)
 
void 	OnSetFocus (wxFocusEvent &event)
 
void 	OnKillFocus (wxFocusEvent &event)
 
void 	OnIdle (wxIdleEvent &event)
 
void 	OnScroll (wxScrollWinEvent &event)
 
virtual bool 	SetFont (const wxFont &font)
 	Sets the font, and also the basic and default attributes (see wxRichTextCtrl::SetDefaultStyle). More...
 
virtual void 	SetupScrollbars (bool atTop=false)
 	A helper function setting up scrollbars, for example after a resize. More...
 
virtual bool 	KeyboardNavigate (int keyCode, int flags)
 	Helper function implementing keyboard navigation. More...
 
virtual void 	PaintBackground (wxDC &dc)
 	Paints the background. More...
 
virtual void 	PaintAboveContent (wxDC &dc)
 	Other user defined painting after everything else (i.e. all text) is painted. More...
 
virtual void 	DoWriteText (const wxString &value, int flags=0)
 
virtual bool 	ShouldInheritColours () const
 	Return true from here to allow the colours of this window to be changed by InheritAttributes(). More...
 
virtual void 	PositionCaret (wxRichTextParagraphLayoutBox *container=NULL)
 	Internal function to position the visible caret according to the current caret position. More...
 
virtual bool 	ExtendSelection (long oldPosition, long newPosition, int flags)
 	Helper function for extending the selection, returning true if the selection was changed. More...
 
virtual bool 	ScrollIntoView (long position, int keyCode)
 	Scrolls position into view. More...
 
bool 	RefreshForSelectionChange (const wxRichTextSelection &oldSelection, const wxRichTextSelection &newSelection)
 	Refreshes the area affected by a selection change. More...
 
void 	SetCaretPosition (long position, bool showAtLineStart=false)
 	Sets the caret position. More...
 
long 	GetCaretPosition () const
 	Returns the current caret position. More...
 
long 	GetAdjustedCaretPosition (long caretPos) const
 	The adjusted caret position is the character position adjusted to take into account whether we're at the start of a paragraph, in which case style information should be taken from the next position, not current one. More...
 
void 	MoveCaretForward (long oldPosition)
 	Move the caret one visual step forward: this may mean setting a flag and keeping the same position if we're going from the end of one line to the start of the next, which may be the exact same caret position. More...
 
void 	MoveCaretBack (long oldPosition)
 	Move the caret one visual step forward: this may mean setting a flag and keeping the same position if we're going from the end of one line to the start of the next, which may be the exact same caret position. More...
 
bool 	GetCaretPositionForIndex (long position, wxRect &rect, wxRichTextParagraphLayoutBox *container=NULL)
 	Returns the caret height and position for the given character position. More...
 
wxRichTextLine * 	GetVisibleLineForCaretPosition (long caretPosition) const
 	Internal helper function returning the line for the visible caret position. More...
 
wxCommandProcessor * 	GetCommandProcessor () const
 	Gets the command processor associated with the control's buffer. More...
 
bool 	DeleteSelectedContent (long *newPos=NULL)
 	Deletes content if there is a selection, e.g. More...
 
wxPoint 	GetPhysicalPoint (const wxPoint &ptLogical) const
 	Transforms logical (unscrolled) position to physical window position. More...
 
wxPoint 	GetLogicalPoint (const wxPoint &ptPhysical) const
 	Transforms physical window position to logical (unscrolled) position. More...
 
virtual long 	FindNextWordPosition (int direction=1) const
 	Helper function for finding the caret position for the next word. More...
 
bool 	IsPositionVisible (long pos) const
 	Returns true if the given position is visible on the screen. More...
 
long 	GetFirstVisiblePosition () const
 	Returns the first visible position in the current view. More...
 
long 	GetCaretPositionForDefaultStyle () const
 	Returns the caret position since the default formatting was changed. More...
 
void 	SetCaretPositionForDefaultStyle (long pos)
 	Set the caret position for the default style that the user is selecting. More...
 
bool 	IsDefaultStyleShowing () const
 	Returns true if the user has recently set the default style without moving the caret, and therefore the UI needs to reflect the default style and not the style at the caret. More...
 
void 	SetAndShowDefaultStyle (const wxRichTextAttr &attr)
 	Sets attr as the default style and tells the control that the UI should reflect this attribute until the user moves the caret. More...
 
wxPoint 	GetFirstVisiblePoint () const
 	Returns the first visible point in the window. More...
 
virtual wxString 	GetValue () const
 	Returns the content of the entire control as a string. More...
 
virtual void 	SetValue (const wxString &value)
 	Replaces existing content with the given text. More...
 
virtual bool 	ProcessBackKey (wxKeyEvent &event, int flags)
 	Processes the back key. More...
 
virtual wxRichTextRange 	FindRangeForList (long pos, bool &isNumberedList)
 	Given a character position at which there is a list style, find the range encompassing the same list style by looking backwards and forwards. More...
 
bool 	SetCaretPositionAfterClick (wxRichTextParagraphLayoutBox *container, long position, int hitTestFlags, bool extendSelection=false)
 	Sets up the caret for the given position and container, after a mouse click. More...
 
long 	FindCaretPositionForCharacterPosition (long position, int hitTestFlags, wxRichTextParagraphLayoutBox *container, bool &caretLineStart)
 	Find the caret position for the combination of hit-test flags and character position. More...
 
virtual bool 	ProcessMouseMovement (wxRichTextParagraphLayoutBox *container, wxRichTextObject *obj, long position, const wxPoint &pos)
 	Processes mouse movement in order to change the cursor. More...
 
virtual wxString 	DoGetValue () const
 
virtual void 	GetSelection (long *from, long *to) const
 	Returns the range of the current selection. More...
 
const wxRichTextSelection & 	GetSelection () const
 	Returns the range of the current selection. More...
 
wxRichTextSelection & 	GetSelection ()
 	Returns the range of the current selection. More...
 
wxRichTextContextMenuPropertiesInfo & 	GetContextMenuPropertiesInfo ()
 	Returns an object that stores information about context menu property item(s), in order to communicate between the context menu event handler and the code that responds to it. More...
 
const
wxRichTextContextMenuPropertiesInfo & 	GetContextMenuPropertiesInfo () const
 	Returns an object that stores information about context menu property item(s), in order to communicate between the context menu event handler and the code that responds to it. More...
 
virtual bool 	GetStyle (long position, wxTextAttr &style)
 	Gets the attributes at the given position. More...
 
virtual bool 	GetStyle (long position, wxRichTextAttr &style)
 	Gets the attributes at the given position. More...
 
virtual bool 	GetStyle (long position, wxRichTextAttr &style, wxRichTextParagraphLayoutBox *container)
 	Gets the attributes at the given position. More...
 
virtual bool 	SetStyle (long start, long end, const wxTextAttr &style)
 	Sets the attributes for the given range. More...
 
virtual bool 	SetStyle (long start, long end, const wxRichTextAttr &style)
 	Sets the attributes for the given range. More...
 
virtual bool 	SetStyle (const wxRichTextRange &range, const wxTextAttr &style)
 	Sets the attributes for the given range. More...
 
virtual bool 	SetStyle (const wxRichTextRange &range, const wxRichTextAttr &style)
 	Sets the attributes for the given range. More...
 
virtual bool 	GetStyleForRange (const wxRichTextRange &range, wxTextAttr &style)
 	Gets the attributes common to the specified range. More...
 
virtual bool 	GetStyleForRange (const wxRichTextRange &range, wxRichTextAttr &style)
 	Gets the attributes common to the specified range. More...
 
virtual bool 	GetStyleForRange (const wxRichTextRange &range, wxRichTextAttr &style, wxRichTextParagraphLayoutBox *container)
 	Gets the attributes common to the specified range. More...
 
virtual bool 	GetUncombinedStyle (long position, wxRichTextAttr &style)
 	Gets the attributes at the given position. More...
 
virtual bool 	GetUncombinedStyle (long position, wxRichTextAttr &style, wxRichTextParagraphLayoutBox *container)
 	Gets the attributes at the given position. More...
 
virtual bool 	SetDefaultStyle (const wxTextAttr &style)
 	Sets the current default style, which can be used to change how subsequently inserted text is displayed. More...
 
virtual bool 	SetDefaultStyle (const wxRichTextAttr &style)
 	Sets the current default style, which can be used to change how subsequently inserted text is displayed. More...
 
virtual bool 	SetListStyle (const wxRichTextRange &range, wxRichTextListStyleDefinition *def, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int startFrom=1, int specifiedLevel=-1)
 	Sets the list attributes for the given range, passing flags to determine how the attributes are set. More...
 
virtual bool 	SetListStyle (const wxRichTextRange &range, const wxString &defName, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int startFrom=1, int specifiedLevel=-1)
 	Sets the list attributes for the given range, passing flags to determine how the attributes are set. More...
 
virtual bool 	NumberList (const wxRichTextRange &range, wxRichTextListStyleDefinition *def=NULL, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int startFrom=1, int specifiedLevel=-1)
 	Numbers the paragraphs in the given range. More...
 
virtual bool 	NumberList (const wxRichTextRange &range, const wxString &defName, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int startFrom=1, int specifiedLevel=-1)
 	Numbers the paragraphs in the given range. More...
 
virtual bool 	PromoteList (int promoteBy, const wxRichTextRange &range, wxRichTextListStyleDefinition *def=NULL, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int specifiedLevel=-1)
 	Promotes or demotes the paragraphs in the given range. More...
 
virtual bool 	PromoteList (int promoteBy, const wxRichTextRange &range, const wxString &defName, int flags=wxRICHTEXT_SETSTYLE_WITH_UNDO, int specifiedLevel=-1)
 	Promotes or demotes the paragraphs in the given range. More...
 
virtual wxTextCtrlHitTestResult 	HitTest (const wxPoint &pt, long *pos) const
 	Finds the character at the given position in pixels. More...
 
virtual wxTextCtrlHitTestResult 	HitTest (const wxPoint &pt, wxTextCoord *col, wxTextCoord *row) const
 	Finds the character at the given position in pixels. More...
 
wxRichTextParagraphLayoutBox * 	FindContainerAtPoint (const wxPoint pt, long &position, int &hit, wxRichTextObject *hitObj, int flags=0)
 	Finds the container at the given point, which is assumed to be in client coordinates. More...
 
virtual void 	SetSelection (long from, long to)
 	Sets the selection to the given range. More...
 
void 	SetSelection (const wxRichTextSelection &sel)
 	Sets the selection to the given range. More...
 
virtual bool 	WriteImage (const wxImage &image, wxBitmapType bitmapType=wxBITMAP_TYPE_PNG, const wxRichTextAttr &textAttr=wxRichTextAttr())
 	Write a bitmap or image at the current insertion point. More...
 
virtual bool 	WriteImage (const wxBitmap &bitmap, wxBitmapType bitmapType=wxBITMAP_TYPE_PNG, const wxRichTextAttr &textAttr=wxRichTextAttr())
 	Write a bitmap or image at the current insertion point. More...
 
wxRichTextBuffer & 	GetBuffer ()
 	Returns the buffer associated with the control. More...
 
const wxRichTextBuffer & 	GetBuffer () const
 	Returns the buffer associated with the control. More...
'''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
