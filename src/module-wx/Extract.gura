import(re)

//------------------------------------------------------------------------------
txt = R'''
void 	AddArtist (const wxString &artist)
 	Adds an artist name to be shown in the program credits. More...
 
void 	AddDeveloper (const wxString &developer)
 	Adds a developer name to be shown in the program credits. More...
 
void 	AddDocWriter (const wxString &docwriter)
 	Adds a documentation writer name to be shown in the program credits. More...
 
void 	AddTranslator (const wxString &translator)
 	Adds a translator name to be shown in the program credits. More...
 
wxString 	GetName () const
 	Get the name of the program. More...
 
bool 	HasDescription () const
 	Returns true if a description string has been specified. More...
 
const wxString & 	GetDescription ()
 	Get the description string. More...
 
bool 	HasCopyright () const
 	Returns true if a copyright string has been specified. More...
 
const wxString & 	GetCopyright () const
 	Get the copyright string. More...
 
void 	SetArtists (const wxArrayString &artists)
 	Sets the list of artists to be shown in the program credits. More...
 
void 	SetCopyright (const wxString &copyright)
 	Set the short string containing the program copyright information. More...
 
void 	SetDescription (const wxString &desc)
 	Set brief, but possibly multiline, description of the program. More...
 
void 	SetDevelopers (const wxArrayString &developers)
 	Set the list of developers of the program. More...
 
void 	SetDocWriters (const wxArrayString &docwriters)
 	Set the list of documentation writers. More...
 
bool 	HasIcon () const
 	Returns true if an icon has been set for the about dialog. More...
 
wxIcon 	GetIcon () const
 	Returns the icon set by SetIcon(). More...
 
void 	SetIcon (const wxIcon &icon)
 	Set the icon to be shown in the dialog. More...
 
bool 	HasLicence () const
 	Returns true if the licence string has been set. More...
 
const wxString & 	GetLicence () const
 	Returns the licence string. More...
 
void 	SetLicence (const wxString &licence)
 	Set the long, multiline string containing the text of the program licence. More...
 
void 	SetLicense (const wxString &licence)
 	This is the same as SetLicence(). More...
 
void 	SetName (const wxString &name)
 	Set the name of the program. More...
 
void 	SetTranslators (const wxArrayString &translators)
 	Set the list of translators. More...
 
void 	SetVersion (const wxString &version, const wxString &longVersion=wxString())
 	Set the version of the program. More...
 
const wxString & 	GetVersion () const
 	Return the short version string. More...
 
const wxString & 	GetLongVersion () const
 	Return the long version string if set. More...
 
bool 	HasWebSite () const
 	Returns true if the website info has been set. More...
 
const wxString & 	GetWebSiteURL () const
 	Returns the website URL set for the dialog. More...
 
const wxString & 	GetWebSiteDescription () const
 	Returns the description of the website URL set for the dialog. More...
 
void 	SetWebSite (const wxString &url, const wxString &desc=wxEmptyString)
 	Set the web site for the program and its description (which defaults to url itself if empty). More...
 
bool 	HasDevelopers () const
 	Returns true if developers have been set in the dialog info. More...
 
//const wxArrayString & 	GetDevelopers () const
// 	Returns an array of the developer strings set in the dialog info. More...
 
bool 	HasDocWriters () const
 	Returns true if writers have been set in the dialog info. More...
 
//const wxArrayString & 	GetDocWriters () const
// 	Returns an array of the writer strings set in the dialog info. More...
 
bool 	HasArtists () const
 	Returns true if artists have been set in the dialog info. More...
 
//const wxArrayString & 	GetArtists () const
// 	Returns an array of the artist strings set in the dialog info. More...
 
bool 	HasTranslators () const
 	Returns true if translators have been set in the dialog info. More...
 
//const wxArrayString & 	GetTranslators () const
// 	Returns an array of the translator strings set in the dialog info. More...
 '''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
