import(re)

//------------------------------------------------------------------------------
txt = R'''
 
virtual void 	Copy ()
 	Copies the selected text to the clipboard. More...
 
virtual void 	Cut ()
 	Copies the selected text to the clipboard and removes the selection. More...
 
virtual void 	Dismiss ()
 	Dismisses the popup window. More...
 
void 	EnablePopupAnimation (bool enable=true)
 	Enables or disables popup animation, if any, depending on the value of the argument. More...
 
virtual bool 	IsKeyPopupToggle (const wxKeyEvent &event) const
 	Returns true if given key combination should toggle the popup. More...
 
virtual void 	PrepareBackground (wxDC &dc, const wxRect &rect, int flags) const
 	Prepare background of combo control or an item in a dropdown list in a way typical on platform. More...
 
bool 	ShouldDrawFocus () const
 	Returns true if focus indicator should be drawn in the control. More...
 
const wxBitmap & 	GetBitmapDisabled () const
 	Returns disabled button bitmap that has been set with SetButtonBitmaps(). More...
 
const wxBitmap & 	GetBitmapHover () const
 	Returns button mouse hover bitmap that has been set with SetButtonBitmaps(). More...
 
const wxBitmap & 	GetBitmapNormal () const
 	Returns default button bitmap that has been set with SetButtonBitmaps(). More...
 
const wxBitmap & 	GetBitmapPressed () const
 	Returns depressed button bitmap that has been set with SetButtonBitmaps(). More...
 
wxSize 	GetButtonSize ()
 	Returns current size of the dropdown button. More...
 
int 	GetCustomPaintWidth () const
 	Returns custom painted area in control. More...
 
virtual wxString 	GetHint () const
 	Returns the current hint string. More...
 
virtual long 	GetInsertionPoint () const
 	Returns the insertion point for the combo control's text field. More...
 
virtual long 	GetLastPosition () const
 	Returns the last position in the combo control text field. More...
 
wxPoint 	GetMargins () const
 	Returns the margins used by the control. More...
 
wxComboPopup * 	GetPopupControl ()
 	Returns current popup interface that has been set with SetPopupControl(). More...
 
wxWindow * 	GetPopupWindow () const
 	Returns popup window containing the popup control. More...
 
wxTextCtrl * 	GetTextCtrl () const
 	Get the text control which is part of the combo control. More...
 
wxCoord 	GetTextIndent () const
 	Returns actual indentation in pixels. More...
 
const wxRect & 	GetTextRect () const
 	Returns area covered by the text field (includes everything except borders and the dropdown button). More...
 
virtual wxString 	GetValue () const
 	Returns text representation of the current value. More...
 
virtual void 	HidePopup (bool generateEvent=false)
 	Dismisses the popup window. More...
 
bool 	IsPopupShown () const
 	Returns true if the popup is currently shown. More...
 
bool 	IsPopupWindowState (int state) const
 	Returns true if the popup window is in the given state. More...
 
virtual void 	OnButtonClick ()
 	Implement in a derived class to define what happens on dropdown button click. More...
 
virtual void 	Paste ()
 	Pastes text from the clipboard to the text field. More...
 
virtual void 	Popup ()
 	Shows the popup portion of the combo control. More...
 
virtual void 	Remove (long from, long to)
 	Removes the text between the two positions in the combo control text field. More...
 
virtual void 	Replace (long from, long to, const wxString &text)
 	Replaces the text between two positions with the given text, in the combo control text field. More...
 
void 	SetButtonBitmaps (const wxBitmap &bmpNormal, bool pushButtonBg=false, const wxBitmap &bmpPressed=wxNullBitmap, const wxBitmap &bmpHover=wxNullBitmap, const wxBitmap &bmpDisabled=wxNullBitmap)
 	Sets custom dropdown button graphics. More...
 
void 	SetButtonPosition (int width=-1, int height=-1, int side=wxRIGHT, int spacingX=0)
 	Sets size and position of dropdown button. More...
 
void 	SetCustomPaintWidth (int width)
 	Set width, in pixels, of custom painted area in control without wxCB_READONLY style. More...
 
virtual bool 	SetHint (const wxString &hint)
 	Sets a hint shown in an empty unfocused combo control. More...
 
virtual void 	SetInsertionPoint (long pos)
 	Sets the insertion point in the text field. More...
 
virtual void 	SetInsertionPointEnd ()
 	Sets the insertion point at the end of the combo control text field. More...
 
void 	SetPopupAnchor (int anchorSide)
 	Set side of the control to which the popup will align itself. More...
 
void 	SetPopupControl (wxComboPopup *popup)
 	Set popup interface class derived from wxComboPopup. More...
 
void 	SetPopupExtents (int extLeft, int extRight)
 	Extends popup size horizontally, relative to the edges of the combo control. More...
 
void 	SetPopupMaxHeight (int height)
 	Sets preferred maximum height of the popup. More...
 
void 	SetPopupMinWidth (int width)
 	Sets minimum width of the popup. More...
 
virtual void 	SetSelection (long from, long to)
 	Selects the text between the two positions, in the combo control text field. More...
 
void 	SetText (const wxString &value)
 	Sets the text for the text field without affecting the popup. More...
 
void 	SetTextCtrlStyle (int style)
 	Set a custom window style for the embedded wxTextCtrl. More...
 
void 	SetTextIndent (int indent)
 	This will set the space in pixels between left edge of the control and the text, regardless whether control is read-only or not. More...
 
virtual void 	SetValue (const wxString &value)
 	Sets the text for the combo control text field. More...
 
void 	SetValueByUser (const wxString &value)
 	Changes value of the control as if user had done it by selecting an item from a combo box drop-down list. More...
 
virtual void 	ShowPopup ()
 	Show the popup. More...
 
virtual void 	Undo ()
 	Undoes the last edit in the text field. More...
 
void 	UseAltPopupWindow (bool enable=true)
 	Enable or disable usage of an alternative popup window, which guarantees ability to focus the popup control, and allows common native controls to function normally. More...
 
bool 	SetMargins (const wxPoint &pt)
 	Attempts to set the control margins. More...
 
bool 	SetMargins (wxCoord left, wxCoord top=-1)
 	Attempts to set the control margins. More...
'''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
