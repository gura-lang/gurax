import(re)

//------------------------------------------------------------------------------
txt = R'''
a 	wxSlider (wxWindow *parent, wxWindowID id, int value, int minValue, int maxValue, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxSL_HORIZONTAL, const wxValidator &validator=wxDefaultValidator, const wxString &name=wxSliderNameStr)
 	Constructor, creating and showing a slider. More...
 
virtual void 	ClearSel ()
 	Clears the selection, for a slider with the wxSL_SELRANGE style. More...
 
virtual void 	ClearTicks ()
 	Clears the ticks. More...
 
bool 	Create (wxWindow *parent, wxWindowID id, int value, int minValue, int maxValue, const wxPoint &point=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxSL_HORIZONTAL, const wxValidator &validator=wxDefaultValidator, const wxString &name=wxSliderNameStr)
 	Used for two-step slider construction. More...
 
virtual int 	GetLineSize () const
 	Returns the line size. More...
 
virtual int 	GetMax () const
 	Gets the maximum slider value. More...
 
virtual int 	GetMin () const
 	Gets the minimum slider value. More...
 
virtual int 	GetPageSize () const
 	Returns the page size. More...
 
virtual int 	GetSelEnd () const
 	Returns the selection end point. More...
 
virtual int 	GetSelStart () const
 	Returns the selection start point. More...
 
virtual int 	GetThumbLength () const
 	Returns the thumb length. More...
 
virtual int 	GetTickFreq () const
 	Returns the tick frequency. More...
 
virtual int 	GetValue () const
 	Gets the current slider value. More...
 
virtual void 	SetLineSize (int lineSize)
 	Sets the line size for the slider. More...
 
void 	SetMin (int minValue)
 	Sets the minimum slider value. More...
 
void 	SetMax (int maxValue)
 	Sets the maximum slider value. More...
 
virtual void 	SetPageSize (int pageSize)
 	Sets the page size for the slider. More...
 
virtual void 	SetRange (int minValue, int maxValue)
 	Sets the minimum and maximum slider values. More...
 
virtual void 	SetSelection (int startPos, int endPos)
 	Sets the selection. More...
 
virtual void 	SetThumbLength (int len)
 	Sets the slider thumb length. More...
 
virtual void 	SetTick (int tickPos)
 	Sets a tick position. More...
 
virtual void 	SetTickFreq (int n)
 	Sets the tick mark frequency and position. More...
 
virtual void 	SetValue (int value)
 	Sets the slider position. More...
'''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
