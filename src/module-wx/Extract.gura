import(re)

//------------------------------------------------------------------------------
txt = R'''
virtual wxPenCap 	GetCap () const
 	Returns the pen cap style, which may be one of wxCAP_ROUND, wxCAP_PROJECTING and wxCAP_BUTT. More...
 
virtual wxColour 	GetColour () const
 	Returns a reference to the pen colour. More...
 
virtual int 	GetDashes (wxDash **dashes) const
 	Gets an array of dashes (defined as char in X, DWORD under Windows). More...
 
virtual wxPenJoin 	GetJoin () const
 	Returns the pen join style, which may be one of wxJOIN_BEVEL, wxJOIN_ROUND and wxJOIN_MITER. More...
 
virtual wxBitmap * 	GetStipple () const
 	Gets a pointer to the stipple bitmap. More...
 
virtual wxPenStyle 	GetStyle () const
 	Returns the pen style. More...
 
virtual int 	GetWidth () const
 	Returns the pen width. More...
 
virtual bool 	IsOk () const
 	Returns true if the pen is initialised. More...
 
bool 	IsNonTransparent () const
 	Returns true if the pen is a valid non-transparent pen. More...
 
bool 	IsTransparent () const
 	Returns true if the pen is transparent. More...
 
virtual void 	SetCap (wxPenCap capStyle)
 	Sets the pen cap style, which may be one of wxCAP_ROUND, wxCAP_PROJECTING and wxCAP_BUTT. More...
 
virtual void 	SetDashes (int n, const wxDash *dash)
 	Associates an array of dash values (defined as char in X, DWORD under Windows) with the pen. More...
 
virtual void 	SetJoin (wxPenJoin join_style)
 	Sets the pen join style, which may be one of wxJOIN_BEVEL, wxJOIN_ROUND and wxJOIN_MITER. More...
 
virtual void 	SetStipple (const wxBitmap &stipple)
 	Sets the bitmap for stippling. More...
 
virtual void 	SetStyle (wxPenStyle style)
 	Set the pen style. More...
 
virtual void 	SetWidth (int width)
 	Sets the pen width. More...
 
bool 	operator!= (const wxPen &pen) const
 	Inequality operator. More...
 
wxPen & 	operator= (const wxPen &pen)
 	Assignment operator, using Reference Counting. More...
 
bool 	operator== (const wxPen &pen) const
 	Equality operator. More...
 
virtual void 	SetColour (wxColour &colour)
 
	The pen's colour is changed to the given colour. More...
 
virtual void 	SetColour (unsigned char red, unsigned char green, unsigned char blue)
 	The pen's colour is changed to the given colour. More...
 
Additional Inherited Members
'''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
