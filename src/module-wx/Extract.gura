import(re)

//------------------------------------------------------------------------------
txt = R'''
Getters
virtual wxFontEncoding 	GetEncoding () const
 	Returns the encoding of this font. More...
 
virtual wxString 	GetFaceName () const
 	Returns the face name associated with the font, or the empty string if there is no face information. More...
 
virtual wxFontFamily 	GetFamily () const
 	Gets the font family if possible. More...
 
wxString 	GetNativeFontInfoDesc () const
 	Returns the platform-dependent string completely describing this font. More...
 
wxString 	GetNativeFontInfoUserDesc () const
 	Returns a user-friendly string for this font object. More...
 
const wxNativeFontInfo * 	GetNativeFontInfo () const
 	Returns the encoding of this font. More...
 
virtual int 	GetPointSize () const
 	Gets the point size. More...
 
virtual wxSize 	GetPixelSize () const
 	Gets the pixel size. More...
 
virtual wxFontStyle 	GetStyle () const
 	Gets the font style. More...
 
virtual bool 	GetUnderlined () const
 	Returns true if the font is underlined, false otherwise. More...
 
virtual bool 	GetStrikethrough () const
 	Returns true if the font is stricken-through, false otherwise. More...
 
virtual wxFontWeight 	GetWeight () const
 	Gets the font weight. More...
 
virtual bool 	IsFixedWidth () const
 	Returns true if the font is a fixed width (or monospaced) font, false if it is a proportional one or font is invalid. More...
 
virtual bool 	IsOk () const
 	Returns true if this object is a valid font, false otherwise. More...
 
Similar fonts creation

The functions in this section either modify the font in place or create a new font similar to the given one but with its weight, style or size changed.
wxFont 	Bold () const
 	Returns a bold version of this font. More...
 
wxFont 	Italic () const
 	Returns an italic version of this font. More...
 
wxFont 	Larger () const
 	Returns a larger version of this font. More...
 
wxFont 	Smaller () const
 	Returns a smaller version of this font. More...
 
wxFont 	Underlined () const
 	Returns underlined version of this font. More...
 
wxFont 	Strikethrough () const
 	Returns stricken-through version of this font. More...
 
wxFont & 	MakeBold ()
 	Changes this font to be bold. More...
 
wxFont & 	MakeItalic ()
 	Changes this font to be italic. More...
 
wxFont & 	MakeLarger ()
 	Changes this font to be larger. More...
 
wxFont & 	MakeSmaller ()
 	Changes this font to be smaller. More...
 
wxFont & 	MakeUnderlined ()
 	Changes this font to be underlined. More...
 
wxFont & 	MakeStrikethrough ()
 	Changes this font to be stricken-through. More...
 
wxFont & 	Scale (float x)
 	Changes the size of this font. More...
 
wxFont 	Scaled (float x) const
 	Returns a scaled version of this font. More...
 
Setters

These functions internally recreate the native font object with the new specified property.
virtual void 	SetEncoding (wxFontEncoding encoding)
 	Sets the encoding for this font. More...
 
virtual bool 	SetFaceName (const wxString &faceName)
 	Sets the facename for the font. More...
 
virtual void 	SetFamily (wxFontFamily family)
 	Sets the font family. More...
 
bool 	SetNativeFontInfo (const wxString &info)
 	Creates the font corresponding to the given native font description string which must have been previously returned by GetNativeFontInfoDesc(). More...
 
bool 	SetNativeFontInfoUserDesc (const wxString &info)
 	Creates the font corresponding to the given native font description string and returns true if the creation was successful. More...
 
void 	SetNativeFontInfo (const wxNativeFontInfo &info)
 	Sets the encoding for this font. More...
 
virtual void 	SetPointSize (int pointSize)
 	Sets the point size. More...
 
virtual void 	SetPixelSize (const wxSize &pixelSize)
 	Sets the pixel size. More...
 
virtual void 	SetStyle (wxFontStyle style)
 	Sets the font style. More...
 
void 	SetSymbolicSize (wxFontSymbolicSize size)
 	Sets the font size using a predefined symbolic size name. More...
 
void 	SetSymbolicSizeRelativeTo (wxFontSymbolicSize size, int base)
 	Sets the font size compared to the base font size. More...
 
virtual void 	SetUnderlined (bool underlined)
 	Sets underlining. More...
 
virtual void 	SetStrikethrough (bool strikethrough)
 	Sets strike-through attribute of the font. More...
 
virtual void 	SetWeight (wxFontWeight weight)
 	Sets the font weight. More...
'''
//------------------------------------------------------------------------------

txt.EachLine {|line, iLine|
	iLine += 1
	if (m = line.Match('^@(.+)')) {
		Println('\t//--------------------------------------------------------------------------')
		Printf('\t// %s\n', m[1])
	} elsif (m = line.Match(r'^\s')) {
		// nothing to do
	} elsif (m = line.Match(r'^//')) {
		// nothing to do
	} elsif (m = line.Match(r'^(.+[^\w])(\w+)\s*\(([^)]*)\)')) {
		attrs = ''
		typeRtn = m[1].Strip()
		funcName = m[2]
		args = m[3].SplitReg(r',\s*'):list
		if (m = typeRtn.Match(r'^static\s+(.+)')) {
			attrs += ':static'
			typeRtn = m[1]
		}
		typeRtn = typeRtn.Sub(r'^virtual\s+', '').Sub(r'^const\s+', '').Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
		argsMod = args.Each():xiter {|arg|
			arg.IsEmpty() && continue
			fields = arg.Split('='):list
			m = fields[0].Strip().Match(r'^(.+[^\w])(\w+)$')
			if (!m) {
				Printf('Error:%d: %s\n', iLine, line.Chop())
				sys.Exit(1)
			}
			typeArg = m[1].Strip().Sub(r'^wx', '').Sub(r'([ &\*])wx', r'\1').Sub(r'\s*&', '_r').Sub(r'\s*\*', '_p').Sub(r'\s+', '_')
			argName = m[2]
			str = Format('%s as %s', argName, typeArg)
			if (fields.len == 2) {
				str += Format(' = %s', fields[1].Strip())
			}
			str
		}.Join(', ')
		Printf('\t%s(%s)%s as %s\n', funcName, argsMod, attrs, typeRtn)
	}
}
