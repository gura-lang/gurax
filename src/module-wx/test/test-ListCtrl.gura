#!/usr/bin/env gurax
import(wx)
import(image)
da = import(DummyAddress)

MyApp = class(wx.App) {
	OnInit() = {
		MyFrame(path.BaseName(path.FileName(sys.argv[0])), wx.Point(50, 50), wx.Size(900, 600)).Show()
		true
	}
}

MyFrame = class(wx.Frame) {
	__init__(title as String, pos as wx.Point, size as wx.Size) = {|nil, wx.ID_ANY, title, pos, size|
		PanelTop(this)
	}
}

PanelTop = class(wx.Panel) {
	ascentFlag as Bool
	listCtrl as wx.ListCtrl
	textCtrl as wx.TextCtrl
	__init__(parent as wx.Window) = {|parent|
		this.ascentFlag = true
		sizerTop = wx.BoxSizer(wx.VERTICAL)
		this.SetSizer(sizerTop)
		wx.BoxSizer(wx.HORIZONTAL) {|hbox|
			sizerTop.Add(hbox, wx.SizerFlags(5).Expand())
			wx.ListCtrl(this, wx.ID_ANY, style = wx.LC_REPORT | wx.LC_HRULES | wx.LC_VRULES) {|ctrl|
				hbox.Add(ctrl, wx.SizerFlags(1).Expand())
				[imageList, indices] = image.InitImageList(image.silk_icons)
				ctrl.SetImageList(imageList, wx.IMAGE_LIST_NORMAL)
				ctrl.SetImageList(imageList, wx.IMAGE_LIST_SMALL)
				ctrl.SetImageList(imageList, wx.IMAGE_LIST_STATE)
				ctrl.AppendColumn('Image', width = 60)
				ctrl.AppendColumn('Name', width = 180)
				ctrl.AppendColumn('E-mail', width = 200)
				ctrl.AppendColumn('Gender', width = 80)
				ctrl.AppendColumn('Age', width = 80)
				ctrl.AppendColumn('Birthday', width = 100)
				ctrl.AppendColumn('Phone Number', width = 120)
				for (address in da.addressTbl, key in indices.EachKey().Sort()) {|i|
					ctrl.InsertItem(i, '', indices[key])
					ctrl.SetItem(i, 1, address.name)
					ctrl.SetItem(i, 2, address.email)
					ctrl.SetItem(i, 3, address.gender)
					ctrl.SetItem(i, 4, address.age)
					ctrl.SetItem(i, 5, address.birthDay)
					ctrl.SetItem(i, 6, address.phoneNumber)
					ctrl.SetItemData(i, address.name)
				}
				wx.EVT_LIST_BEGIN_DRAG(ctrl,		this.OnList)
				wx.EVT_LIST_BEGIN_RDRAG(ctrl,		this.OnList)
				wx.EVT_LIST_BEGIN_LABEL_EDIT(ctrl,	this.OnList)
				wx.EVT_LIST_END_LABEL_EDIT(ctrl,	this.OnList)
				wx.EVT_LIST_DELETE_ITEM(ctrl,		this.OnList)
				wx.EVT_LIST_DELETE_ALL_ITEMS(ctrl,	this.OnList)
				wx.EVT_LIST_ITEM_SELECTED(ctrl,		this.OnList)
				wx.EVT_LIST_ITEM_DESELECTED(ctrl,	this.OnList)
				wx.EVT_LIST_ITEM_ACTIVATED(ctrl,	this.OnList)
				wx.EVT_LIST_ITEM_FOCUSED(ctrl,		this.OnList)
				wx.EVT_LIST_ITEM_MIDDLE_CLICK(ctrl,	this.OnList)
				wx.EVT_LIST_ITEM_RIGHT_CLICK(ctrl,	this.OnList)
				wx.EVT_LIST_KEY_DOWN(ctrl,			this.OnList)
				wx.EVT_LIST_INSERT_ITEM(ctrl,		this.OnList)
				wx.EVT_LIST_COL_CLICK(ctrl,			this.OnListColClick)
				wx.EVT_LIST_COL_RIGHT_CLICK(ctrl,	this.OnList)
				wx.EVT_LIST_COL_BEGIN_DRAG(ctrl,	this.OnList)
				wx.EVT_LIST_COL_DRAGGING(ctrl,		this.OnList)
				wx.EVT_LIST_COL_END_DRAG(ctrl,		this.OnList)
				wx.EVT_LIST_CACHE_HINT(ctrl,		this.OnList)
				this.listCtrl = ctrl
			}
		}
		wx.BoxSizer(wx.HORIZONTAL) {|hbox|
			sizerTop.Add(hbox, wx.SizerFlags().Expand().Border(wx.TOP | wx.BOTTOM, 2))
			wx.Button(this, wx.ID_ANY, 'Selected') {|ctrl|
				hbox.Add(ctrl, wx.SizerFlags().Expand())
				wx.EVT_BUTTON(ctrl, this.OnButton_Selected)
			}
		}
		wx.TextCtrl(this, wx.ID_ANY, style = wx.TE_MULTILINE) {|ctrl|
			sizerTop.Add(ctrl, wx.SizerFlags(2).Expand())
			this.textCtrl = ctrl
		}
	}
	SortDescent(item1, item2):static = {item2 <=> item1}
	SortAscent(item1, item2):static = {item1 <=> item2}
	OnList(event as wx.ListEvent) = {
		this.PrintListEvent(event)
	}
	OnListColClick(event as wx.ListEvent) = {
		this.PrintListEvent(event)
		this.listCtrl.SortItems(cond(this.ascentFlag, this.SortAscent, this.SortDescent), nil)
		this.ascentFlag = !this.ascentFlag
	}
	OnButton_Selected(event as wx.CommandEvent) = {
		item = -1
		this.Printf('Selected\n')
		repeat {
			item = this.listCtrl.GetNextItem(item, wx.LIST_NEXT_ALL, wx.LIST_STATE_SELECTED)
			(item < 0) && break
			this.Printf('index=%d name="%s" email="%s"\n', item,
					this.listCtrl.GetItemText(item, 1), this.listCtrl.GetItemText(item, 2))
		}
	}
	PrintListEvent(event as wx.ListEvent) = {
		eventName = event.GetEventType().name
		item = event.GetIndex()
		if (item >= 0) {
			this.Printf('%s(index=%d name="%s", email="%s")\n', eventName, item,
					this.listCtrl.GetItemText(item, 1), this.listCtrl.GetItemText(item, 2))
		}
	}
	Printf(format as String, args*) = this.textCtrl.WriteText(Format(format, args*))
}

wx.ImplementApp(MyApp())
