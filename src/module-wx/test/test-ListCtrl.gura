#!/usr/bin/env gurax
import(wx)
import(image)

MyApp = class(wx.App) {
	OnInit() = {
		MyFrame(path.BaseName(path.FileName(sys.argv[0])), wx.Point(50, 50), wx.Size(800, 600)).Show()
		true
	}
}

MyFrame = class(wx.Frame) {
	__init__(title as String, pos as wx.Point, size as wx.Size) = {|nil, wx.ID_ANY, title, pos, size|
		PanelTop(this)
	}
}

PanelTop = class(wx.Panel) {
	listCtrl as wx.TreeCtrl
	textCtrl as wx.TextCtrl
	__init__(parent as wx.Window) = {|parent|
		sizerTop = wx.BoxSizer(wx.VERTICAL)
		this.SetSizer(sizerTop)
		wx.BoxSizer(wx.HORIZONTAL) {|hbox|
			sizerTop.Add(hbox, wx.SizerFlags(3).Expand())
			wx.ListCtrl(this, wx.ID_ANY, style = wx.LC_REPORT | wx.LC_HRULES | wx.LC_VRULES) {|ctrl|
				hbox.Add(ctrl, wx.SizerFlags(1).Expand())
				imageList = wx.ImageList(16, 16)
				idx_cat16 = imageList.Add(image.cat16)
				idx_dog16 = imageList.Add(image.dog16)
				//idx_fox16 = imageList.Add(image.fox16)
				//idx_hippopotamus16 = imageList.Add(image.hippopotamus16)
				idx_monkey16 = imageList.Add(image.monkey16)
				idx_pig16 = imageList.Add(image.pig16)
				idx_wolf16 = imageList.Add(image.wolf16)
				//idx_report_picture = imageList.Add(image.report_picture)
				ctrl.SetImageList(imageList, wx.IMAGE_LIST_NORMAL)
				ctrl.SetImageList(imageList, wx.IMAGE_LIST_SMALL)
				ctrl.SetImageList(imageList, wx.IMAGE_LIST_STATE)
				ctrl.AppendColumn('Column#1')
				ctrl.AppendColumn('Column#2')
				ctrl.AppendColumn('Column#3')
				ctrl.AppendColumn('Column#4')
				ctrl.InsertItem(0, 'hoge', idx_cat16)
				ctrl.InsertItem(1, 'hoge', idx_dog16)
				ctrl.InsertItem(2, 'hoge', idx_monkey16)
				ctrl.InsertItem(3, 'hoge', idx_pig16)
				ctrl.InsertItem(4, 'hoge', idx_wolf16)
				wx.EVT_LIST_BEGIN_DRAG(ctrl, this.OnList)
				wx.EVT_LIST_BEGIN_RDRAG(ctrl, this.OnList)
				wx.EVT_LIST_BEGIN_LABEL_EDIT(ctrl, this.OnList)
				wx.EVT_LIST_END_LABEL_EDIT(ctrl, this.OnList)
				wx.EVT_LIST_DELETE_ITEM(ctrl, this.OnList)
				wx.EVT_LIST_DELETE_ALL_ITEMS(ctrl, this.OnList)
				wx.EVT_LIST_ITEM_SELECTED(ctrl, this.OnList)
				wx.EVT_LIST_ITEM_DESELECTED(ctrl, this.OnList)
				wx.EVT_LIST_ITEM_ACTIVATED(ctrl, this.OnList)
				wx.EVT_LIST_ITEM_FOCUSED(ctrl, this.OnList)
				wx.EVT_LIST_ITEM_MIDDLE_CLICK(ctrl, this.OnList)
				wx.EVT_LIST_ITEM_RIGHT_CLICK(ctrl, this.OnList)
				wx.EVT_LIST_KEY_DOWN(ctrl, this.OnList)
				wx.EVT_LIST_INSERT_ITEM(ctrl, this.OnList)
				wx.EVT_LIST_COL_CLICK(ctrl, this.OnList)
				wx.EVT_LIST_COL_RIGHT_CLICK(ctrl, this.OnList)
				wx.EVT_LIST_COL_BEGIN_DRAG(ctrl, this.OnList)
				wx.EVT_LIST_COL_DRAGGING(ctrl, this.OnList)
				wx.EVT_LIST_COL_END_DRAG(ctrl, this.OnList)
				wx.EVT_LIST_CACHE_HINT(ctrl, this.OnList)
			}
		}
		wx.TextCtrl(this, wx.ID_ANY, style = wx.TE_MULTILINE) {|ctrl|
			sizerTop.Add(ctrl, wx.SizerFlags(1).Expand())
			this.textCtrl = ctrl
		}
	}
	OnList(event) = {
		this.PrintListEvent(event)
	}
	PrintListEvent(event) = {
		eventName = event.GetEventType().name
		this.Printf('%s()\n', eventName)
	}
	Printf(format as String, args*) = this.textCtrl.WriteText(Format(format, args*))

}

wx.ImplementApp(MyApp())
