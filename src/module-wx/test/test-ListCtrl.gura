#!/usr/bin/env gurax
import(wx)
import(image)
da = import(DummyAddress)

MyApp = class(wx.App) {
	OnInit() = {
		MyFrame(path.BaseName(path.FileName(sys.argv[0])), wx.Point(50, 50), wx.Size(900, 700)).Show()
		true
	}
}

MyFrame = class(wx.Frame) {
	__init__(title as String, pos as wx.Point, size as wx.Size) = {|nil, wx.ID_ANY, title, pos, size|
		PanelTop(this)
	}
}

MyListCtrl = class(wx.ListCtrl) {
	listItemAttr as wx.ListItemAttr
	__init__(parent as wx.Window, id as Number, style as Number) = {|parent, id, style = (style | wx.LC_VIRTUAL)|
		//this.listItemAttr = wx.ListItemAttr(`black, wx.Colour(192, 192, 192), wx.Font('courier'))
		this.listItemAttr = wx.ListItemAttr();
		this.AppendColumn('Image', width = 60)
		this.AppendColumn('Name', width = 180)
		this.AppendColumn('E-mail', width = 200)
		this.AppendColumn('Gender', width = 80)
		this.AppendColumn('Age', width = 80)
		this.AppendColumn('Birthday', width = 100)
		this.AppendColumn('Phone Number', width = 120)
	}
	OnGetItemAttr(item as Number) = {
		this.listItemAttr
	}
	OnGetItemColumnAttr(item as Number, column as Number) = {
		this.listItemAttr
	}
	//OnGetItemImage(item as Number) = {
	//	0
	//}
	OnGetItemColumnImage(item as Number, column as Number) = {
		cond(column == 0, item, -1)
	}
	OnGetItemText(item as Number, column as Number) = {
		address = da.addressTbl[item]
		if (column == 1) {
			address.name
		} elsif (column == 2) {
			address.email
		} elsif (column == 3) {
			address.gender
		} elsif (column == 4) {
			Format('%d', address.age)
		} elsif (column == 5) {
			address.birthDay
		} elsif (column == 6) {
			address.phoneNumber
		} else {
			''
		}
	}
}

Info = struct {
	label as String
	listCtrl as wx.ListCtrl
}

PanelTop = class(wx.Panel) {
	ascentFlag as Bool
	textCtrl as wx.TextCtrl
	__init__(parent as wx.Window) = {|parent|
		this.ascentFlag = true
		sizerTop = wx.BoxSizer(wx.VERTICAL)
		this.SetSizer(sizerTop)
		[imageList, indices] = image.InitImageList(image.silk_icons)
		wx.Notebook(this, wx.ID_ANY) {|noteBook|
			sizerTop.Add(noteBook, wx.SizerFlags(2).Expand())
			wx.Panel(noteBook) {|panel|
				noteBook.AddPage(panel, 'REPORT')
				sizer = wx.BoxSizer(wx.VERTICAL)
				panel.SetSizer(sizer)
				wx.ListCtrl(panel, wx.ID_ANY, style = wx.LC_REPORT | wx.LC_HRULES | wx.LC_VRULES) {|ctrl|
					sizer.Add(ctrl, wx.SizerFlags(3).Expand())
					ctrl.SetImageList(imageList, wx.IMAGE_LIST_NORMAL)
					ctrl.SetImageList(imageList, wx.IMAGE_LIST_SMALL)
					ctrl.SetImageList(imageList, wx.IMAGE_LIST_STATE)
					ctrl.AppendColumn('Image', width = 60)
					ctrl.AppendColumn('Name', width = 180)
					ctrl.AppendColumn('E-mail', width = 200)
					ctrl.AppendColumn('Gender', width = 80)
					ctrl.AppendColumn('Age', width = 80)
					ctrl.AppendColumn('Birthday', width = 100)
					ctrl.AppendColumn('Phone Number', width = 120)
					for (address in da.addressTbl) {|i|
						ctrl.InsertItem(i, '', i)
						ctrl.SetItem(i, 1, address.name)
						ctrl.SetItem(i, 2, address.email)
						ctrl.SetItem(i, 3, address.gender)
						ctrl.SetItem(i, 4, address.age)
						ctrl.SetItem(i, 5, address.birthDay)
						ctrl.SetItem(i, 6, address.phoneNumber)
						ctrl.SetItemData(i, address.name)
					}
					ctrl.SetItemState(0, wx.LIST_STATE_SELECTED, wx.LIST_STATE_SELECTED)
					info = Info('Stored', ctrl)
					wx.EVT_LIST_BEGIN_DRAG(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_BEGIN_RDRAG(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_BEGIN_LABEL_EDIT(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_END_LABEL_EDIT(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_DELETE_ITEM(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_DELETE_ALL_ITEMS(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_SELECTED(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_DESELECTED(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_ACTIVATED(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_FOCUSED(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_MIDDLE_CLICK(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_RIGHT_CLICK(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_KEY_DOWN(ctrl,			this.OnList,			userData = info)
					wx.EVT_LIST_INSERT_ITEM(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_COL_CLICK(ctrl,			this.OnListColClick,	userData = info)
					wx.EVT_LIST_COL_RIGHT_CLICK(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_COL_BEGIN_DRAG(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_COL_DRAGGING(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_COL_END_DRAG(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_CACHE_HINT(ctrl,		this.OnList,			userData = info)
					//wx.EVT_BUTTON(button_Selected,		this.OnButton_Selected,	userData = info)
				}
			}
			wx.Panel(noteBook) {|panel|
				noteBook.AddPage(panel, 'REPORT (Virtual)')
				sizer = wx.BoxSizer(wx.VERTICAL)
				panel.SetSizer(sizer)
				MyListCtrl(panel, wx.ID_ANY, style = wx.LC_REPORT | wx.LC_HRULES | wx.LC_VRULES) {|ctrl|
					sizer.Add(ctrl, wx.SizerFlags(3).Expand())
					ctrl.SetImageList(imageList, wx.IMAGE_LIST_NORMAL)
					ctrl.SetImageList(imageList, wx.IMAGE_LIST_SMALL)
					ctrl.SetImageList(imageList, wx.IMAGE_LIST_STATE)
					ctrl.SetItemCount(da.addressTbl.len)
					info = Info('Virtual', ctrl)
					wx.EVT_LIST_BEGIN_DRAG(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_BEGIN_RDRAG(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_BEGIN_LABEL_EDIT(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_END_LABEL_EDIT(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_DELETE_ITEM(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_DELETE_ALL_ITEMS(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_SELECTED(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_DESELECTED(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_ACTIVATED(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_FOCUSED(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_MIDDLE_CLICK(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_RIGHT_CLICK(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_KEY_DOWN(ctrl,			this.OnList,			userData = info)
					wx.EVT_LIST_INSERT_ITEM(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_COL_CLICK(ctrl,			this.OnListColClick,	userData = info)
					wx.EVT_LIST_COL_RIGHT_CLICK(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_COL_BEGIN_DRAG(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_COL_DRAGGING(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_COL_END_DRAG(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_CACHE_HINT(ctrl,		this.OnList,			userData = info)
					//wx.EVT_BUTTON(button_Selected,		this.OnButton_Selected,	userData = info)
				}
			}
			wx.Panel(noteBook) {|panel|
				noteBook.AddPage(panel, 'ICON')
				sizer = wx.BoxSizer(wx.VERTICAL)
				panel.SetSizer(sizer)
				wx.ListCtrl(panel, wx.ID_ANY, style = wx.LC_ICON) {|ctrl|
					sizer.Add(ctrl, wx.SizerFlags(3).Expand())
					ctrl.SetImageList(imageList, wx.IMAGE_LIST_NORMAL)
					ctrl.SetImageList(imageList, wx.IMAGE_LIST_SMALL)
					ctrl.SetImageList(imageList, wx.IMAGE_LIST_STATE)
					ctrl.SetItemState(0, wx.LIST_STATE_SELECTED, wx.LIST_STATE_SELECTED)
					info = Info('ICON', ctrl)
					wx.EVT_LIST_BEGIN_DRAG(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_BEGIN_RDRAG(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_BEGIN_LABEL_EDIT(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_END_LABEL_EDIT(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_DELETE_ITEM(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_DELETE_ALL_ITEMS(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_SELECTED(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_DESELECTED(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_ACTIVATED(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_FOCUSED(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_MIDDLE_CLICK(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_ITEM_RIGHT_CLICK(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_KEY_DOWN(ctrl,			this.OnList,			userData = info)
					wx.EVT_LIST_INSERT_ITEM(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_COL_CLICK(ctrl,			this.OnListColClick,	userData = info)
					wx.EVT_LIST_COL_RIGHT_CLICK(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_COL_BEGIN_DRAG(ctrl,	this.OnList,			userData = info)
					wx.EVT_LIST_COL_DRAGGING(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_COL_END_DRAG(ctrl,		this.OnList,			userData = info)
					wx.EVT_LIST_CACHE_HINT(ctrl,		this.OnList,			userData = info)
					//wx.EVT_BUTTON(button_Selected,		this.OnButton_Selected,	userData = info)
				}
			}
			wx.Panel(noteBook) {|panel|
				noteBook.AddPage(panel, 'SMALL_ICON')
				sizer = wx.BoxSizer(wx.VERTICAL)
				panel.SetSizer(sizer)
			}
		}
		wx.TextCtrl(this, wx.ID_ANY, style = wx.TE_MULTILINE) {|ctrl|
			sizerTop.Add(ctrl, wx.SizerFlags(1).Expand().Border(wx.TOP, 2))
			this.textCtrl = ctrl
		}
	}
	SortDescent(item1, item2):static = {item2 <=> item1}
	SortAscent(item1, item2):static = {item1 <=> item2}
	OnList(event as wx.ListEvent) = {
		this.PrintListEvent(event)
	}
	OnListColClick(event as wx.ListEvent) = {
		info = event.GetEventUserData()
		this.PrintListEvent(event)
		info.listCtrl.SortItems(cond(this.ascentFlag, this.SortAscent, this.SortDescent), nil)
		this.ascentFlag = !this.ascentFlag
	}
	OnButton_Selected(event as wx.CommandEvent) = {
		info = event.GetEventUserData()
		item = -1
		this.Printf('Selected\n')
		repeat {
			item = info.listCtrl.GetNextItem(item, wx.LIST_NEXT_ALL, wx.LIST_STATE_SELECTED)
			(item < 0) && break
			this.Printf('[%s] index=%d name="%s" email="%s"\n', info.label, item,
					info.listCtrl.GetItemText(item, 1), info.listCtrl.GetItemText(item, 2))
		}
	}
	PrintListEvent(event as wx.ListEvent) = {
		info = event.GetEventUserData()
		eventName = event.GetEventType().name
		item = event.GetIndex()
		if (item >= 0) {
			this.Printf('[%s] %s(index=%d name="%s", email="%s")\n', info.label, eventName, item,
					info.listCtrl.GetItemText(item, 1), info.listCtrl.GetItemText(item, 2))
		}
	}
	Printf(format as String, args*) = this.textCtrl.WriteText(Format(format, args*))
}

wx.ImplementApp(MyApp())
