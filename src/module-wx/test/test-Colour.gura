#!/usr/bin/env gurax
import(wx)

MyApp = class(wx.App) {
	OnInit() = {
		MyFrame(path.BaseName(path.FileName(sys.argv[0])), wx.Point(50, 50), wx.Size(800, 600)).Show()
		true
	}
}

MyFrame = class(wx.Frame) {
	__init__(title as String, pos as wx.Point, size as wx.Size) = {|nil, wx.ID_ANY, title, pos, size|
		PanelTop(this)
	}
}
colours = @{
	wx.NullColour, wx.TransparentColour,
	wx.BLACK, wx.BLUE, wx.GREEN, wx.CYAN, wx.RED, wx.YELLOW, wx.WHITE, wx.LIGHT_GREY
	wx.Colour('#000000')
	//wx.Colour('#0000ff')
	wx.Colour(0, 0, 255)
	wx.Colour('#00ff00')
	wx.Colour('#00ffff')
	wx.Colour('#ff0000')
	wx.Colour('#ff00ff')
	wx.Colour('#ffff00')
	wx.Colour('#ffffff')
	wx.Colour('#c0c0c0')
}

PanelTop = class(wx.Panel) {
	panel as wx.Panel
	textCtrl as wx.TextCtrl
	sliderCtrl_Red as wx.Slider
	sliderCtrl_Green as wx.Slider
	sliderCtrl_Blue as wx.Slider
	__init__(parent as wx.Window) = {|parent|
		sizerTop = wx.BoxSizer(wx.VERTICAL)
		this.SetSizer(sizerTop)
		wx.Panel(this, wx.ID_ANY, style = wx.BORDER_SUNKEN, size = wx.Size(-1, 30)) {|ctrl|
			sizerTop.Add(ctrl, wx.SizerFlags().Expand())
			this.panel = ctrl
		}
		wx.FlexGridSizer(2, wx.Size(8, 2)) {|sizer|
			sizerTop.Add(sizer, wx.SizerFlags().Expand())
			sizer.AddGrowableCol(1);
			wx.StaticText(this, wx.ID_ANY, 'Red') {|ctrl| sizer.Add(ctrl)}
			wx.Slider(this, wx.ID_ANY, 0, 0, 255) {|ctrl|
				sizer.Add(ctrl, wx.SizerFlags().Expand())
				this.sliderCtrl_Red = ctrl
				wx.EVT_SCROLL(ctrl, wx.ID_ANY, this.OnScroll)
			}
			wx.StaticText(this, wx.ID_ANY, 'Green') {|ctrl| sizer.Add(ctrl)}
			wx.Slider(this, wx.ID_ANY, 0, 0, 255) {|ctrl|
				sizer.Add(ctrl, wx.SizerFlags().Expand())
				this.sliderCtrl_Green = ctrl
				wx.EVT_SCROLL(ctrl, wx.ID_ANY, this.OnScroll)
			}
			wx.StaticText(this, wx.ID_ANY, 'Blue') {|ctrl| sizer.Add(ctrl)}
			wx.Slider(this, wx.ID_ANY, 0, 0, 255) {|ctrl|
				sizer.Add(ctrl, wx.SizerFlags().Expand())
				this.sliderCtrl_Blue = ctrl
				wx.EVT_SCROLL(ctrl, wx.ID_ANY, this.OnScroll)
			}
		}
		wx.TextCtrl(this, wx.ID_ANY, style = wx.TE_MULTILINE) {|ctrl|
			ctrl.SetFont(wx.Font(12, wx.FONTFAMILY_TELETYPE,  wx.FONTSTYLE_NORMAL, wx.FONTWEIGHT_NORMAL))
			sizerTop.Add(ctrl, wx.SizerFlags(1).Expand())
			this.textCtrl = ctrl
		}
		this.Printf('%-30s%-30s%-10s\n', 'NAME', 'CSS', 'HTML')
		this.Printf('%s %s %s\n', '-' * (30 - 1), '-' * (30 - 1), '-' * (10 - 1))
		colours.Each {|colour|
			this.Printf('%-30s%-30s%-10s\n', colour.GetAsString(), colour.GetAsString(wx.C2S_CSS_SYNTAX), colour.GetAsString(wx.C2S_HTML_SYNTAX))
		}
		//[r, g, b] = wx.Colour.MakeMonoRGB(255, 255, 192, false)
		//this.Printf('%d, %d, %d\n', r, g, b)
	}
	Printf(format as String, args*) = this.textCtrl.WriteText(Format(format, args*))
	OnScroll(event as wx.Event) = {
		red = this.sliderCtrl_Red.GetValue()
		green = this.sliderCtrl_Green.GetValue()
		blue = this.sliderCtrl_Blue.GetValue()
		this.Printf('%s %d %d %d\n', this.panel, red, green, blue)
		this.panel.SetBackgroundColour(wx.Colour(255, 0, 0))
	}
}

wx.ImplementApp(MyApp())
