//==============================================================================
// VType_wxTextCtrl.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"""(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.TextCtrl, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.TextCtrl, `en)}

${help.ComposeMethodHelp(wx.TextCtrl, `en)}
)""";

static const char* g_docHelp_ja = u8R"""(
# 概要

# 定数

${help.ComposePropertyHelp(wx.TextCtrl, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.TextCtrl, `ja)}

${help.ComposeMethodHelp(wx.TextCtrl, `ja)}
)""";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.TextCtrl(parent as wx.Window, id as Number, value? as String, pos? as wx.Point, size? as wx.Size, style? as Number, validator? as wx.Validator, name? as String) {block?}
Gurax_DeclareConstructorAlias(TextCtrl_gurax, "TextCtrl")
{
	Declare(VTYPE_wxTextCtrl, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("id", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("value", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("pos", VTYPE_wxPoint, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("style", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("validator", VTYPE_wxValidator, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("name", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementConstructorEx(TextCtrl_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	wxWindowID id = args_gurax.PickNumber<wxWindowID>();
	const char* value = args_gurax.IsValid()? args_gurax.PickString() : "";
	const wxPoint& pos = args_gurax.IsValid()? args_gurax.Pick<Value_wxPoint>().GetEntity() : wxDefaultPosition;
	const wxSize& size = args_gurax.IsValid()? args_gurax.Pick<Value_wxSize>().GetEntity() : wxDefaultSize;
	bool style_validFlag = args_gurax.IsValid();
	long style = style_validFlag? args_gurax.PickNumber<long>() : 0;
	const wxValidator& validator = args_gurax.IsValid()? args_gurax.Pick<Value_wxValidator>().GetEntity() : wxDefaultValidator;
	const char* name = args_gurax.IsValid()? args_gurax.PickString() : wxTextCtrlNameStr;
	// Function body
	auto pEntity_gurax = new Value_wxTextCtrl::EntityT(parent, id, value, pos, size, style, validator, name);
	RefPtr<Value_wxTextCtrl> pValue_gurax(new Value_wxTextCtrl(pEntity_gurax));
	pEntity_gurax->core_gurax.SetInfo(processor_gurax.Reference(), *pValue_gurax);
	return argument_gurax.ReturnValue(processor_gurax, pValue_gurax.release());
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.TextCtrl#DiscardEdits()
Gurax_DeclareMethodAlias(wxTextCtrl, DiscardEdits_gurax, "DiscardEdits")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, DiscardEdits_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->DiscardEdits();
	return Gurax::Value::nil();
}

// wx.TextCtrl#EmulateKeyPress(event as wx.KeyEvent)
Gurax_DeclareMethodAlias(wxTextCtrl, EmulateKeyPress_gurax, "EmulateKeyPress")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("event", VTYPE_wxKeyEvent, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, EmulateKeyPress_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxKeyEvent& value_event = args_gurax.Pick<Value_wxKeyEvent>();
	const wxKeyEvent& event = value_event.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->EmulateKeyPress(event);
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#GetDefaultStyle() {block?}
Gurax_DeclareMethodAlias(wxTextCtrl, GetDefaultStyle_gurax, "GetDefaultStyle")
{
	Declare(VTYPE_wxTextAttr, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetDefaultStyle_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTextAttr(
		pEntity_gurax->GetDefaultStyle()));
}

// wx.TextCtrl#GetLineLength(lineNo as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, GetLineLength_gurax, "GetLineLength")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("lineNo", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetLineLength_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long lineNo = args_gurax.PickNumber<long>();
	// Function body
	int rtn = pEntity_gurax->GetLineLength(lineNo);
	return new Gurax::Value_Number(rtn);
}

// wx.TextCtrl#GetLineText(lineNo as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, GetLineText_gurax, "GetLineText")
{
	Declare(VTYPE_String, Flag::None);
	DeclareArg("lineNo", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetLineText_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long lineNo = args_gurax.PickNumber<long>();
	// Function body
	wxString rtn = pEntity_gurax->GetLineText(lineNo);
	//return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
	return new Gurax::Value_String(rtn.utf8_str().data());
}

// wx.TextCtrl#GetNumberOfLines()
Gurax_DeclareMethodAlias(wxTextCtrl, GetNumberOfLines_gurax, "GetNumberOfLines")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetNumberOfLines_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	int rtn = pEntity_gurax->GetNumberOfLines();
	return new Gurax::Value_Number(rtn);
}

// wx.TextCtrl#GetStyle(position as Number, style as wx.TextAttr)
Gurax_DeclareMethodAlias(wxTextCtrl, GetStyle_gurax, "GetStyle")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("position", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("style", VTYPE_wxTextAttr, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetStyle_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long position = args_gurax.PickNumber<long>();
	Value_wxTextAttr& value_style = args_gurax.Pick<Value_wxTextAttr>();
	wxTextAttr& style = value_style.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->GetStyle(position, style);
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#HitTestPos(pt as wx.Point, &pos:nilRef as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, HitTestPos_gurax, "HitTestPos")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("pt", VTYPE_wxPoint, ArgOccur::Once, ArgFlag::None);
	DeclareArg("pos", VTYPE_Number, ArgOccur::Once, ArgFlag::NilRef | ArgFlag::Referencer);
}

Gurax_ImplementMethodEx(wxTextCtrl, HitTestPos_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxPoint& value_pt = args_gurax.Pick<Value_wxPoint>();
	const wxPoint& pt = value_pt.GetEntity();
	RefPtr<Referencer> pos(args_gurax.PickReferencer().Reference());
	// Function body
	long pos_;
	wxTextCtrlHitTestResult rtn = pEntity_gurax->HitTest(pt, &pos_);
	pos->SetValue(new Value_Number(pos_));
	return new Value_Number(rtn);
}

// wx.TextCtrl#HitTestCoord(pt as wx.Point, &col:nilRef as Number, &row:nilRef as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, HitTestCoord_gurax, "HitTestCoord")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("pt", VTYPE_wxPoint, ArgOccur::Once, ArgFlag::None);
	DeclareArg("col", VTYPE_Number, ArgOccur::Once, ArgFlag::NilRef | ArgFlag::Referencer);
	DeclareArg("row", VTYPE_Number, ArgOccur::Once, ArgFlag::NilRef | ArgFlag::Referencer);
}

Gurax_ImplementMethodEx(wxTextCtrl, HitTestCoord_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxPoint& value_pt = args_gurax.Pick<Value_wxPoint>();
	const wxPoint& pt = value_pt.GetEntity();
	RefPtr<Referencer> col(args_gurax.PickReferencer().Reference());
	RefPtr<Referencer> row(args_gurax.PickReferencer().Reference());
	// Function body
	wxTextCoord col_, row_;
	wxTextCtrlHitTestResult rtn = pEntity_gurax->HitTest(pt, &col_, &row_);
	col->SetValue(new Value_Number(col_));
	row->SetValue(new Value_Number(row_));
	return new Value_Number(rtn);
}

// wx.TextCtrl#IsModified()
Gurax_DeclareMethodAlias(wxTextCtrl, IsModified_gurax, "IsModified")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, IsModified_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsModified();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#IsMultiLine()
Gurax_DeclareMethodAlias(wxTextCtrl, IsMultiLine_gurax, "IsMultiLine")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, IsMultiLine_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsMultiLine();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#IsSingleLine()
Gurax_DeclareMethodAlias(wxTextCtrl, IsSingleLine_gurax, "IsSingleLine")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, IsSingleLine_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsSingleLine();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#LoadFile(filename as String, fileType? as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, LoadFile_gurax, "LoadFile")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("filename", VTYPE_String, ArgOccur::Once, ArgFlag::None);
	DeclareArg("fileType", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, LoadFile_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* filename = args_gurax.PickString();
	bool fileType_validFlag = args_gurax.IsValid();
	int fileType = fileType_validFlag? args_gurax.PickNumber<int>() : wxTEXT_TYPE_ANY;
	// Function body
	bool rtn = pEntity_gurax->LoadFile(filename, fileType);
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#MarkDirty()
Gurax_DeclareMethodAlias(wxTextCtrl, MarkDirty_gurax, "MarkDirty")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, MarkDirty_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->MarkDirty();
	return Gurax::Value::nil();
}

// wx.TextCtrl#OnDropFiles(event as wx.DropFilesEvent)
Gurax_DeclareMethodAlias(wxTextCtrl, OnDropFiles_gurax, "OnDropFiles")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("event", VTYPE_wxDropFilesEvent, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, OnDropFiles_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxDropFilesEvent& value_event = args_gurax.Pick<Value_wxDropFilesEvent>();
	wxDropFilesEvent& event = value_event.GetEntity();
	// Function body
	pEntity_gurax->OnDropFiles(event);
	return Gurax::Value::nil();
}

// wx.TextCtrl#PositionToXY(pos as Number, &x:nilRef as Number, &y:nilRef as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, PositionToXY_gurax, "PositionToXY")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("pos", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::NilRef | ArgFlag::Referencer);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::NilRef | ArgFlag::Referencer);
}

Gurax_ImplementMethodEx(wxTextCtrl, PositionToXY_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long pos = args_gurax.PickNumber<long>();
	RefPtr<Referencer> x(args_gurax.PickReferencer().Reference());
	RefPtr<Referencer> y(args_gurax.PickReferencer().Reference());
	// Function body
	long x_, y_;
	bool rtn = pEntity_gurax->PositionToXY(pos, &x_, &y_);
	x->SetValue(new Value_Number(x_));
	y->SetValue(new Value_Number(y_));
	return new Value_Bool(rtn);
}

// wx.TextCtrl#PositionToCoords(pos as Number) {block?}
Gurax_DeclareMethodAlias(wxTextCtrl, PositionToCoords_gurax, "PositionToCoords")
{
	Declare(VTYPE_wxPoint, Flag::None);
	DeclareArg("pos", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTextCtrl, PositionToCoords_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long pos = args_gurax.PickNumber<long>();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxPoint(
		pEntity_gurax->PositionToCoords(pos)));
}

// wx.TextCtrl#SaveFile(filename? as String, fileType? as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, SaveFile_gurax, "SaveFile")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("filename", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("fileType", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SaveFile_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* filename = args_gurax.IsValid()? args_gurax.PickString() : "";
	bool fileType_validFlag = args_gurax.IsValid();
	int fileType = fileType_validFlag? args_gurax.PickNumber<int>() : wxTEXT_TYPE_ANY;
	// Function body
	bool rtn = pEntity_gurax->SaveFile(filename, fileType);
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#SetDefaultStyle(style as wx.TextAttr)
Gurax_DeclareMethodAlias(wxTextCtrl, SetDefaultStyle_gurax, "SetDefaultStyle")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("style", VTYPE_wxTextAttr, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetDefaultStyle_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTextAttr& value_style = args_gurax.Pick<Value_wxTextAttr>();
	const wxTextAttr& style = value_style.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->SetDefaultStyle(style);
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#SetModified(modified as Bool)
Gurax_DeclareMethodAlias(wxTextCtrl, SetModified_gurax, "SetModified")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("modified", VTYPE_Bool, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetModified_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	bool modified = args_gurax.PickBool();
	// Function body
	pEntity_gurax->SetModified(modified);
	return Gurax::Value::nil();
}

// wx.TextCtrl#SetStyle(start as Number, end as Number, style as wx.TextAttr)
Gurax_DeclareMethodAlias(wxTextCtrl, SetStyle_gurax, "SetStyle")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("start", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("end", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("style", VTYPE_wxTextAttr, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetStyle_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long start = args_gurax.PickNumber<long>();
	long end = args_gurax.PickNumber<long>();
	Value_wxTextAttr& value_style = args_gurax.Pick<Value_wxTextAttr>();
	const wxTextAttr& style = value_style.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->SetStyle(start, end, style);
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#ShowPosition(pos as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, ShowPosition_gurax, "ShowPosition")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("pos", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, ShowPosition_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long pos = args_gurax.PickNumber<long>();
	// Function body
	pEntity_gurax->ShowPosition(pos);
	return Gurax::Value::nil();
}

// wx.TextCtrl#XYToPosition(x as Number, y as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, XYToPosition_gurax, "XYToPosition")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, XYToPosition_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long x = args_gurax.PickNumber<long>();
	long y = args_gurax.PickNumber<long>();
	// Function body
	long rtn = pEntity_gurax->XYToPosition(x, y);
	return new Gurax::Value_Number(rtn);
}

// wx.TextCtrl#AppendText(text as String)
Gurax_DeclareMethodAlias(wxTextCtrl, AppendText_gurax, "AppendText")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, AppendText_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* text = args_gurax.PickString();
	// Function body
	pEntity_gurax->AppendText(text);
	return Gurax::Value::nil();
}

// wx.TextCtrl#AutoComplete(choices[] as String)
Gurax_DeclareMethodAlias(wxTextCtrl, AutoComplete_gurax, "AutoComplete")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("choices", VTYPE_String, ArgOccur::Once, ArgFlag::ListVar);
}

Gurax_ImplementMethodEx(wxTextCtrl, AutoComplete_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	wxArrayString choices = Util::CreateArrayString(args_gurax.PickList());
	// Function body
	bool rtn = pEntity_gurax->AutoComplete(choices);
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#AutoCompleteFileNames()
Gurax_DeclareMethodAlias(wxTextCtrl, AutoCompleteFileNames_gurax, "AutoCompleteFileNames")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, AutoCompleteFileNames_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->AutoCompleteFileNames();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#AutoCompleteDirectories()
Gurax_DeclareMethodAlias(wxTextCtrl, AutoCompleteDirectories_gurax, "AutoCompleteDirectories")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, AutoCompleteDirectories_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->AutoCompleteDirectories();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#CanCopy()
Gurax_DeclareMethodAlias(wxTextCtrl, CanCopy_gurax, "CanCopy")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, CanCopy_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanCopy();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#CanCut()
Gurax_DeclareMethodAlias(wxTextCtrl, CanCut_gurax, "CanCut")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, CanCut_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanCut();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#CanPaste()
Gurax_DeclareMethodAlias(wxTextCtrl, CanPaste_gurax, "CanPaste")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, CanPaste_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanPaste();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#CanRedo()
Gurax_DeclareMethodAlias(wxTextCtrl, CanRedo_gurax, "CanRedo")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, CanRedo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanRedo();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#CanUndo()
Gurax_DeclareMethodAlias(wxTextCtrl, CanUndo_gurax, "CanUndo")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, CanUndo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->CanUndo();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#ChangeValue(value as String)
Gurax_DeclareMethodAlias(wxTextCtrl, ChangeValue_gurax, "ChangeValue")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("value", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, ChangeValue_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* value = args_gurax.PickString();
	// Function body
	pEntity_gurax->ChangeValue(value);
	return Gurax::Value::nil();
}

// wx.TextCtrl#Clear()
Gurax_DeclareMethodAlias(wxTextCtrl, Clear_gurax, "Clear")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, Clear_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Clear();
	return Gurax::Value::nil();
}

// wx.TextCtrl#Copy()
Gurax_DeclareMethodAlias(wxTextCtrl, Copy_gurax, "Copy")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, Copy_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Copy();
	return Gurax::Value::nil();
}

// wx.TextCtrl#Cut()
Gurax_DeclareMethodAlias(wxTextCtrl, Cut_gurax, "Cut")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, Cut_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Cut();
	return Gurax::Value::nil();
}

// wx.TextCtrl#GetInsertionPoint()
Gurax_DeclareMethodAlias(wxTextCtrl, GetInsertionPoint_gurax, "GetInsertionPoint")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetInsertionPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	long rtn = pEntity_gurax->GetInsertionPoint();
	return new Gurax::Value_Number(rtn);
}

// wx.TextCtrl#GetLastPosition()
Gurax_DeclareMethodAlias(wxTextCtrl, GetLastPosition_gurax, "GetLastPosition")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetLastPosition_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	long rtn = pEntity_gurax->GetLastPosition();
	return new Gurax::Value_Number(rtn);
}

// wx.TextCtrl#GetRange(from as Number, to as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, GetRange_gurax, "GetRange")
{
	Declare(VTYPE_String, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetRange_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long from = args_gurax.PickNumber<long>();
	long to = args_gurax.PickNumber<long>();
	// Function body
	wxString rtn = pEntity_gurax->GetRange(from, to);
	//return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
	return new Gurax::Value_String(rtn.utf8_str().data());
}

// wx.TextCtrl#GetSelection(&from:nilRef as Number, &to:nilRef as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, GetSelection_gurax, "GetSelection")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::NilRef | ArgFlag::Referencer);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::NilRef | ArgFlag::Referencer);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetSelection_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	RefPtr<Referencer> from(args_gurax.PickReferencer().Reference());
	RefPtr<Referencer> to(args_gurax.PickReferencer().Reference());
	// Function body
	long from_, to_;
	pEntity_gurax->GetSelection(&from_, &to_);
	from->SetValue(new Value_Number(from_));
	to->SetValue(new Value_Number(to_));
	return Value::nil();
}

// wx.TextCtrl#GetStringSelection()
Gurax_DeclareMethodAlias(wxTextCtrl, GetStringSelection_gurax, "GetStringSelection")
{
	Declare(VTYPE_String, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetStringSelection_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxString rtn = pEntity_gurax->GetStringSelection();
	//return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
	return new Gurax::Value_String(rtn.utf8_str().data());
}

// wx.TextCtrl#GetValue()
Gurax_DeclareMethodAlias(wxTextCtrl, GetValue_gurax, "GetValue")
{
	Declare(VTYPE_String, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetValue_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxString rtn = pEntity_gurax->GetValue();
	//return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
	return new Gurax::Value_String(rtn.utf8_str().data());
}

// wx.TextCtrl#IsEditable()
Gurax_DeclareMethodAlias(wxTextCtrl, IsEditable_gurax, "IsEditable")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, IsEditable_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsEditable();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#IsEmpty()
Gurax_DeclareMethodAlias(wxTextCtrl, IsEmpty_gurax, "IsEmpty")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, IsEmpty_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsEmpty();
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#Paste()
Gurax_DeclareMethodAlias(wxTextCtrl, Paste_gurax, "Paste")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, Paste_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Paste();
	return Gurax::Value::nil();
}

// wx.TextCtrl#Redo()
Gurax_DeclareMethodAlias(wxTextCtrl, Redo_gurax, "Redo")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, Redo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Redo();
	return Gurax::Value::nil();
}

// wx.TextCtrl#Remove(from as Number, to as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, Remove_gurax, "Remove")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, Remove_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long from = args_gurax.PickNumber<long>();
	long to = args_gurax.PickNumber<long>();
	// Function body
	pEntity_gurax->Remove(from, to);
	return Gurax::Value::nil();
}

// wx.TextCtrl#Replace(from as Number, to as Number, value as String)
Gurax_DeclareMethodAlias(wxTextCtrl, Replace_gurax, "Replace")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("value", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, Replace_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long from = args_gurax.PickNumber<long>();
	long to = args_gurax.PickNumber<long>();
	const char* value = args_gurax.PickString();
	// Function body
	pEntity_gurax->Replace(from, to, value);
	return Gurax::Value::nil();
}

// wx.TextCtrl#SetEditable(editable as Bool)
Gurax_DeclareMethodAlias(wxTextCtrl, SetEditable_gurax, "SetEditable")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("editable", VTYPE_Bool, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetEditable_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	bool editable = args_gurax.PickBool();
	// Function body
	pEntity_gurax->SetEditable(editable);
	return Gurax::Value::nil();
}

// wx.TextCtrl#SetInsertionPoint(pos as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, SetInsertionPoint_gurax, "SetInsertionPoint")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("pos", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetInsertionPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long pos = args_gurax.PickNumber<long>();
	// Function body
	pEntity_gurax->SetInsertionPoint(pos);
	return Gurax::Value::nil();
}

// wx.TextCtrl#SetInsertionPointEnd()
Gurax_DeclareMethodAlias(wxTextCtrl, SetInsertionPointEnd_gurax, "SetInsertionPointEnd")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetInsertionPointEnd_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->SetInsertionPointEnd();
	return Gurax::Value::nil();
}

// wx.TextCtrl#SetMaxLength(len as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, SetMaxLength_gurax, "SetMaxLength")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("len", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetMaxLength_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned long len = args_gurax.PickNumber<unsigned long>();
	// Function body
	pEntity_gurax->SetMaxLength(len);
	return Gurax::Value::nil();
}

// wx.TextCtrl#SetSelection(from as Number, to as Number)
Gurax_DeclareMethodAlias(wxTextCtrl, SetSelection_gurax, "SetSelection")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetSelection_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long from = args_gurax.PickNumber<long>();
	long to = args_gurax.PickNumber<long>();
	// Function body
	pEntity_gurax->SetSelection(from, to);
	return Gurax::Value::nil();
}

// wx.TextCtrl#SelectAll()
Gurax_DeclareMethodAlias(wxTextCtrl, SelectAll_gurax, "SelectAll")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SelectAll_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->SelectAll();
	return Gurax::Value::nil();
}

// wx.TextCtrl#SelectNone()
Gurax_DeclareMethodAlias(wxTextCtrl, SelectNone_gurax, "SelectNone")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SelectNone_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->SelectNone();
	return Gurax::Value::nil();
}

// wx.TextCtrl#SetHint(hint as String)
Gurax_DeclareMethodAlias(wxTextCtrl, SetHint_gurax, "SetHint")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("hint", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetHint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* hint = args_gurax.PickString();
	// Function body
	bool rtn = pEntity_gurax->SetHint(hint);
	return new Gurax::Value_Bool(rtn);
}

// wx.TextCtrl#GetHint()
Gurax_DeclareMethodAlias(wxTextCtrl, GetHint_gurax, "GetHint")
{
	Declare(VTYPE_String, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetHint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxString rtn = pEntity_gurax->GetHint();
	//return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
	return new Gurax::Value_String(rtn.utf8_str().data());
}

// wx.TextCtrl#GetMargins() {block?}
Gurax_DeclareMethodAlias(wxTextCtrl, GetMargins_gurax, "GetMargins")
{
	Declare(VTYPE_wxPoint, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTextCtrl, GetMargins_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxPoint(
		pEntity_gurax->GetMargins()));
}

// wx.TextCtrl#SetValue(value as String)
Gurax_DeclareMethodAlias(wxTextCtrl, SetValue_gurax, "SetValue")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("value", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetValue_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* value = args_gurax.PickString();
	// Function body
	pEntity_gurax->SetValue(value);
	return Gurax::Value::nil();
}

// wx.TextCtrl#Undo()
Gurax_DeclareMethodAlias(wxTextCtrl, Undo_gurax, "Undo")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, Undo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Undo();
	return Gurax::Value::nil();
}

// wx.TextCtrl#WriteText(text as String)
Gurax_DeclareMethodAlias(wxTextCtrl, WriteText_gurax, "WriteText")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, WriteText_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* text = args_gurax.PickString();
	// Function body
	pEntity_gurax->WriteText(text);
	return Gurax::Value::nil();
}

// wx.TextCtrl#SetMargins(args* as Any)
Gurax_DeclareMethodAlias(wxTextCtrl, SetMargins_gurax, "SetMargins")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("args", VTYPE_Any, ArgOccur::ZeroOrMore, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTextCtrl, SetMargins_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const Gurax::ValueList& args = args_gurax.PickList();
	// Function body
	// SetMargins(pt as const_Point_r) as bool
	do {
		static DeclCallable* pDeclCallable = nullptr;
		if (!pDeclCallable) {
			pDeclCallable = new DeclCallable();
			pDeclCallable->DeclareArg("pt", VTYPE_wxPoint);
		}
		RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
		if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
		Error::Clear();
		ArgPicker args(*pArgument);
		const wxPoint& pt = args.Pick<Value_wxPoint>().GetEntity();
		bool rtn = pEntity_gurax->SetMargins(pt);
		return new Value_Bool(rtn);
	} while (0);
	Error::ClearIssuedFlag();
	// SetMargins(left as Coord, top as Coord = -1) as bool
	do {
		static DeclCallable* pDeclCallable = nullptr;
		if (!pDeclCallable) {
			pDeclCallable = new DeclCallable();
			pDeclCallable->DeclareArg("left", VTYPE_Number);
			pDeclCallable->DeclareArg("top", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
		}
		RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
		if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
		Error::Clear();
		ArgPicker args(*pArgument);
		wxCoord left = args.PickNumber<wxCoord>();
		wxCoord top = args.IsValid()? args.PickNumber<wxCoord>() : -1;
		bool rtn = pEntity_gurax->SetMargins(left, top);
		return new Value_Bool(rtn);
	} while (0);
	return Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxTextCtrl
//------------------------------------------------------------------------------
VType_wxTextCtrl VTYPE_wxTextCtrl("TextCtrl");

void VType_wxTextCtrl::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_wxControl, Flag::Mutable, Gurax_CreateConstructor(TextCtrl_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxTextCtrl, DiscardEdits_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, EmulateKeyPress_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetDefaultStyle_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetLineLength_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetLineText_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetNumberOfLines_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetStyle_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, HitTestPos_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, HitTestCoord_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, IsModified_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, IsMultiLine_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, IsSingleLine_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, LoadFile_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, MarkDirty_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, OnDropFiles_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, PositionToXY_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, PositionToCoords_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SaveFile_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetDefaultStyle_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetModified_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetStyle_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, ShowPosition_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, XYToPosition_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, AppendText_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, AutoComplete_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, AutoCompleteFileNames_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, AutoCompleteDirectories_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, CanCopy_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, CanCut_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, CanPaste_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, CanRedo_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, CanUndo_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, ChangeValue_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, Clear_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, Copy_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, Cut_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetInsertionPoint_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetLastPosition_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetRange_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetSelection_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetStringSelection_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetValue_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, IsEditable_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, IsEmpty_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, Paste_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, Redo_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, Remove_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, Replace_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetEditable_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetInsertionPoint_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetInsertionPointEnd_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetMaxLength_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetSelection_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SelectAll_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SelectNone_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetHint_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetHint_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, GetMargins_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetValue_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, Undo_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, WriteText_gurax));
	Assign(Gurax_CreateMethod(wxTextCtrl, SetMargins_gurax));
}

//------------------------------------------------------------------------------
// Value_wxTextCtrl
//------------------------------------------------------------------------------
VType& Value_wxTextCtrl::vtype = VTYPE_wxTextCtrl;

String Value_wxTextCtrl::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.TextCtrl");
}

//------------------------------------------------------------------------------
// Value_wxTextCtrl::EntityT
//------------------------------------------------------------------------------

Gurax_EndModuleScope(wx)
