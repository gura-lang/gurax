//==============================================================================
// VType_wxHeaderColumnSimple.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXHEADERCOLUMNSIMPLE_H
#define GURAX_MODULE_WX_VTYPE_WXHEADERCOLUMNSIMPLE_H
#include <gurax.h>
#include <wx/wx.h>
#include <wx/headercol.h>
#include "Util.h"
#include "VType_wxSettableHeaderColumn.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxHeaderColumnSimple
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxHeaderColumnSimple : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxHeaderColumnSimple VTYPE_wxHeaderColumnSimple;

//------------------------------------------------------------------------------
// Value_wxHeaderColumnSimple
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxHeaderColumnSimple : public Value_wxSettableHeaderColumn {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxHeaderColumnSimple);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxHeaderColumnSimple");
protected:
	wxHeaderColumnSimple* _pEntity;
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxHeaderColumnSimple() = delete;
	explicit Value_wxHeaderColumnSimple(wxHeaderColumnSimple* pEntity, VType& vtype = VTYPE_wxHeaderColumnSimple) :
		Value_wxSettableHeaderColumn(pEntity, vtype), _pEntity(pEntity) {}
	// Copy constructor/operator
	Value_wxHeaderColumnSimple(const Value_wxHeaderColumnSimple& src) = delete;
	Value_wxHeaderColumnSimple& operator=(const Value_wxHeaderColumnSimple& src) = delete;
	// Move constructor/operator
	Value_wxHeaderColumnSimple(Value_wxHeaderColumnSimple&& src) noexcept = delete;
	Value_wxHeaderColumnSimple& operator=(Value_wxHeaderColumnSimple&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxHeaderColumnSimple() = default;
public:
	wxHeaderColumnSimple& GetEntity() { return *_pEntity; }
	const wxHeaderColumnSimple& GetEntity() const { return *_pEntity; }
	wxHeaderColumnSimple* GetEntityPtr() { return _pEntity; }
	const wxHeaderColumnSimple* GetEntityPtr() const { return _pEntity; }
public:
	static wxHeaderColumnSimple& GetEntity(Value& value) {
		return dynamic_cast<Value_wxHeaderColumnSimple&>(value).GetEntity();
	}
	static const wxHeaderColumnSimple& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxHeaderColumnSimple&>(value).GetEntity();
	}
	static wxHeaderColumnSimple* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxHeaderColumnSimple&>(value).GetEntityPtr();
	}
	static const wxHeaderColumnSimple* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxHeaderColumnSimple&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
