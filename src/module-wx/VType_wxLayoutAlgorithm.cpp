//==============================================================================
// VType_wxLayoutAlgorithm.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

# Property

# Operator

# Cast Operation

# Constructor

# Method
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.LayoutAlgorithm() {block?} {block?}
Gurax_DeclareConstructorAlias(LayoutAlgorithm_gurax, "LayoutAlgorithm")
{
	Declare(VTYPE_wxLayoutAlgorithm, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"Creates an instance of wx.LayoutAlgorithm.");
}

Gurax_ImplementConstructorEx(LayoutAlgorithm_gurax, processor_gurax, argument_gurax)
{
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxLayoutAlgorithm(
		wxLayoutAlgorithm()));
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.LayoutAlgorithm#LayoutFrame(frame as wx.Frame, mainWindow? as wx.Window)
Gurax_DeclareMethodAlias(wxLayoutAlgorithm, LayoutFrame_gurax, "LayoutFrame")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("frame", VTYPE_wxFrame, ArgOccur::Once, ArgFlag::None);
	DeclareArg("mainWindow", VTYPE_wxWindow, ArgOccur::ZeroOrOnce, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxLayoutAlgorithm, LayoutFrame_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxFrame& value_frame = args_gurax.Pick<Value_wxFrame>();
	wxFrame* frame = value_frame.GetEntityPtr();
	wxWindow* mainWindow = args_gurax.IsValid()? args_gurax.Pick<Value_wxWindow>().GetEntityPtr() : nullptr;
	// Function body
	bool rtn = pEntity_gurax->LayoutFrame(frame, mainWindow);
	return new Gurax::Value_Bool(rtn);
}

// wx.LayoutAlgorithm#LayoutMDIFrame(frame as wx.MDIParentFrame, rect? as wx.Rect)
Gurax_DeclareMethodAlias(wxLayoutAlgorithm, LayoutMDIFrame_gurax, "LayoutMDIFrame")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("frame", VTYPE_wxMDIParentFrame, ArgOccur::Once, ArgFlag::None);
	DeclareArg("rect", VTYPE_wxRect, ArgOccur::ZeroOrOnce, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxLayoutAlgorithm, LayoutMDIFrame_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxMDIParentFrame& value_frame = args_gurax.Pick<Value_wxMDIParentFrame>();
	wxMDIParentFrame* frame = value_frame.GetEntityPtr();
	wxRect* rect = args_gurax.IsValid()? args_gurax.Pick<Value_wxRect>().GetEntityPtr() : nullptr;
	// Function body
	bool rtn = pEntity_gurax->LayoutMDIFrame(frame, rect);
	return new Gurax::Value_Bool(rtn);
}

// wx.LayoutAlgorithm#LayoutWindow(parent as wx.Window, mainWindow? as wx.Window)
Gurax_DeclareMethodAlias(wxLayoutAlgorithm, LayoutWindow_gurax, "LayoutWindow")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("mainWindow", VTYPE_wxWindow, ArgOccur::ZeroOrOnce, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxLayoutAlgorithm, LayoutWindow_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	wxWindow* mainWindow = args_gurax.IsValid()? args_gurax.Pick<Value_wxWindow>().GetEntityPtr() : nullptr;
	// Function body
	bool rtn = pEntity_gurax->LayoutWindow(parent, mainWindow);
	return new Gurax::Value_Bool(rtn);
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxLayoutAlgorithm
//------------------------------------------------------------------------------
VType_wxLayoutAlgorithm VTYPE_wxLayoutAlgorithm("LayoutAlgorithm");

void VType_wxLayoutAlgorithm::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelpTmpl(Gurax_Symbol(en), g_docHelp_en);
	// Declaration of VType
	Declare(VTYPE_wxObject, Flag::Mutable, Gurax_CreateConstructor(LayoutAlgorithm_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxLayoutAlgorithm, LayoutFrame_gurax));
	Assign(Gurax_CreateMethod(wxLayoutAlgorithm, LayoutMDIFrame_gurax));
	Assign(Gurax_CreateMethod(wxLayoutAlgorithm, LayoutWindow_gurax));
}

//------------------------------------------------------------------------------
// Value_wxLayoutAlgorithm
//------------------------------------------------------------------------------
VType& Value_wxLayoutAlgorithm::vtype = VTYPE_wxLayoutAlgorithm;

String Value_wxLayoutAlgorithm::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.LayoutAlgorithm");
}

Gurax_EndModuleScope(wx)
