//==============================================================================
// VType_wxSashLayoutWindow.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"""(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.SashLayoutWindow, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.SashLayoutWindow, `en)}

${help.ComposeMethodHelp(wx.SashLayoutWindow, `en)}
)""";

static const char* g_docHelp_ja = u8R"""(
# 概要

# 定数

${help.ComposePropertyHelp(wx.SashLayoutWindow, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.SashLayoutWindow, `ja)}

${help.ComposeMethodHelp(wx.SashLayoutWindow, `ja)}
)""";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.SashLayoutWindow(parent as wx.Window, id as Number, pos? as wx.Point, size? as wx.Size, style? as Number, name? as String) {block?}
Gurax_DeclareConstructorAlias(SashLayoutWindow_gurax, "SashLayoutWindow")
{
	Declare(VTYPE_wxSashLayoutWindow, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("id", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("pos", VTYPE_wxPoint, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("style", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("name", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementConstructorEx(SashLayoutWindow_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	wxWindowID id = args_gurax.PickNumber<wxWindowID>();
	const wxPoint& pos = args_gurax.IsValid()? args_gurax.Pick<Value_wxPoint>().GetEntity() : wxDefaultPosition;
	const wxSize& size = args_gurax.IsValid()? args_gurax.Pick<Value_wxSize>().GetEntity() : wxDefaultSize;
	bool style_validFlag = args_gurax.IsValid();
	long style = style_validFlag? args_gurax.PickNumber<long>() : (wxCLIP_CHILDREN | wxSW_3D);
	bool name_validFlag = args_gurax.IsValid();
	wxString name = name_validFlag? wxString(args_gurax.PickString()) : "layoutWindow";
	// Function body
	auto pEntity_gurax = new Value_wxSashLayoutWindow::EntityT(parent, id, pos, size, style, name);
	RefPtr<Value_wxSashLayoutWindow> pValue_gurax(new Value_wxSashLayoutWindow(pEntity_gurax));
	pEntity_gurax->core_gurax.SetInfo(processor_gurax.Reference(), *pValue_gurax);
	return argument_gurax.ReturnValue(processor_gurax, pValue_gurax.release());
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.SashLayoutWindow#Create(parent as wx.Window, id? as Number, pos? as wx.Point, size? as wx.Size, style? as Number, name? as String)
Gurax_DeclareMethodAlias(wxSashLayoutWindow, Create_gurax, "Create")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("id", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("pos", VTYPE_wxPoint, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("style", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("name", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxSashLayoutWindow, Create_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	bool id_validFlag = args_gurax.IsValid();
	wxWindowID id = id_validFlag? args_gurax.PickNumber<wxWindowID>() : wxID_ANY;
	const wxPoint& pos = args_gurax.IsValid()? args_gurax.Pick<Value_wxPoint>().GetEntity() : wxDefaultPosition;
	const wxSize& size = args_gurax.IsValid()? args_gurax.Pick<Value_wxSize>().GetEntity() : wxDefaultSize;
	bool style_validFlag = args_gurax.IsValid();
	long style = style_validFlag? args_gurax.PickNumber<long>() : (wxCLIP_CHILDREN | wxSW_3D);
	bool name_validFlag = args_gurax.IsValid();
	wxString name = name_validFlag? wxString(args_gurax.PickString()) : "layoutWindow";
	// Function body
	bool rtn = pEntity_gurax->Create(parent, id, pos, size, style, name);
	return new Gurax::Value_Bool(rtn);
}

// wx.SashLayoutWindow#GetAlignment()
Gurax_DeclareMethodAlias(wxSashLayoutWindow, GetAlignment_gurax, "GetAlignment")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxSashLayoutWindow, GetAlignment_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxLayoutAlignment rtn = pEntity_gurax->GetAlignment();
	return new Gurax::Value_Number(rtn);
}

// wx.SashLayoutWindow#GetOrientation()
Gurax_DeclareMethodAlias(wxSashLayoutWindow, GetOrientation_gurax, "GetOrientation")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxSashLayoutWindow, GetOrientation_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxLayoutOrientation rtn = pEntity_gurax->GetOrientation();
	return new Gurax::Value_Number(rtn);
}

// wx.SashLayoutWindow#OnCalculateLayout(event as wx.CalculateLayoutEvent)
Gurax_DeclareMethodAlias(wxSashLayoutWindow, OnCalculateLayout_gurax, "OnCalculateLayout")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("event", VTYPE_wxCalculateLayoutEvent, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxSashLayoutWindow, OnCalculateLayout_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxCalculateLayoutEvent& value_event = args_gurax.Pick<Value_wxCalculateLayoutEvent>();
	wxCalculateLayoutEvent& event = value_event.GetEntity();
	// Function body
	pEntity_gurax->OnCalculateLayout(event);
	return Gurax::Value::nil();
}

// wx.SashLayoutWindow#OnQueryLayoutInfo(event as wx.QueryLayoutInfoEvent)
Gurax_DeclareMethodAlias(wxSashLayoutWindow, OnQueryLayoutInfo_gurax, "OnQueryLayoutInfo")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("event", VTYPE_wxQueryLayoutInfoEvent, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxSashLayoutWindow, OnQueryLayoutInfo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxQueryLayoutInfoEvent& value_event = args_gurax.Pick<Value_wxQueryLayoutInfoEvent>();
	wxQueryLayoutInfoEvent& event = value_event.GetEntity();
	// Function body
	pEntity_gurax->OnQueryLayoutInfo(event);
	return Gurax::Value::nil();
}

// wx.SashLayoutWindow#SetAlignment(alignment as Number)
Gurax_DeclareMethodAlias(wxSashLayoutWindow, SetAlignment_gurax, "SetAlignment")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("alignment", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxSashLayoutWindow, SetAlignment_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	wxLayoutAlignment alignment = args_gurax.PickNumber<wxLayoutAlignment>();
	// Function body
	pEntity_gurax->SetAlignment(alignment);
	return Gurax::Value::nil();
}

// wx.SashLayoutWindow#SetDefaultSize(size as wx.Size)
Gurax_DeclareMethodAlias(wxSashLayoutWindow, SetDefaultSize_gurax, "SetDefaultSize")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxSashLayoutWindow, SetDefaultSize_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxSize& value_size = args_gurax.Pick<Value_wxSize>();
	const wxSize& size = value_size.GetEntity();
	// Function body
	pEntity_gurax->SetDefaultSize(size);
	return Gurax::Value::nil();
}

// wx.SashLayoutWindow#SetOrientation(orientation as Number)
Gurax_DeclareMethodAlias(wxSashLayoutWindow, SetOrientation_gurax, "SetOrientation")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("orientation", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxSashLayoutWindow, SetOrientation_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	wxLayoutOrientation orientation = args_gurax.PickNumber<wxLayoutOrientation>();
	// Function body
	pEntity_gurax->SetOrientation(orientation);
	return Gurax::Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxSashLayoutWindow
//------------------------------------------------------------------------------
VType_wxSashLayoutWindow VTYPE_wxSashLayoutWindow("SashLayoutWindow");

void VType_wxSashLayoutWindow::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_wxSashWindow, Flag::Mutable, Gurax_CreateConstructor(SashLayoutWindow_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxSashLayoutWindow, Create_gurax));
	Assign(Gurax_CreateMethod(wxSashLayoutWindow, GetAlignment_gurax));
	Assign(Gurax_CreateMethod(wxSashLayoutWindow, GetOrientation_gurax));
	Assign(Gurax_CreateMethod(wxSashLayoutWindow, OnCalculateLayout_gurax));
	Assign(Gurax_CreateMethod(wxSashLayoutWindow, OnQueryLayoutInfo_gurax));
	Assign(Gurax_CreateMethod(wxSashLayoutWindow, SetAlignment_gurax));
	Assign(Gurax_CreateMethod(wxSashLayoutWindow, SetDefaultSize_gurax));
	Assign(Gurax_CreateMethod(wxSashLayoutWindow, SetOrientation_gurax));
}

//------------------------------------------------------------------------------
// Value_wxSashLayoutWindow
//------------------------------------------------------------------------------
VType& Value_wxSashLayoutWindow::vtype = VTYPE_wxSashLayoutWindow;

String Value_wxSashLayoutWindow::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.SashLayoutWindow");
}

//------------------------------------------------------------------------------
// Value_wxSashLayoutWindow::EntityT
//------------------------------------------------------------------------------

Gurax_EndModuleScope(wx)
