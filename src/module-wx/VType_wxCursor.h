//==============================================================================
// VType_wxCursor.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXCURSOR_H
#define GURAX_MODULE_WX_VTYPE_WXCURSOR_H
#include <gurax.h>
#include <wx/wx.h>
#include "Util.h"
#include "VType_wxGDIObject.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxCursor
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxCursor : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxCursor VTYPE_wxCursor;

//------------------------------------------------------------------------------
// Value_wxCursor
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxCursor : public Value_wxGDIObject {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxCursor);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxCursor");
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxCursor() = delete;
	explicit Value_wxCursor(const wxObject& entity, VType& vtype = VTYPE_wxCursor) :
		Value_wxGDIObject(entity, vtype) {}
	// Copy constructor/operator
	Value_wxCursor(const Value_wxCursor& src) = delete;
	Value_wxCursor& operator=(const Value_wxCursor& src) = delete;
	// Move constructor/operator
	Value_wxCursor(Value_wxCursor&& src) noexcept = delete;
	Value_wxCursor& operator=(Value_wxCursor&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxCursor() = default;
public:
	wxCursor& GetEntity() {
		return reinterpret_cast<wxCursor&>(Value_wxObject::GetEntity());
	}
	const wxCursor& GetEntity() const {
		return reinterpret_cast<const wxCursor&>(Value_wxObject::GetEntity());
	}
	wxCursor* GetEntityPtr() {
		return reinterpret_cast<wxCursor*>(Value_wxObject::GetEntityPtr());
	}
	const wxCursor* GetEntityPtr() const {
		return reinterpret_cast<const wxCursor*>(Value_wxObject::GetEntityPtr());
	}
public:
	static wxCursor& GetEntity(Value& value) {
		return dynamic_cast<Value_wxCursor&>(value).GetEntity();
	}
	static const wxCursor& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxCursor&>(value).GetEntity();
	}
	static wxCursor* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxCursor&>(value).GetEntityPtr();
	}
	static const wxCursor* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxCursor&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
