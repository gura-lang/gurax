//==============================================================================
// VType_wxGBSizerItem.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.GBSizerItem, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.GBSizerItem, `en)}

${help.ComposeMethodHelp(wx.GBSizerItem, `en)}
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.GBSizerItem(args* as Any) {block?}
Gurax_DeclareConstructorAlias(GBSizerItem_gurax, "GBSizerItem")
{
	Declare(VTYPE_wxGBSizerItem, Flag::None);
	DeclareArg("args", VTYPE_Any, ArgOccur::ZeroOrMore, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementConstructorEx(GBSizerItem_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const Gurax::ValueList& args = args_gurax.PickList();
	// Function body
	// wxGBSizerItem(width as int, height as int, pos as const_GBPosition_r, span as const_GBSpan_r = wxDefaultSpan, flag as int = 0, border as int = 0, userData? as any)
	do {
		static DeclCallable* pDeclCallable = nullptr;
		if (!pDeclCallable) {
			pDeclCallable = new DeclCallable();
			pDeclCallable->DeclareArg("width", VTYPE_Number);
			pDeclCallable->DeclareArg("height", VTYPE_Number);
			pDeclCallable->DeclareArg("pos", VTYPE_wxGBPosition);
			pDeclCallable->DeclareArg("span", VTYPE_wxGBSpan, DeclArg::Occur::ZeroOrOnce);
			pDeclCallable->DeclareArg("flag", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
			pDeclCallable->DeclareArg("border", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
			pDeclCallable->DeclareArg("userData", VTYPE_Any, DeclArg::Occur::ZeroOrOnce);
		}
		RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
		if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
		Error::Clear();
		ArgPicker args(*pArgument);
		int width = args.PickNumber<int>();
		int height = args.PickNumber<int>();
		const wxGBPosition& pos = args.Pick<Value_wxGBPosition>().GetEntity();
		const wxGBSpan& span = args.IsValid()? args.Pick<Value_wxGBSpan>().GetEntity() : wxDefaultSpan;
		int flag = args.IsValid()? args.PickNumber<int>() : 0;
		int border = args.IsValid()? args.PickNumber<int>() : 0;
		RefPtr<Value> pValueUserData(args.IsValid()? args.PickValue().Reference() : Value::nil()); 
		return new Value_wxGBSizerItem(wxGBSizerItem(width, height, pos, span, flag, border, nullptr));
	} while (0);
	Error::ClearIssuedFlag();
	// wxGBSizerItem(window as Window_p, pos as const_GBPosition_r, span as const_GBSpan_r = wxDefaultSpan, flag as int = 0, border as int = 0, userData? as Object_p)
	do {
		static DeclCallable* pDeclCallable = nullptr;
		if (!pDeclCallable) {
			pDeclCallable = new DeclCallable();
			pDeclCallable->DeclareArg("window", VTYPE_wxWindow);
			pDeclCallable->DeclareArg("pos", VTYPE_wxGBPosition);
			pDeclCallable->DeclareArg("span", VTYPE_wxGBSpan, DeclArg::Occur::ZeroOrOnce);
			pDeclCallable->DeclareArg("flag", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
			pDeclCallable->DeclareArg("border", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
			pDeclCallable->DeclareArg("userData", VTYPE_Any, DeclArg::Occur::ZeroOrOnce);
		}
		RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
		if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
		Error::Clear();
		ArgPicker args(*pArgument);
		wxWindow* window = args.Pick<Value_wxWindow>().GetEntityPtr();
		const wxGBPosition& pos = args.Pick<Value_wxGBPosition>().GetEntity();
		const wxGBSpan& span = args.IsValid()? args.Pick<Value_wxGBSpan>().GetEntity() : wxDefaultSpan;
		int flag = args.IsValid()? args.PickNumber<int>() : 0;
		int border = args.IsValid()? args.PickNumber<int>() : 0;
		RefPtr<Value> pValueUserData(args.IsValid()? args.PickValue().Reference() : Value::nil()); 
		return new Value_wxGBSizerItem(wxGBSizerItem(window, pos, span, flag, border, nullptr));
	} while (0);
	Error::ClearIssuedFlag();
	// wxGBSizerItem(sizer as Sizer_p, pos as const_GBPosition_r, span as const_GBSpan_r = wxDefaultSpan, flag as int = 0, border as int = 0, userData? as Object_p)
	do {
		static DeclCallable* pDeclCallable = nullptr;
		if (!pDeclCallable) {
			pDeclCallable = new DeclCallable();
			pDeclCallable->DeclareArg("sizer", VTYPE_wxSizer);
			pDeclCallable->DeclareArg("pos", VTYPE_wxGBPosition);
			pDeclCallable->DeclareArg("span", VTYPE_wxGBSpan, DeclArg::Occur::ZeroOrOnce);
			pDeclCallable->DeclareArg("flag", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
			pDeclCallable->DeclareArg("border", VTYPE_Number, DeclArg::Occur::ZeroOrOnce);
			pDeclCallable->DeclareArg("userData", VTYPE_Any, DeclArg::Occur::ZeroOrOnce);
		}
		RefPtr<Argument> pArgument(new Argument(processor_gurax, pDeclCallable->Reference()));
		if (!pArgument->FeedValuesAndComplete(processor_gurax, args)) break;
		Error::Clear();
		ArgPicker args(*pArgument);
		wxSizer* sizer = args.Pick<Value_wxSizer>().GetEntityPtr();
		const wxGBPosition& pos = args.Pick<Value_wxGBPosition>().GetEntity();
		const wxGBSpan& span = args.IsValid()? args.Pick<Value_wxGBSpan>().GetEntity() : wxDefaultSpan;
		int flag = args.IsValid()? args.PickNumber<int>() : 0;
		int border = args.IsValid()? args.PickNumber<int>() : 0;
		RefPtr<Value> pValueUserData(args.IsValid()? args.PickValue().Reference() : Value::nil()); 
		return new Value_wxGBSizerItem(wxGBSizerItem(sizer, pos, span, flag, border, nullptr));
	} while (0);
	return Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.GBSizerItem#GetEndPos()
Gurax_DeclareMethodAlias(wxGBSizerItem, GetEndPos_gurax, "GetEndPos")
{
	Declare(VTYPE_Any, Flag::None);
}

Gurax_ImplementMethodEx(wxGBSizerItem, GetEndPos_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	int row, col;
	pEntity_gurax->GetEndPos(row, col);
	return Value_Tuple::Create(new Value_Number(row), new Value_Number(col));
}

// wx.GBSizerItem#Intersects(pos as wx.GBPosition, span as wx.GBSpan)
Gurax_DeclareMethodAlias(wxGBSizerItem, Intersects_gurax, "Intersects")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("pos", VTYPE_wxGBPosition, ArgOccur::Once, ArgFlag::None);
	DeclareArg("span", VTYPE_wxGBSpan, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxGBSizerItem, Intersects_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxGBPosition& value_pos = args_gurax.Pick<Value_wxGBPosition>();
	const wxGBPosition& pos = value_pos.GetEntity();
	Value_wxGBSpan& value_span = args_gurax.Pick<Value_wxGBSpan>();
	const wxGBSpan& span = value_span.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->Intersects(pos, span);
	return new Gurax::Value_Bool(rtn);
}

// wx.GBSizerItem#SetPos(pos as wx.GBPosition)
Gurax_DeclareMethodAlias(wxGBSizerItem, SetPos_gurax, "SetPos")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("pos", VTYPE_wxGBPosition, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxGBSizerItem, SetPos_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxGBPosition& value_pos = args_gurax.Pick<Value_wxGBPosition>();
	const wxGBPosition& pos = value_pos.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->SetPos(pos);
	return new Gurax::Value_Bool(rtn);
}

// wx.GBSizerItem#SetSpan(span as wx.GBSpan)
Gurax_DeclareMethodAlias(wxGBSizerItem, SetSpan_gurax, "SetSpan")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("span", VTYPE_wxGBSpan, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxGBSizerItem, SetSpan_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxGBSpan& value_span = args_gurax.Pick<Value_wxGBSpan>();
	const wxGBSpan& span = value_span.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->SetSpan(span);
	return new Gurax::Value_Bool(rtn);
}

// wx.GBSizerItem#SetGBSizer(sizer as wx.GridBagSizer)
Gurax_DeclareMethodAlias(wxGBSizerItem, SetGBSizer_gurax, "SetGBSizer")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("sizer", VTYPE_wxGridBagSizer, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxGBSizerItem, SetGBSizer_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxGridBagSizer& value_sizer = args_gurax.Pick<Value_wxGridBagSizer>();
	wxGridBagSizer* sizer = value_sizer.GetEntityPtr();
	// Function body
	pEntity_gurax->SetGBSizer(sizer);
	return Gurax::Value::nil();
}

// wx.GBSizerItem#GetPos() {block?}
Gurax_DeclareMethodAlias(wxGBSizerItem, GetPos_gurax, "GetPos")
{
	Declare(VTYPE_wxGBPosition, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxGBSizerItem, GetPos_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxGBPosition(
		pEntity_gurax->GetPos()));
}

// wx.GBSizerItem#GetPosTuple()
Gurax_DeclareMethodAlias(wxGBSizerItem, GetPosTuple_gurax, "GetPosTuple")
{
	Declare(VTYPE_Tuple, Flag::None);
}

Gurax_ImplementMethodEx(wxGBSizerItem, GetPosTuple_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	int row, col;
	pEntity_gurax->GetPos(row, col);
	return Value_Tuple::Create(new Value_Number(row), new Value_Number(col));
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxGBSizerItem
//------------------------------------------------------------------------------
VType_wxGBSizerItem VTYPE_wxGBSizerItem("GBSizerItem");

void VType_wxGBSizerItem::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	// Declaration of VType
	Declare(VTYPE_wxSizerItem, Flag::Mutable, Gurax_CreateConstructor(GBSizerItem_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxGBSizerItem, GetEndPos_gurax));
	Assign(Gurax_CreateMethod(wxGBSizerItem, Intersects_gurax));
	Assign(Gurax_CreateMethod(wxGBSizerItem, SetPos_gurax));
	Assign(Gurax_CreateMethod(wxGBSizerItem, SetSpan_gurax));
	Assign(Gurax_CreateMethod(wxGBSizerItem, SetGBSizer_gurax));
	Assign(Gurax_CreateMethod(wxGBSizerItem, GetPos_gurax));
	Assign(Gurax_CreateMethod(wxGBSizerItem, GetPosTuple_gurax));
}

//------------------------------------------------------------------------------
// Value_wxGBSizerItem
//------------------------------------------------------------------------------
VType& Value_wxGBSizerItem::vtype = VTYPE_wxGBSizerItem;

String Value_wxGBSizerItem::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.GBSizerItem");
}

Gurax_EndModuleScope(wx)
