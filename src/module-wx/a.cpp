-// wx.EvtHandler#Bind(eventType as wx.EventType, funct as Any, id? as Number, lastId? as Number):void
-Gurax_DeclareMethod(wxEvtHandler, Bind)
-{
-       Declare(VTYPE_Nil, Flag::None);
-       DeclareArg("eventType", VTYPE_wxEventType, ArgOccur::Once, ArgFlag::None);
-       DeclareArg("funct", VTYPE_Any, ArgOccur::Once, ArgFlag::None);
-       DeclareArg("id", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
-       DeclareArg("lastId", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
-       AddHelp(
-               Gurax_Symbol(en),
-               "");
-}
-
-Gurax_ImplementMethod(wxEvtHandler, Bind)
-{
-       // Target
-       auto& valueThis = GetValueThis(argument);
-       auto pEntity = valueThis.GetEntityPtr();
-       if (!pEntity) return Value::nil();
-       // Arguments
-       ArgPicker args(argument);
-       Value_wxEventType& valueEventType = args.Pick<Value_wxEventType>();
-       wxEventType eventType = valueEventType.GetEntity();
-       const EventValueFactory& eventValueFactory = valueEventType.GetEventValueFactory();
-       Value& valueFunct = args.PickValue();
-       int id = args.IsValid()? args.PickNumber<int>() : wxID_ANY;
-       int lastId = args.IsValid()? args.PickNumber<int>() : wxID_ANY;
-       RefPtr<Value> pValueUserData(args.IsValid()? args.PickValue().Reference() : Value::nil());
-       // Function body
-       pEntity->Bind(eventType, &EventUserData::HandlerFunc, id, lastId,
-               new EventUserData(processor.Reference(), valueFunct.Reference(), pValueUserData.release(), eventValueFactory));
-       return Value::nil();
-}
