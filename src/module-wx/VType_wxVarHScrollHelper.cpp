//==============================================================================
// VType_wxVarHScrollHelper.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"""(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.VarHScrollHelper, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.VarHScrollHelper, `en)}

${help.ComposeMethodHelp(wx.VarHScrollHelper, `en)}
)""";

static const char* g_docHelp_ja = u8R"""(
# 概要

# 定数

${help.ComposePropertyHelp(wx.VarHScrollHelper, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.VarHScrollHelper, `ja)}

${help.ComposeMethodHelp(wx.VarHScrollHelper, `ja)}
)""";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.VarHScrollHelper#GetColumnCount()
Gurax_DeclareMethodAlias(wxVarHScrollHelper, GetColumnCount_gurax, "GetColumnCount")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, GetColumnCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	size_t rtn = pEntity_gurax->GetColumnCount();
	return new Gurax::Value_Number(rtn);
}

// wx.VarHScrollHelper#GetVisibleColumnsBegin()
Gurax_DeclareMethodAlias(wxVarHScrollHelper, GetVisibleColumnsBegin_gurax, "GetVisibleColumnsBegin")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, GetVisibleColumnsBegin_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	size_t rtn = pEntity_gurax->GetVisibleColumnsBegin();
	return new Gurax::Value_Number(rtn);
}

// wx.VarHScrollHelper#GetVisibleColumnsEnd()
Gurax_DeclareMethodAlias(wxVarHScrollHelper, GetVisibleColumnsEnd_gurax, "GetVisibleColumnsEnd")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, GetVisibleColumnsEnd_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	size_t rtn = pEntity_gurax->GetVisibleColumnsEnd();
	return new Gurax::Value_Number(rtn);
}

// wx.VarHScrollHelper#IsColumnVisible(column as Number)
Gurax_DeclareMethodAlias(wxVarHScrollHelper, IsColumnVisible_gurax, "IsColumnVisible")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("column", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, IsColumnVisible_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t column = args_gurax.PickNumber<size_t>();
	// Function body
	bool rtn = pEntity_gurax->IsColumnVisible(column);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHScrollHelper#RefreshColumn(column as Number)
Gurax_DeclareMethodAlias(wxVarHScrollHelper, RefreshColumn_gurax, "RefreshColumn")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("column", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, RefreshColumn_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t column = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->RefreshColumn(column);
	return Gurax::Value::nil();
}

// wx.VarHScrollHelper#RefreshColumns(from as Number, to as Number)
Gurax_DeclareMethodAlias(wxVarHScrollHelper, RefreshColumns_gurax, "RefreshColumns")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, RefreshColumns_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t from = args_gurax.PickNumber<size_t>();
	size_t to = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->RefreshColumns(from, to);
	return Gurax::Value::nil();
}

// wx.VarHScrollHelper#ScrollColumnPages(pages as Number)
Gurax_DeclareMethodAlias(wxVarHScrollHelper, ScrollColumnPages_gurax, "ScrollColumnPages")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("pages", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, ScrollColumnPages_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int pages = args_gurax.PickNumber<int>();
	// Function body
	bool rtn = pEntity_gurax->ScrollColumnPages(pages);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHScrollHelper#ScrollColumns(columns as Number)
Gurax_DeclareMethodAlias(wxVarHScrollHelper, ScrollColumns_gurax, "ScrollColumns")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("columns", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, ScrollColumns_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int columns = args_gurax.PickNumber<int>();
	// Function body
	bool rtn = pEntity_gurax->ScrollColumns(columns);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHScrollHelper#ScrollToColumn(column as Number)
Gurax_DeclareMethodAlias(wxVarHScrollHelper, ScrollToColumn_gurax, "ScrollToColumn")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("column", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, ScrollToColumn_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t column = args_gurax.PickNumber<size_t>();
	// Function body
	bool rtn = pEntity_gurax->ScrollToColumn(column);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHScrollHelper#SetColumnCount(columnCount as Number)
Gurax_DeclareMethodAlias(wxVarHScrollHelper, SetColumnCount_gurax, "SetColumnCount")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("columnCount", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHScrollHelper, SetColumnCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t columnCount = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->SetColumnCount(columnCount);
	return Gurax::Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxVarHScrollHelper
//------------------------------------------------------------------------------
VType_wxVarHScrollHelper VTYPE_wxVarHScrollHelper("VarHScrollHelper");

void VType_wxVarHScrollHelper::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_Object, Flag::Mutable);
	// Assignment of method
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, GetColumnCount_gurax));
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, GetVisibleColumnsBegin_gurax));
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, GetVisibleColumnsEnd_gurax));
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, IsColumnVisible_gurax));
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, RefreshColumn_gurax));
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, RefreshColumns_gurax));
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, ScrollColumnPages_gurax));
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, ScrollColumns_gurax));
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, ScrollToColumn_gurax));
	Assign(Gurax_CreateMethod(wxVarHScrollHelper, SetColumnCount_gurax));
}

//------------------------------------------------------------------------------
// Value_wxVarHScrollHelper
//------------------------------------------------------------------------------
VType& Value_wxVarHScrollHelper::vtype = VTYPE_wxVarHScrollHelper;

String Value_wxVarHScrollHelper::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.VarHScrollHelper");
}

Gurax_EndModuleScope(wx)
