//==============================================================================
// VType_wxBitmapButton.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.BitmapButton, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.BitmapButton, `en)}

${help.ComposeMethodHelp(wx.BitmapButton, `en)}
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.BitmapButton(parent as wx.Window, id as Number, bitmap as wx.Bitmap, pos? as wx.Point, size? as wx.Size, style? as Number, validator? as wx.Validator, name? as String) {block?}
Gurax_DeclareConstructorAlias(BitmapButton_gurax, "BitmapButton")
{
	Declare(VTYPE_wxBitmapButton, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("id", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("bitmap", VTYPE_wxBitmap, ArgOccur::Once, ArgFlag::None);
	DeclareArg("pos", VTYPE_wxPoint, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("style", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("validator", VTYPE_wxValidator, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("name", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"Creates an instance of wx.BitmapButton.");
}

Gurax_ImplementConstructorEx(BitmapButton_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	wxWindowID id = args_gurax.PickNumber<wxWindowID>();
	Value_wxBitmap& value_bitmap = args_gurax.Pick<Value_wxBitmap>();
	const wxBitmap& bitmap = value_bitmap.GetEntity();
	const wxPoint& pos = args_gurax.IsValid()? args_gurax.Pick<Value_wxPoint>().GetEntity() : wxDefaultPosition;
	const wxSize& size = args_gurax.IsValid()? args_gurax.Pick<Value_wxSize>().GetEntity() : wxDefaultSize;
	bool style_validFlag = args_gurax.IsValid();
	long style = style_validFlag? args_gurax.PickNumber<long>() : wxBU_AUTODRAW;
	const wxValidator& validator = args_gurax.IsValid()? args_gurax.Pick<Value_wxValidator>().GetEntity() : wxDefaultValidator;
	const char* name = args_gurax.IsValid()? args_gurax.PickString() : wxButtonNameStr;
	// Function body
	auto pEntity_gurax = new Value_wxBitmapButton::EntityT(parent, id, bitmap, pos, size, style, validator, name);
	RefPtr<Value_wxBitmapButton> pValue_gurax(new Value_wxBitmapButton(pEntity_gurax));
	pEntity_gurax->core_gurax.SetInfo(processor_gurax.Reference(), *pValue_gurax);
	return argument_gurax.ReturnValue(processor_gurax, pValue_gurax.release());
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.BitmapButton.NewCloseButton(parent as wx.Window, winid as Number) {block?}
Gurax_DeclareClassMethodAlias(wxBitmapButton, NewCloseButton_gurax, "NewCloseButton")
{
	Declare(VTYPE_wxBitmapButton, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("winid", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementClassMethodEx(wxBitmapButton, NewCloseButton_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	wxWindowID winid = args_gurax.PickNumber<wxWindowID>();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxBitmapButton(
		wxBitmapButton::NewCloseButton(parent, winid)));
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxBitmapButton
//------------------------------------------------------------------------------
VType_wxBitmapButton VTYPE_wxBitmapButton("BitmapButton");

void VType_wxBitmapButton::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	// Declaration of VType
	Declare(VTYPE_wxButton, Flag::Mutable, Gurax_CreateConstructor(BitmapButton_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxBitmapButton, NewCloseButton_gurax));
}

//------------------------------------------------------------------------------
// Value_wxBitmapButton
//------------------------------------------------------------------------------
VType& Value_wxBitmapButton::vtype = VTYPE_wxBitmapButton;

String Value_wxBitmapButton::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.BitmapButton");
}

//------------------------------------------------------------------------------
// Value_wxBitmapButton::EntityT
//------------------------------------------------------------------------------

Gurax_EndModuleScope(wx)
