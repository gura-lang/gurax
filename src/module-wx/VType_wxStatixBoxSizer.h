//==============================================================================
// VType_wxStatixBoxSizer.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXSTATIXBOXSIZER_H
#define GURAX_MODULE_WX_VTYPE_WXSTATIXBOXSIZER_H
#include <gurax.h>
#include <wx/wx.h>
#include "Util.h"
#include "VType_wxBoxSizer.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxStatixBoxSizer
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxStatixBoxSizer : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxStatixBoxSizer VTYPE_wxStatixBoxSizer;

//------------------------------------------------------------------------------
// Value_wxStatixBoxSizer
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxStatixBoxSizer : public Value_wxBoxSizer {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxStatixBoxSizer);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxStatixBoxSizer");
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxStatixBoxSizer() = delete;
	explicit Value_wxStatixBoxSizer(const wxObject& entity, VType& vtype = VTYPE_wxStatixBoxSizer) :
		Value_wxBoxSizer(entity, vtype) {}
	// Copy constructor/operator
	Value_wxStatixBoxSizer(const Value_wxStatixBoxSizer& src) = delete;
	Value_wxStatixBoxSizer& operator=(const Value_wxStatixBoxSizer& src) = delete;
	// Move constructor/operator
	Value_wxStatixBoxSizer(Value_wxStatixBoxSizer&& src) noexcept = delete;
	Value_wxStatixBoxSizer& operator=(Value_wxStatixBoxSizer&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxStatixBoxSizer() = default;
public:
	wxStatixBoxSizer& GetEntity() {
		return reinterpret_cast<wxStatixBoxSizer&>(Value_wxObject::GetEntity());
	}
	const wxStatixBoxSizer& GetEntity() const {
		return reinterpret_cast<const wxStatixBoxSizer&>(Value_wxObject::GetEntity());
	}
	wxStatixBoxSizer* GetEntityPtr() {
		return reinterpret_cast<wxStatixBoxSizer*>(Value_wxObject::GetEntityPtr());
	}
	const wxStatixBoxSizer* GetEntityPtr() const {
		return reinterpret_cast<const wxStatixBoxSizer*>(Value_wxObject::GetEntityPtr());
	}
public:
	static wxStatixBoxSizer& GetEntity(Value& value) {
		return dynamic_cast<Value_wxStatixBoxSizer&>(value).GetEntity();
	}
	static const wxStatixBoxSizer& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxStatixBoxSizer&>(value).GetEntity();
	}
	static wxStatixBoxSizer* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxStatixBoxSizer&>(value).GetEntityPtr();
	}
	static const wxStatixBoxSizer* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxStatixBoxSizer&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
