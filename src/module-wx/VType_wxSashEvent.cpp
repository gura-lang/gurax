//==============================================================================
// VType_wxSashEvent.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"""(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.SashEvent, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.SashEvent, `en)}

${help.ComposeMethodHelp(wx.SashEvent, `en)}
)""";

static const char* g_docHelp_ja = u8R"""(
# 概要

# 定数

${help.ComposePropertyHelp(wx.SashEvent, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.SashEvent, `ja)}

${help.ComposeMethodHelp(wx.SashEvent, `ja)}
)""";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.SashEvent#GetDragRect() {block?}
Gurax_DeclareMethodAlias(wxSashEvent, GetDragRect_gurax, "GetDragRect")
{
	Declare(VTYPE_wxRect, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxSashEvent, GetDragRect_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxRect(
		pEntity_gurax->GetDragRect()));
}

// wx.SashEvent#GetDragStatus()
Gurax_DeclareMethodAlias(wxSashEvent, GetDragStatus_gurax, "GetDragStatus")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxSashEvent, GetDragStatus_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxSashDragStatus rtn = pEntity_gurax->GetDragStatus();
	return new Gurax::Value_Number(rtn);
}

// wx.SashEvent#GetEdge()
Gurax_DeclareMethodAlias(wxSashEvent, GetEdge_gurax, "GetEdge")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxSashEvent, GetEdge_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxSashEdgePosition rtn = pEntity_gurax->GetEdge();
	return new Gurax::Value_Number(rtn);
}

// wx.SashEvent#SetEdge(edge as Number)
Gurax_DeclareMethodAlias(wxSashEvent, SetEdge_gurax, "SetEdge")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("edge", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxSashEvent, SetEdge_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	wxSashEdgePosition edge = args_gurax.PickNumber<wxSashEdgePosition>();
	// Function body
	pEntity_gurax->SetEdge(edge);
	return Gurax::Value::nil();
}

// wx.SashEvent#SetDragRect(rect as wx.Rect)
Gurax_DeclareMethodAlias(wxSashEvent, SetDragRect_gurax, "SetDragRect")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("rect", VTYPE_wxRect, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxSashEvent, SetDragRect_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxRect& value_rect = args_gurax.Pick<Value_wxRect>();
	const wxRect& rect = value_rect.GetEntity();
	// Function body
	pEntity_gurax->SetDragRect(rect);
	return Gurax::Value::nil();
}

// wx.SashEvent#SetDragStatus(status as Number)
Gurax_DeclareMethodAlias(wxSashEvent, SetDragStatus_gurax, "SetDragStatus")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("status", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxSashEvent, SetDragStatus_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	wxSashDragStatus status = args_gurax.PickNumber<wxSashDragStatus>();
	// Function body
	pEntity_gurax->SetDragStatus(status);
	return Gurax::Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxSashEvent
//------------------------------------------------------------------------------
VType_wxSashEvent VTYPE_wxSashEvent("SashEvent");

void VType_wxSashEvent::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_wxCommandEvent, Flag::Mutable);
	// Assignment of method
	Assign(Gurax_CreateMethod(wxSashEvent, GetDragRect_gurax));
	Assign(Gurax_CreateMethod(wxSashEvent, GetDragStatus_gurax));
	Assign(Gurax_CreateMethod(wxSashEvent, GetEdge_gurax));
	Assign(Gurax_CreateMethod(wxSashEvent, SetEdge_gurax));
	Assign(Gurax_CreateMethod(wxSashEvent, SetDragRect_gurax));
	Assign(Gurax_CreateMethod(wxSashEvent, SetDragStatus_gurax));
}

//------------------------------------------------------------------------------
// Value_wxSashEvent
//------------------------------------------------------------------------------
VType& Value_wxSashEvent::vtype = VTYPE_wxSashEvent;
EventValueFactoryDeriv<Value_wxSashEvent> Value_wxSashEvent::eventValueFactory;

String Value_wxSashEvent::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.SashEvent");
}

Gurax_EndModuleScope(wx)
