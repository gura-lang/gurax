//==============================================================================
// VType_wxGraphicsPath.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

# Property

# Operator

# Cast Operation

# Constructor

# Method
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.GraphicsPath#AddArcToPoint(x1 as Number, y1 as Number, x2 as Number, y2 as Number, r as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddArcToPoint_gurax, "AddArcToPoint")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("x1", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y1", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("x2", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y2", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("r", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddArcToPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x1 = args_gurax.PickNumber<Double>();
	Double y1 = args_gurax.PickNumber<Double>();
	Double x2 = args_gurax.PickNumber<Double>();
	Double y2 = args_gurax.PickNumber<Double>();
	Double r = args_gurax.PickNumber<Double>();
	// Function body
	pEntity_gurax->AddArcToPoint(x1, y1, x2, y2, r);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddCircle(x as Number, y as Number, r as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddCircle_gurax, "AddCircle")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("r", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddCircle_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	Double r = args_gurax.PickNumber<Double>();
	// Function body
	pEntity_gurax->AddCircle(x, y, r);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddCurveToPoint(cx1 as Number, cy1 as Number, cx2 as Number, cy2 as Number, x as Number, y as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddCurveToPoint_gurax, "AddCurveToPoint")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("cx1", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("cy1", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("cx2", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("cy2", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddCurveToPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double cx1 = args_gurax.PickNumber<Double>();
	Double cy1 = args_gurax.PickNumber<Double>();
	Double cx2 = args_gurax.PickNumber<Double>();
	Double cy2 = args_gurax.PickNumber<Double>();
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	// Function body
	pEntity_gurax->AddCurveToPoint(cx1, cy1, cx2, cy2, x, y);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddCurveToPoint2D(c1 as wx.Point2DDouble, c2 as wx.Point2DDouble, e as wx.Point2DDouble)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddCurveToPoint2D_gurax, "AddCurveToPoint2D")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("c1", VTYPE_wxPoint2DDouble, ArgOccur::Once, ArgFlag::None);
	DeclareArg("c2", VTYPE_wxPoint2DDouble, ArgOccur::Once, ArgFlag::None);
	DeclareArg("e", VTYPE_wxPoint2DDouble, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddCurveToPoint2D_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxPoint2DDouble& value_c1 = args_gurax.Pick<Value_wxPoint2DDouble>();
	const wxPoint2DDouble& c1 = value_c1.GetEntity();
	Value_wxPoint2DDouble& value_c2 = args_gurax.Pick<Value_wxPoint2DDouble>();
	const wxPoint2DDouble& c2 = value_c2.GetEntity();
	Value_wxPoint2DDouble& value_e = args_gurax.Pick<Value_wxPoint2DDouble>();
	const wxPoint2DDouble& e = value_e.GetEntity();
	// Function body
	pEntity_gurax->AddCurveToPoint(c1, c2, e);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddEllipse(x as Number, y as Number, w as Number, h as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddEllipse_gurax, "AddEllipse")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("w", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("h", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddEllipse_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	Double w = args_gurax.PickNumber<Double>();
	Double h = args_gurax.PickNumber<Double>();
	// Function body
	pEntity_gurax->AddEllipse(x, y, w, h);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddLineToPoint(x as Number, y as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddLineToPoint_gurax, "AddLineToPoint")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddLineToPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	// Function body
	pEntity_gurax->AddLineToPoint(x, y);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddLineToPoint2D(p as wx.Point2DDouble)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddLineToPoint2D_gurax, "AddLineToPoint2D")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("p", VTYPE_wxPoint2DDouble, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddLineToPoint2D_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxPoint2DDouble& value_p = args_gurax.Pick<Value_wxPoint2DDouble>();
	const wxPoint2DDouble& p = value_p.GetEntity();
	// Function body
	pEntity_gurax->AddLineToPoint(p);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddPath(path as wx.GraphicsPath)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddPath_gurax, "AddPath")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("path", VTYPE_wxGraphicsPath, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddPath_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxGraphicsPath& value_path = args_gurax.Pick<Value_wxGraphicsPath>();
	const wxGraphicsPath& path = value_path.GetEntity();
	// Function body
	pEntity_gurax->AddPath(path);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddQuadCurveToPoint(cx as Number, cy as Number, x as Number, y as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddQuadCurveToPoint_gurax, "AddQuadCurveToPoint")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("cx", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("cy", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddQuadCurveToPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double cx = args_gurax.PickNumber<Double>();
	Double cy = args_gurax.PickNumber<Double>();
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	// Function body
	pEntity_gurax->AddQuadCurveToPoint(cx, cy, x, y);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddRectangle(x as Number, y as Number, w as Number, h as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddRectangle_gurax, "AddRectangle")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("w", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("h", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddRectangle_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	Double w = args_gurax.PickNumber<Double>();
	Double h = args_gurax.PickNumber<Double>();
	// Function body
	pEntity_gurax->AddRectangle(x, y, w, h);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddRoundedRectangle(x as Number, y as Number, w as Number, h as Number, radius as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddRoundedRectangle_gurax, "AddRoundedRectangle")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("w", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("h", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("radius", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddRoundedRectangle_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	Double w = args_gurax.PickNumber<Double>();
	Double h = args_gurax.PickNumber<Double>();
	Double radius = args_gurax.PickNumber<Double>();
	// Function body
	pEntity_gurax->AddRoundedRectangle(x, y, w, h, radius);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#CloseSubpath()
Gurax_DeclareMethodAlias(wxGraphicsPath, CloseSubpath_gurax, "CloseSubpath")
{
	Declare(VTYPE_Nil, Flag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, CloseSubpath_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->CloseSubpath();
	return Gurax::Value::nil();
}

// wx.GraphicsPath#Contains(x as Number, y as Number, fillStyle? as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, Contains_gurax, "Contains")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("fillStyle", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, Contains_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	bool fillStyle_validFlag = args_gurax.IsValid();
	wxPolygonFillMode fillStyle = fillStyle_validFlag? args_gurax.PickNumber<wxPolygonFillMode>() : wxODDEVEN_RULE;
	// Function body
	bool rtn = pEntity_gurax->Contains(x, y, fillStyle);
	return new Gurax::Value_Bool(rtn);
}

// wx.GraphicsPath#ContainsPoint2D(c as wx.Point2DDouble, fillStyle? as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, ContainsPoint2D_gurax, "ContainsPoint2D")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("c", VTYPE_wxPoint2DDouble, ArgOccur::Once, ArgFlag::None);
	DeclareArg("fillStyle", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, ContainsPoint2D_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxPoint2DDouble& value_c = args_gurax.Pick<Value_wxPoint2DDouble>();
	const wxPoint2DDouble& c = value_c.GetEntity();
	bool fillStyle_validFlag = args_gurax.IsValid();
	wxPolygonFillMode fillStyle = fillStyle_validFlag? args_gurax.PickNumber<wxPolygonFillMode>() : wxODDEVEN_RULE;
	// Function body
	bool rtn = pEntity_gurax->Contains(c, fillStyle);
	return new Gurax::Value_Bool(rtn);
}

// wx.GraphicsPath#GetBoxRect2D() {block?}
Gurax_DeclareMethodAlias(wxGraphicsPath, GetBoxRect2D_gurax, "GetBoxRect2D")
{
	Declare(VTYPE_wxRect2DDouble, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, GetBoxRect2D_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxRect2DDouble(
		pEntity_gurax->GetBox()));
}

// wx.GraphicsPath#GetBox()
Gurax_DeclareMethodAlias(wxGraphicsPath, GetBox_gurax, "GetBox")
{
	Declare(VTYPE_Tuple, Flag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, GetBox_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxDouble x, y, w, h;
	pEntity_gurax->GetBox(&x, &y, &w, &h);
	return Value_Tuple::Create(new Value_Number(x), new Value_Number(y), new Value_Number(w), new Value_Number(h));
}

// wx.GraphicsPath#GetCurrentPoint()
Gurax_DeclareMethodAlias(wxGraphicsPath, GetCurrentPoint_gurax, "GetCurrentPoint")
{
	Declare(VTYPE_Tuple, Flag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, GetCurrentPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxDouble x, y;
	pEntity_gurax->GetCurrentPoint(&x, &y);
	return Value_Tuple::Create(new Value_Number(x), new Value_Number(y));
}

// wx.GraphicsPath#GetCurrentPoint2D() {block?}
Gurax_DeclareMethodAlias(wxGraphicsPath, GetCurrentPoint2D_gurax, "GetCurrentPoint2D")
{
	Declare(VTYPE_wxPoint2DDouble, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, GetCurrentPoint2D_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxPoint2DDouble(
		pEntity_gurax->GetCurrentPoint()));
}

// wx.GraphicsPath#MoveToPoint(x as Number, y as Number)
Gurax_DeclareMethodAlias(wxGraphicsPath, MoveToPoint_gurax, "MoveToPoint")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, MoveToPoint_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	// Function body
	pEntity_gurax->MoveToPoint(x, y);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#MoveToPoint2D(p as wx.Point2DDouble)
Gurax_DeclareMethodAlias(wxGraphicsPath, MoveToPoint2D_gurax, "MoveToPoint2D")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("p", VTYPE_wxPoint2DDouble, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, MoveToPoint2D_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxPoint2DDouble& value_p = args_gurax.Pick<Value_wxPoint2DDouble>();
	const wxPoint2DDouble& p = value_p.GetEntity();
	// Function body
	pEntity_gurax->MoveToPoint(p);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#Transform(matrix as wx.GraphicsMatrix)
Gurax_DeclareMethodAlias(wxGraphicsPath, Transform_gurax, "Transform")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("matrix", VTYPE_wxGraphicsMatrix, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, Transform_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxGraphicsMatrix& value_matrix = args_gurax.Pick<Value_wxGraphicsMatrix>();
	const wxGraphicsMatrix& matrix = value_matrix.GetEntity();
	// Function body
	pEntity_gurax->Transform(matrix);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#UnGetNativePath(p as Pointer)
Gurax_DeclareMethodAlias(wxGraphicsPath, UnGetNativePath_gurax, "UnGetNativePath")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("p", VTYPE_Pointer, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, UnGetNativePath_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	void* p = args_gurax.Pick<Gurax::Value_Pointer>().GetPointer().GetWritablePointerC<void>();
	if (!p) {
		Error::Issue(ErrorType::MemoryError, "the pointer is not writable");
		return Value::nil();
	}
	// Function body
	pEntity_gurax->UnGetNativePath(p);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddArc(x as Number, y as Number, r as Number, startAngle as Number, endAngle as Number, clockwise as Bool)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddArc_gurax, "AddArc")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("r", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("startAngle", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("endAngle", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("clockwise", VTYPE_Bool, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddArc_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Double x = args_gurax.PickNumber<Double>();
	Double y = args_gurax.PickNumber<Double>();
	Double r = args_gurax.PickNumber<Double>();
	Double startAngle = args_gurax.PickNumber<Double>();
	Double endAngle = args_gurax.PickNumber<Double>();
	bool clockwise = args_gurax.PickBool();
	// Function body
	pEntity_gurax->AddArc(x, y, r, startAngle, endAngle, clockwise);
	return Gurax::Value::nil();
}

// wx.GraphicsPath#AddArcPoint2D(c as wx.Point2DDouble, r as Number, startAngle as Number, endAngle as Number, clockwise as Bool)
Gurax_DeclareMethodAlias(wxGraphicsPath, AddArcPoint2D_gurax, "AddArcPoint2D")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("c", VTYPE_wxPoint2DDouble, ArgOccur::Once, ArgFlag::None);
	DeclareArg("r", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("startAngle", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("endAngle", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("clockwise", VTYPE_Bool, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxGraphicsPath, AddArcPoint2D_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxPoint2DDouble& value_c = args_gurax.Pick<Value_wxPoint2DDouble>();
	const wxPoint2DDouble& c = value_c.GetEntity();
	Double r = args_gurax.PickNumber<Double>();
	Double startAngle = args_gurax.PickNumber<Double>();
	Double endAngle = args_gurax.PickNumber<Double>();
	bool clockwise = args_gurax.PickBool();
	// Function body
	pEntity_gurax->AddArc(c, r, startAngle, endAngle, clockwise);
	return Gurax::Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxGraphicsPath
//------------------------------------------------------------------------------
VType_wxGraphicsPath VTYPE_wxGraphicsPath("GraphicsPath");

void VType_wxGraphicsPath::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelpTmpl(Gurax_Symbol(en), g_docHelp_en);
	// Declaration of VType
	Declare(VTYPE_wxGraphicsObject, Flag::Mutable);
	// Assignment of method
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddArcToPoint_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddCircle_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddCurveToPoint_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddCurveToPoint2D_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddEllipse_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddLineToPoint_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddLineToPoint2D_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddPath_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddQuadCurveToPoint_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddRectangle_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddRoundedRectangle_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, CloseSubpath_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, Contains_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, ContainsPoint2D_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, GetBoxRect2D_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, GetBox_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, GetCurrentPoint_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, GetCurrentPoint2D_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, MoveToPoint_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, MoveToPoint2D_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, Transform_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, UnGetNativePath_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddArc_gurax));
	Assign(Gurax_CreateMethod(wxGraphicsPath, AddArcPoint2D_gurax));
}

//------------------------------------------------------------------------------
// Value_wxGraphicsPath
//------------------------------------------------------------------------------
VType& Value_wxGraphicsPath::vtype = VTYPE_wxGraphicsPath;

String Value_wxGraphicsPath::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.GraphicsPath");
}

Gurax_EndModuleScope(wx)
