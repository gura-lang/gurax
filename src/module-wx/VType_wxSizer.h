//==============================================================================
// VType_wxSizer.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXSIZER_H
#define GURAX_MODULE_WX_VTYPE_WXSIZER_H
#include <gurax.h>
#include <wx/wx.h>
#include "Util.h"
#include "VType_wxObject.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxSizer
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxSizer : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxSizer VTYPE_wxSizer;

//------------------------------------------------------------------------------
// Value_wxSizer
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxSizer : public Value_wxObject {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxSizer);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxSizer");
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxSizer() = delete;
	explicit Value_wxSizer(const wxObject& entity, VType& vtype = VTYPE_wxSizer) :
		Value_wxObject(entity, vtype) {}
	// Copy constructor/operator
	Value_wxSizer(const Value_wxSizer& src) = delete;
	Value_wxSizer& operator=(const Value_wxSizer& src) = delete;
	// Move constructor/operator
	Value_wxSizer(Value_wxSizer&& src) noexcept = delete;
	Value_wxSizer& operator=(Value_wxSizer&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxSizer() = default;
public:
	wxSizer& GetEntity() {
		return reinterpret_cast<wxSizer&>(Value_wxObject::GetEntity());
	}
	const wxSizer& GetEntity() const {
		return reinterpret_cast<const wxSizer&>(Value_wxObject::GetEntity());
	}
	wxSizer* GetEntityPtr() {
		return reinterpret_cast<wxSizer*>(Value_wxObject::GetEntityPtr());
	}
	const wxSizer* GetEntityPtr() const {
		return reinterpret_cast<const wxSizer*>(Value_wxObject::GetEntityPtr());
	}
public:
	static wxSizer& GetEntity(Value& value) {
		return dynamic_cast<Value_wxSizer&>(value).GetEntity();
	}
	static const wxSizer& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxSizer&>(value).GetEntity();
	}
	static wxSizer* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxSizer&>(value).GetEntityPtr();
	}
	static const wxSizer* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxSizer&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
