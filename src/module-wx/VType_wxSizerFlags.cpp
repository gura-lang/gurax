//==============================================================================
// VType_wxSizerFlags.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

# Property

# Operator

# Cast Operation

# Constructor

# Method
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.SizerFlags(proportion? as Number) {block?}
Gurax_DeclareConstructorAlias(SizerFlags_gurax, "SizerFlags")
{
	Declare(VTYPE_wxSizerFlags, Flag::None);
	DeclareArg("proportion", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"Creates an instance of wx.SizerFlags.");
}

Gurax_ImplementConstructorEx(SizerFlags_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int proportion = args_gurax.IsValid()? args_gurax.PickNumber<int>() : 0;
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxSizerFlags(
		wxSizerFlags(proportion)));
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.SizerFlags#Align(alignment as Number)
Gurax_DeclareMethodAlias(wxSizerFlags, Align_gurax, "Align")
{
	Declare(VTYPE_Any, Flag::None);
	DeclareArg("alignment", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxSizerFlags, Align_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int alignment = args_gurax.PickNumber<int>();
	// Function body
	pEntity_gurax->Align(alignment);
	return valueThis_gurax.Reference();
}

// wx.SizerFlags#Border(direction as Number, borderinpixels as Number)
Gurax_DeclareMethodAlias(wxSizerFlags, Border_gurax, "Border")
{
	Declare(VTYPE_Any, Flag::None);
	DeclareArg("direction", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("borderinpixels", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxSizerFlags, Border_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int direction = args_gurax.PickNumber<int>();
	int borderinpixels = args_gurax.PickNumber<int>();
	// Function body
	pEntity_gurax->Border(direction, borderinpixels);
	return valueThis_gurax.Reference();
}

// wx.SizerFlags#Expand()
Gurax_DeclareMethodAlias(wxSizerFlags, Expand_gurax, "Expand")
{
	Declare(VTYPE_Any, Flag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxSizerFlags, Expand_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Expand();
	return valueThis_gurax.Reference();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxSizerFlags
//------------------------------------------------------------------------------
VType_wxSizerFlags VTYPE_wxSizerFlags("SizerFlags");

void VType_wxSizerFlags::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelpTmpl(Gurax_Symbol(en), g_docHelp_en);
	// Declaration of VType
	Declare(VTYPE_Object, Flag::Mutable, Gurax_CreateConstructor(SizerFlags_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxSizerFlags, Align_gurax));
	Assign(Gurax_CreateMethod(wxSizerFlags, Border_gurax));
	Assign(Gurax_CreateMethod(wxSizerFlags, Expand_gurax));
}

//------------------------------------------------------------------------------
// Value_wxSizerFlags
//------------------------------------------------------------------------------
VType& Value_wxSizerFlags::vtype = VTYPE_wxSizerFlags;

String Value_wxSizerFlags::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.SizerFlags");
}

Gurax_EndModuleScope(wx)
