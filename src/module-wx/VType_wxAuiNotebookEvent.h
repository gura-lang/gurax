//==============================================================================
// VType_wxAuiNotebookEvent.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXAUINOTEBOOKEVENT_H
#define GURAX_MODULE_WX_VTYPE_WXAUINOTEBOOKEVENT_H
#include <gurax.h>
#include <wx/wx.h>
#include <wx/aui/auibook.h>
#include "Util.h"
#include "VType_wxBookCtrlEvent.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxAuiNotebookEvent
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxAuiNotebookEvent : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxAuiNotebookEvent VTYPE_wxAuiNotebookEvent;

//------------------------------------------------------------------------------
// Value_wxAuiNotebookEvent
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxAuiNotebookEvent : public Value_wxBookCtrlEvent {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxAuiNotebookEvent);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxAuiNotebookEvent");
protected:
	wxAuiNotebookEvent& _entity;
public:
	static VType& vtype;
	static EventValueFactoryDeriv<Value_wxAuiNotebookEvent> eventValueFactory;
public:
	// Constructor
	Value_wxAuiNotebookEvent() = delete;
	Value_wxAuiNotebookEvent(wxEvent& entity, Value* pValueUserData, VType& vtype = VTYPE_wxAuiNotebookEvent) :
		Value_wxBookCtrlEvent(entity, pValueUserData, vtype), _entity(dynamic_cast<wxAuiNotebookEvent&>(entity)) {}
	// Copy constructor/operator
	Value_wxAuiNotebookEvent(const Value_wxAuiNotebookEvent& src) = delete;
	Value_wxAuiNotebookEvent& operator=(const Value_wxAuiNotebookEvent& src) = delete;
	// Move constructor/operator
	Value_wxAuiNotebookEvent(Value_wxAuiNotebookEvent&& src) noexcept = delete;
	Value_wxAuiNotebookEvent& operator=(Value_wxAuiNotebookEvent&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxAuiNotebookEvent() = default;
public:
	wxAuiNotebookEvent& GetEntity() { return _entity; }
	const wxAuiNotebookEvent& GetEntity() const { return _entity; }
	wxAuiNotebookEvent* GetEntityPtr() { return &_entity; }
	const wxAuiNotebookEvent* GetEntityPtr() const { return &_entity; }
public:
	static wxAuiNotebookEvent& GetEntity(Value& value) {
		return dynamic_cast<Value_wxAuiNotebookEvent&>(value).GetEntity();
	}
	static const wxAuiNotebookEvent& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxAuiNotebookEvent&>(value).GetEntity();
	}
	static wxAuiNotebookEvent* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxAuiNotebookEvent&>(value).GetEntityPtr();
	}
	static const wxAuiNotebookEvent* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxAuiNotebookEvent&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
