//==============================================================================
// VType_wxPaletteChangedEvent.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

# Property

# Operator

# Cast Operation

# Constructor

# Method
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.PaletteChangedEvent#SetChangedWindow(win as wx.Window)
Gurax_DeclareMethodAlias(wxPaletteChangedEvent, SetChangedWindow_gurax, "SetChangedWindow")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("win", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxPaletteChangedEvent, SetChangedWindow_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_win = args_gurax.Pick<Value_wxWindow>();
	wxWindow* win = value_win.GetEntityPtr();
	// Function body
	pEntity_gurax->SetChangedWindow(win);
	return Gurax::Value::nil();
}

// wx.PaletteChangedEvent#GetChangedWindow() {block?}
Gurax_DeclareMethodAlias(wxPaletteChangedEvent, GetChangedWindow_gurax, "GetChangedWindow")
{
	Declare(VTYPE_wxWindow, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxPaletteChangedEvent, GetChangedWindow_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxWindow(
		pEntity_gurax->GetChangedWindow()));
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxPaletteChangedEvent
//------------------------------------------------------------------------------
VType_wxPaletteChangedEvent VTYPE_wxPaletteChangedEvent("PaletteChangedEvent");

void VType_wxPaletteChangedEvent::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	// Declaration of VType
	Declare(VTYPE_wxEvent, Flag::Mutable);
	// Assignment of method
	Assign(Gurax_CreateMethod(wxPaletteChangedEvent, SetChangedWindow_gurax));
	Assign(Gurax_CreateMethod(wxPaletteChangedEvent, GetChangedWindow_gurax));
}

//------------------------------------------------------------------------------
// Value_wxPaletteChangedEvent
//------------------------------------------------------------------------------
VType& Value_wxPaletteChangedEvent::vtype = VTYPE_wxPaletteChangedEvent;
EventValueFactoryDeriv<Value_wxPaletteChangedEvent> Value_wxPaletteChangedEvent::eventValueFactory;

String Value_wxPaletteChangedEvent::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.PaletteChangedEvent");
}

Gurax_EndModuleScope(wx)
