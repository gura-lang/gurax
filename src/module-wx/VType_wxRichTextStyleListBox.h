//==============================================================================
// VType_wxRichTextStyleListBox.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXRICHTEXTSTYLELISTBOX_H
#define GURAX_MODULE_WX_VTYPE_WXRICHTEXTSTYLELISTBOX_H
#include <gurax.h>
#include <wx/wx.h>
#include <wx/richtext/richtextstyles.h>
#include "Util.h"
#include "VType_wxHtmlListBox.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxRichTextStyleListBox
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxRichTextStyleListBox : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxRichTextStyleListBox VTYPE_wxRichTextStyleListBox;

//------------------------------------------------------------------------------
// Value_wxRichTextStyleListBox
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxRichTextStyleListBox : public Value_wxHtmlListBox {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxRichTextStyleListBox);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxRichTextStyleListBox");
protected:
	wxWeakRef<wxRichTextStyleListBox> _pEntity;
public:
	class EntityT : public wxRichTextStyleListBox {
	public:
		using wxRichTextStyleListBox::wxRichTextStyleListBox;
	public:
		EntityCore core_gurax;
	};
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxRichTextStyleListBox() = delete;
	explicit Value_wxRichTextStyleListBox(wxRichTextStyleListBox* pEntity, VType& vtype = VTYPE_wxRichTextStyleListBox) :
		Value_wxHtmlListBox(pEntity, vtype), _pEntity(pEntity) {}
	// Copy constructor/operator
	Value_wxRichTextStyleListBox(const Value_wxRichTextStyleListBox& src) = delete;
	Value_wxRichTextStyleListBox& operator=(const Value_wxRichTextStyleListBox& src) = delete;
	// Move constructor/operator
	Value_wxRichTextStyleListBox(Value_wxRichTextStyleListBox&& src) noexcept = delete;
	Value_wxRichTextStyleListBox& operator=(Value_wxRichTextStyleListBox&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxRichTextStyleListBox() = default;
public:
	wxRichTextStyleListBox& GetEntity() { return *_pEntity; }
	const wxRichTextStyleListBox& GetEntity() const { return *_pEntity; }
	wxRichTextStyleListBox* GetEntityPtr() { return _pEntity.get(); }
	const wxRichTextStyleListBox* GetEntityPtr() const { return _pEntity.get(); }
public:
	static wxRichTextStyleListBox& GetEntity(Value& value) {
		return dynamic_cast<Value_wxRichTextStyleListBox&>(value).GetEntity();
	}
	static const wxRichTextStyleListBox& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxRichTextStyleListBox&>(value).GetEntity();
	}
	static wxRichTextStyleListBox* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxRichTextStyleListBox&>(value).GetEntityPtr();
	}
	static const wxRichTextStyleListBox* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxRichTextStyleListBox&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
