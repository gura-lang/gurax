//==============================================================================
// VType_wxGraphicsObject.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXGRAPHICSOBJECT_H
#define GURAX_MODULE_WX_VTYPE_WXGRAPHICSOBJECT_H
#include <gurax.h>
#include <wx/wx.h>
#include <wx/graphics.h>
#include "Util.h"
#include "VType_wxObject.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxGraphicsObject
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxGraphicsObject : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxGraphicsObject VTYPE_wxGraphicsObject;

//------------------------------------------------------------------------------
// Value_wxGraphicsObject
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxGraphicsObject : public Value_wxObject {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxGraphicsObject);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxGraphicsObject");
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxGraphicsObject() = delete;
	explicit Value_wxGraphicsObject(const wxObject& entity, VType& vtype = VTYPE_wxGraphicsObject) :
		Value_wxObject(entity, vtype) {}
	// Copy constructor/operator
	Value_wxGraphicsObject(const Value_wxGraphicsObject& src) = delete;
	Value_wxGraphicsObject& operator=(const Value_wxGraphicsObject& src) = delete;
	// Move constructor/operator
	Value_wxGraphicsObject(Value_wxGraphicsObject&& src) noexcept = delete;
	Value_wxGraphicsObject& operator=(Value_wxGraphicsObject&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxGraphicsObject() = default;
public:
	wxGraphicsObject& GetEntity() {
		return reinterpret_cast<wxGraphicsObject&>(Value_wxObject::GetEntity());
	}
	const wxGraphicsObject& GetEntity() const {
		return reinterpret_cast<const wxGraphicsObject&>(Value_wxObject::GetEntity());
	}
	wxGraphicsObject* GetEntityPtr() {
		return reinterpret_cast<wxGraphicsObject*>(Value_wxObject::GetEntityPtr());
	}
	const wxGraphicsObject* GetEntityPtr() const {
		return reinterpret_cast<const wxGraphicsObject*>(Value_wxObject::GetEntityPtr());
	}
public:
	static wxGraphicsObject& GetEntity(Value& value) {
		return dynamic_cast<Value_wxGraphicsObject&>(value).GetEntity();
	}
	static const wxGraphicsObject& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxGraphicsObject&>(value).GetEntity();
	}
	static wxGraphicsObject* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxGraphicsObject&>(value).GetEntityPtr();
	}
	static const wxGraphicsObject* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxGraphicsObject&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
