//==============================================================================
// VType_wxDropFilesEvent.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXDROPFILESEVENT_H
#define GURAX_MODULE_WX_VTYPE_WXDROPFILESEVENT_H
#include <gurax.h>
#include <wx/wx.h>
#include "Util.h"
#include "VType_wxEvent.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxDropFilesEvent
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxDropFilesEvent : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxDropFilesEvent VTYPE_wxDropFilesEvent;

//------------------------------------------------------------------------------
// Value_wxDropFilesEvent
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxDropFilesEvent : public Value_wxEvent {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxDropFilesEvent);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxDropFilesEvent");
public:
	static VType& vtype;
	static EventValueFactoryDeriv<Value_wxDropFilesEvent> eventValueFactory;
public:
	// Constructor
	Value_wxDropFilesEvent() = delete;
	Value_wxDropFilesEvent(wxEvent& entity, Value* pValueUserData, VType& vtype = VTYPE_wxDropFilesEvent) :
		Value_wxEvent(entity, pValueUserData, vtype) {}
	// Copy constructor/operator
	Value_wxDropFilesEvent(const Value_wxDropFilesEvent& src) = delete;
	Value_wxDropFilesEvent& operator=(const Value_wxDropFilesEvent& src) = delete;
	// Move constructor/operator
	Value_wxDropFilesEvent(Value_wxDropFilesEvent&& src) noexcept = delete;
	Value_wxDropFilesEvent& operator=(Value_wxDropFilesEvent&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxDropFilesEvent() = default;
public:
	wxDropFilesEvent& GetEntity() { return reinterpret_cast<wxDropFilesEvent&>(Value_wxEvent::GetEntity()); }
	const wxDropFilesEvent& GetEntity() const { return reinterpret_cast<const wxDropFilesEvent&>(Value_wxEvent::GetEntity()); }
	wxDropFilesEvent* GetEntityPtr() { return reinterpret_cast<wxDropFilesEvent*>(Value_wxEvent::GetEntityPtr()); }\
	const wxDropFilesEvent* GetEntityPtr() const { return reinterpret_cast<const wxDropFilesEvent*>(Value_wxEvent::GetEntityPtr()); }
public:
	static wxDropFilesEvent& GetEntity(Value& value) {
		return dynamic_cast<Value_wxDropFilesEvent&>(value).GetEntity();
	}
	static const wxDropFilesEvent& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxDropFilesEvent&>(value).GetEntity();
	}
	static wxDropFilesEvent* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxDropFilesEvent&>(value).GetEntityPtr();
	}
	static const wxDropFilesEvent* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxDropFilesEvent&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
