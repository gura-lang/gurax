//==============================================================================
// VType_wxMetafileDC.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXMETAFILEDC_H
#define GURAX_MODULE_WX_VTYPE_WXMETAFILEDC_H
#include <gurax.h>
#include <wx/wx.h>
#include <wx/metafile.h>
#include "Util.h"
#include "VType_wxDC.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxMetafileDC
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxMetafileDC : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxMetafileDC VTYPE_wxMetafileDC;

//------------------------------------------------------------------------------
// Value_wxMetafileDC
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxMetafileDC : public Value_wxDC {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxMetafileDC);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxMetafileDC");
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxMetafileDC() = delete;
	explicit Value_wxMetafileDC(const wxMetafileDC& entity, VType& vtype = VTYPE_wxMetafileDC) :
		Value_wxDC(entity, vtype) {}
	// Copy constructor/operator
	Value_wxMetafileDC(const Value_wxMetafileDC& src) = delete;
	Value_wxMetafileDC& operator=(const Value_wxMetafileDC& src) = delete;
	// Move constructor/operator
	Value_wxMetafileDC(Value_wxMetafileDC&& src) noexcept = delete;
	Value_wxMetafileDC& operator=(Value_wxMetafileDC&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxMetafileDC() = default;
public:
	wxMetafileDC& GetEntity() {
		return reinterpret_cast<wxMetafileDC&>(Value_wxObject::GetEntity());
	}
	const wxMetafileDC& GetEntity() const {
		return reinterpret_cast<const wxMetafileDC&>(Value_wxObject::GetEntity());
	}
	wxMetafileDC* GetEntityPtr() {
		return reinterpret_cast<wxMetafileDC*>(Value_wxObject::GetEntityPtr());
	}
	const wxMetafileDC* GetEntityPtr() const {
		return reinterpret_cast<const wxMetafileDC*>(Value_wxObject::GetEntityPtr());
	}
public:
	static wxMetafileDC& GetEntity(Value& value) {
		return dynamic_cast<Value_wxMetafileDC&>(value).GetEntity();
	}
	static const wxMetafileDC& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxMetafileDC&>(value).GetEntity();
	}
	static wxMetafileDC* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxMetafileDC&>(value).GetEntityPtr();
	}
	static const wxMetafileDC* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxMetafileDC&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
