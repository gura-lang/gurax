//==============================================================================
// VType_wxCollapsibleHeaderCtrl.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"**(
# Overview

# Predefined Variable

# Property

# Operator

# Cast Operation

# Constructor

# Method
)**";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.CollapsibleHeaderCtrl(parent as wx.Window, id as Number, label as String, pos? as wx.Point, size? as wx.Size, style? as Number, validator? as wx.Validator, name? as String) {block?} {block?}
Gurax_DeclareConstructorAlias(CollapsibleHeaderCtrl_gurax, "CollapsibleHeaderCtrl")
{
	Declare(VTYPE_wxCollapsibleHeaderCtrl, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("id", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("label", VTYPE_String, ArgOccur::Once, ArgFlag::None);
	DeclareArg("pos", VTYPE_wxPoint, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("style", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("validator", VTYPE_wxValidator, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("name", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
	AddHelp(
		Gurax_Symbol(en),
		"Creates an instance of wx.CollapsibleHeaderCtrl.");
}

Gurax_ImplementConstructorEx(CollapsibleHeaderCtrl_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	wxWindowID id = args_gurax.PickNumber<wxWindowID>();
	const char* label = args_gurax.PickString();
	const wxPoint& pos = args_gurax.IsValid()? args_gurax.Pick<Value_wxPoint>().GetEntity() : wxDefaultPosition;
	const wxSize& size = args_gurax.IsValid()? args_gurax.Pick<Value_wxSize>().GetEntity() : wxDefaultSize;
	bool style_validFlag = args_gurax.IsValid();
	long style = style_validFlag? args_gurax.PickNumber<long>() : wxBORDER_NONE;
	const wxValidator& validator = args_gurax.IsValid()? args_gurax.Pick<Value_wxValidator>().GetEntity() : wxDefaultValidator;
	const char* name = args_gurax.IsValid()? args_gurax.PickString() : wxCollapsibleHeaderCtrlNameStr;
	// Function body
	auto pEntity_gurax = new Value_wxCollapsibleHeaderCtrl::EntityT(parent, id, label, pos, size, style, validator, name);
	RefPtr<Value_wxCollapsibleHeaderCtrl> pValue_gurax(new Value_wxCollapsibleHeaderCtrl(pEntity_gurax));
	pEntity_gurax->core_gurax.SetInfo(processor_gurax.Reference(), *pValue_gurax);
	return argument_gurax.ReturnValue(processor_gurax, pValue_gurax.release());
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.CollapsibleHeaderCtrl#SetCollapsed(collapsed? as Bool)
Gurax_DeclareMethodAlias(wxCollapsibleHeaderCtrl, SetCollapsed_gurax, "SetCollapsed")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("collapsed", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxCollapsibleHeaderCtrl, SetCollapsed_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	bool collapsed = args_gurax.IsValid()? args_gurax.PickBool() : true;
	// Function body
	pEntity_gurax->SetCollapsed(collapsed);
	return Gurax::Value::nil();
}

// wx.CollapsibleHeaderCtrl#IsCollapsed()
Gurax_DeclareMethodAlias(wxCollapsibleHeaderCtrl, IsCollapsed_gurax, "IsCollapsed")
{
	Declare(VTYPE_Bool, Flag::None);
	AddHelp(
		Gurax_Symbol(en),
		"");
}

Gurax_ImplementMethodEx(wxCollapsibleHeaderCtrl, IsCollapsed_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsCollapsed();
	return new Gurax::Value_Bool(rtn);
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxCollapsibleHeaderCtrl
//------------------------------------------------------------------------------
VType_wxCollapsibleHeaderCtrl VTYPE_wxCollapsibleHeaderCtrl("CollapsibleHeaderCtrl");

void VType_wxCollapsibleHeaderCtrl::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelpTmpl(Gurax_Symbol(en), g_docHelp_en);
	// Declaration of VType
	Declare(VTYPE_wxControl, Flag::Mutable, Gurax_CreateConstructor(CollapsibleHeaderCtrl_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxCollapsibleHeaderCtrl, SetCollapsed_gurax));
	Assign(Gurax_CreateMethod(wxCollapsibleHeaderCtrl, IsCollapsed_gurax));
}

//------------------------------------------------------------------------------
// Value_wxCollapsibleHeaderCtrl
//------------------------------------------------------------------------------
VType& Value_wxCollapsibleHeaderCtrl::vtype = VTYPE_wxCollapsibleHeaderCtrl;

String Value_wxCollapsibleHeaderCtrl::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.CollapsibleHeaderCtrl");
}

//------------------------------------------------------------------------------
// Value_wxCollapsibleHeaderCtrl::EntityT
//------------------------------------------------------------------------------

Gurax_EndModuleScope(wx)
