//==============================================================================
// VType_wxFileName.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXFILENAME_H
#define GURAX_MODULE_WX_VTYPE_WXFILENAME_H
#include <gurax.h>
#include <wx/wx.h>
#include <wx/filename.h>
#include "Util.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxFileName
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxFileName : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxFileName VTYPE_wxFileName;

//------------------------------------------------------------------------------
// Value_wxFileName
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxFileName : public Value_Object {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxFileName);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxFileName");
protected:
	wxFileName _entity;
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxFileName() = delete;
	explicit Value_wxFileName(const wxFileName& entity, VType& vtype = VTYPE_wxFileName) :
		Value_Object(vtype), _entity(entity) {}
	// Copy constructor/operator
	Value_wxFileName(const Value_wxFileName& src) = delete;
	Value_wxFileName& operator=(const Value_wxFileName& src) = delete;
	// Move constructor/operator
	Value_wxFileName(Value_wxFileName&& src) noexcept = delete;
	Value_wxFileName& operator=(Value_wxFileName&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxFileName() = default;
public:
	wxFileName& GetEntity() { return _entity; }
	const wxFileName& GetEntity() const { return _entity; }
	wxFileName* GetEntityPtr() { return &_entity; }
	const wxFileName* GetEntityPtr() const { return &_entity; }
public:
	static wxFileName& GetEntity(Value& value) {
		return dynamic_cast<Value_wxFileName&>(value).GetEntity();
	}
	static const wxFileName& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxFileName&>(value).GetEntity();
	}
	static wxFileName* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxFileName&>(value).GetEntityPtr();
	}
	static const wxFileName* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxFileName&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
