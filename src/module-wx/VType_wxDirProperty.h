//==============================================================================
// VType_wxDirProperty.h
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#ifndef GURAX_MODULE_WX_VTYPE_WXDIRPROPERTY_H
#define GURAX_MODULE_WX_VTYPE_WXDIRPROPERTY_H
#include <gurax.h>
#include <wx/wx.h>
#include <wx/propgrid/props.h>
#include "Util.h"
#include "VType_wxLongStringProperty.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// VType_wxDirProperty
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE VType_wxDirProperty : public VType {
public:
	using VType::VType;
	virtual void DoPrepare(Frame& frameOuter) override;
};

extern GURAX_DLLDECLARE VType_wxDirProperty VTYPE_wxDirProperty;

//------------------------------------------------------------------------------
// Value_wxDirProperty
//------------------------------------------------------------------------------
class GURAX_DLLDECLARE Value_wxDirProperty : public Value_wxLongStringProperty {
public:
	// Referable declaration
	Gurax_DeclareReferable(Value_wxDirProperty);
	// Uses MemoryPool allocator
	Gurax_MemoryPoolAllocator("Value_wxDirProperty");
public:
	static VType& vtype;
public:
	// Constructor
	Value_wxDirProperty() = delete;
	explicit Value_wxDirProperty(const wxDirProperty& entity, VType& vtype = VTYPE_wxDirProperty) :
		Value_wxLongStringProperty(entity, vtype) {}
	// Copy constructor/operator
	Value_wxDirProperty(const Value_wxDirProperty& src) = delete;
	Value_wxDirProperty& operator=(const Value_wxDirProperty& src) = delete;
	// Move constructor/operator
	Value_wxDirProperty(Value_wxDirProperty&& src) noexcept = delete;
	Value_wxDirProperty& operator=(Value_wxDirProperty&& src) noexcept = delete;
protected:
	// Destructor
	~Value_wxDirProperty() = default;
public:
	wxDirProperty& GetEntity() { return reinterpret_cast<wxDirProperty&>(Value_wxLongStringProperty::GetEntity()); }
	const wxDirProperty& GetEntity() const { return reinterpret_cast<const wxDirProperty&>(Value_wxLongStringProperty::GetEntity()); }
	wxDirProperty* GetEntityPtr() { return reinterpret_cast<wxDirProperty*>(Value_wxLongStringProperty::GetEntityPtr()); }\
	const wxDirProperty* GetEntityPtr() const { return reinterpret_cast<const wxDirProperty*>(Value_wxLongStringProperty::GetEntityPtr()); }
public:
	static wxDirProperty& GetEntity(Value& value) {
		return dynamic_cast<Value_wxDirProperty&>(value).GetEntity();
	}
	static const wxDirProperty& GetEntity(const Value& value) {
		return dynamic_cast<const Value_wxDirProperty&>(value).GetEntity();
	}
	static wxDirProperty* GetEntityPtr(Value& value) {
		return dynamic_cast<Value_wxDirProperty&>(value).GetEntityPtr();
	}
	static const wxDirProperty* GetEntityPtr(const Value& value) {
		return dynamic_cast<const Value_wxDirProperty&>(value).GetEntityPtr();
	}
public:
	// Virtual functions of Value
	virtual Value* Clone() const override { return Reference(); }
	virtual size_t DoCalcHash() const override {
		return reinterpret_cast<size_t>(GetEntityPtr(*this));
	}
	virtual bool IsEqualTo(const Value& value) const override {
		return IsSameType(value) && GetEntityPtr(*this) == GetEntityPtr(value);
	}
	virtual bool IsLessThan(const Value& value) const override {
		return IsSameType(value)?
			(GetEntityPtr(*this) < GetEntityPtr(value)) :
			GetVTypeCustom().IsLessThan(value.GetVTypeCustom());
	}
	virtual String ToString(const StringStyle& ss) const override;
};

Gurax_EndModuleScope(wx)

#endif
