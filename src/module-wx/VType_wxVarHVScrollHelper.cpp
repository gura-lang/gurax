//==============================================================================
// VType_wxVarHVScrollHelper.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"""(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.VarHVScrollHelper, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.VarHVScrollHelper, `en)}

${help.ComposeMethodHelp(wx.VarHVScrollHelper, `en)}
)""";

static const char* g_docHelp_ja = u8R"""(
# 概要

# 定数

${help.ComposePropertyHelp(wx.VarHVScrollHelper, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.VarHVScrollHelper, `ja)}

${help.ComposeMethodHelp(wx.VarHVScrollHelper, `ja)}
)""";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.VarHVScrollHelper#EnablePhysicalScrolling(vscrolling? as Bool, hscrolling? as Bool)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, EnablePhysicalScrolling_gurax, "EnablePhysicalScrolling")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("vscrolling", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("hscrolling", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, EnablePhysicalScrolling_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	bool vscrolling = args_gurax.IsValid()? args_gurax.PickBool() : true;
	bool hscrolling = args_gurax.IsValid()? args_gurax.PickBool() : true;
	// Function body
	pEntity_gurax->EnablePhysicalScrolling(vscrolling, hscrolling);
	return Gurax::Value::nil();
}

// wx.VarHVScrollHelper#GetRowColumnCount() {block?}
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, GetRowColumnCount_gurax, "GetRowColumnCount")
{
	Declare(VTYPE_wxSize, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, GetRowColumnCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxSize(pEntity_gurax->GetRowColumnCount()));
}

// wx.VarHVScrollHelper#GetVisibleBegin() {block?}
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, GetVisibleBegin_gurax, "GetVisibleBegin")
{
	Declare(VTYPE_wxPosition, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, GetVisibleBegin_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxPosition(pEntity_gurax->GetVisibleBegin()));
}

// wx.VarHVScrollHelper#GetVisibleEnd() {block?}
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, GetVisibleEnd_gurax, "GetVisibleEnd")
{
	Declare(VTYPE_wxPosition, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, GetVisibleEnd_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxPosition(pEntity_gurax->GetVisibleEnd()));
}

// wx.VarHVScrollHelper#SetRowColumnCount(rowCount as Number, columnCount as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, SetRowColumnCount_gurax, "SetRowColumnCount")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("rowCount", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("columnCount", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, SetRowColumnCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t rowCount = args_gurax.PickNumber<size_t>();
	size_t columnCount = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->SetRowColumnCount(rowCount, columnCount);
	return Gurax::Value::nil();
}

// wx.VarHVScrollHelper#IsVisible(row as Number, column as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, IsVisible_gurax, "IsVisible")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("row", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("column", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, IsVisible_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t row = args_gurax.PickNumber<size_t>();
	size_t column = args_gurax.PickNumber<size_t>();
	// Function body
	bool rtn = pEntity_gurax->IsVisible(row, column);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#RefreshRowColumn(row as Number, column as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, RefreshRowColumn_gurax, "RefreshRowColumn")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("row", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("column", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, RefreshRowColumn_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t row = args_gurax.PickNumber<size_t>();
	size_t column = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->RefreshRowColumn(row, column);
	return Gurax::Value::nil();
}

// wx.VarHVScrollHelper#RefreshRowsColumns(fromRow as Number, toRow as Number, fromColumn as Number, toColumn as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, RefreshRowsColumns_gurax, "RefreshRowsColumns")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("fromRow", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("toRow", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("fromColumn", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("toColumn", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, RefreshRowsColumns_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t fromRow = args_gurax.PickNumber<size_t>();
	size_t toRow = args_gurax.PickNumber<size_t>();
	size_t fromColumn = args_gurax.PickNumber<size_t>();
	size_t toColumn = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->RefreshRowsColumns(fromRow, toRow, fromColumn, toColumn);
	return Gurax::Value::nil();
}

// wx.VarHVScrollHelper#ScrollToRowColumn(row as Number, column as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, ScrollToRowColumn_gurax, "ScrollToRowColumn")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("row", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("column", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, ScrollToRowColumn_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t row = args_gurax.PickNumber<size_t>();
	size_t column = args_gurax.PickNumber<size_t>();
	// Function body
	bool rtn = pEntity_gurax->ScrollToRowColumn(row, column);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#VirtualHitTest(x as Number, y as Number) {block?}
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, VirtualHitTest_gurax, "VirtualHitTest")
{
	Declare(VTYPE_wxPosition, Flag::None);
	DeclareArg("x", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("y", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, VirtualHitTest_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	wxCoord x = args_gurax.PickNumber<wxCoord>();
	wxCoord y = args_gurax.PickNumber<wxCoord>();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxPosition(pEntity_gurax->VirtualHitTest(x, y)));
}

// wx.VarHVScrollHelper#GetColumnCount()
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, GetColumnCount_gurax, "GetColumnCount")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, GetColumnCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	size_t rtn = pEntity_gurax->GetColumnCount();
	return new Gurax::Value_Number(rtn);
}

// wx.VarHVScrollHelper#GetVisibleColumnsBegin()
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, GetVisibleColumnsBegin_gurax, "GetVisibleColumnsBegin")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, GetVisibleColumnsBegin_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	size_t rtn = pEntity_gurax->GetVisibleColumnsBegin();
	return new Gurax::Value_Number(rtn);
}

// wx.VarHVScrollHelper#GetVisibleColumnsEnd()
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, GetVisibleColumnsEnd_gurax, "GetVisibleColumnsEnd")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, GetVisibleColumnsEnd_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	size_t rtn = pEntity_gurax->GetVisibleColumnsEnd();
	return new Gurax::Value_Number(rtn);
}

// wx.VarHVScrollHelper#IsColumnVisible(column as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, IsColumnVisible_gurax, "IsColumnVisible")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("column", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, IsColumnVisible_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t column = args_gurax.PickNumber<size_t>();
	// Function body
	bool rtn = pEntity_gurax->IsColumnVisible(column);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#RefreshColumn(column as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, RefreshColumn_gurax, "RefreshColumn")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("column", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, RefreshColumn_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t column = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->RefreshColumn(column);
	return Gurax::Value::nil();
}

// wx.VarHVScrollHelper#RefreshColumns(from as Number, to as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, RefreshColumns_gurax, "RefreshColumns")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, RefreshColumns_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t from = args_gurax.PickNumber<size_t>();
	size_t to = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->RefreshColumns(from, to);
	return Gurax::Value::nil();
}

// wx.VarHVScrollHelper#ScrollColumnPages(pages as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, ScrollColumnPages_gurax, "ScrollColumnPages")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("pages", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, ScrollColumnPages_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int pages = args_gurax.PickNumber<int>();
	// Function body
	bool rtn = pEntity_gurax->ScrollColumnPages(pages);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#ScrollColumns(columns as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, ScrollColumns_gurax, "ScrollColumns")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("columns", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, ScrollColumns_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int columns = args_gurax.PickNumber<int>();
	// Function body
	bool rtn = pEntity_gurax->ScrollColumns(columns);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#ScrollToColumn(column as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, ScrollToColumn_gurax, "ScrollToColumn")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("column", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, ScrollToColumn_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t column = args_gurax.PickNumber<size_t>();
	// Function body
	bool rtn = pEntity_gurax->ScrollToColumn(column);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#SetColumnCount(columnCount as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, SetColumnCount_gurax, "SetColumnCount")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("columnCount", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, SetColumnCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t columnCount = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->SetColumnCount(columnCount);
	return Gurax::Value::nil();
}

// wx.VarHVScrollHelper#GetRowCount()
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, GetRowCount_gurax, "GetRowCount")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, GetRowCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	size_t rtn = pEntity_gurax->GetRowCount();
	return new Gurax::Value_Number(rtn);
}

// wx.VarHVScrollHelper#GetVisibleRowsBegin()
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, GetVisibleRowsBegin_gurax, "GetVisibleRowsBegin")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, GetVisibleRowsBegin_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	size_t rtn = pEntity_gurax->GetVisibleRowsBegin();
	return new Gurax::Value_Number(rtn);
}

// wx.VarHVScrollHelper#GetVisibleRowsEnd()
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, GetVisibleRowsEnd_gurax, "GetVisibleRowsEnd")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, GetVisibleRowsEnd_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	size_t rtn = pEntity_gurax->GetVisibleRowsEnd();
	return new Gurax::Value_Number(rtn);
}

// wx.VarHVScrollHelper#IsRowVisible(row as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, IsRowVisible_gurax, "IsRowVisible")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("row", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, IsRowVisible_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t row = args_gurax.PickNumber<size_t>();
	// Function body
	bool rtn = pEntity_gurax->IsRowVisible(row);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#RefreshRow(row as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, RefreshRow_gurax, "RefreshRow")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("row", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, RefreshRow_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t row = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->RefreshRow(row);
	return Gurax::Value::nil();
}

// wx.VarHVScrollHelper#RefreshRows(from as Number, to as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, RefreshRows_gurax, "RefreshRows")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("from", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
	DeclareArg("to", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, RefreshRows_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t from = args_gurax.PickNumber<size_t>();
	size_t to = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->RefreshRows(from, to);
	return Gurax::Value::nil();
}

// wx.VarHVScrollHelper#ScrollRowPages(pages as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, ScrollRowPages_gurax, "ScrollRowPages")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("pages", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, ScrollRowPages_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int pages = args_gurax.PickNumber<int>();
	// Function body
	bool rtn = pEntity_gurax->ScrollRowPages(pages);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#ScrollRows(rows as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, ScrollRows_gurax, "ScrollRows")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("rows", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, ScrollRows_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	int rows = args_gurax.PickNumber<int>();
	// Function body
	bool rtn = pEntity_gurax->ScrollRows(rows);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#ScrollToRow(row as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, ScrollToRow_gurax, "ScrollToRow")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("row", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, ScrollToRow_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t row = args_gurax.PickNumber<size_t>();
	// Function body
	bool rtn = pEntity_gurax->ScrollToRow(row);
	return new Gurax::Value_Bool(rtn);
}

// wx.VarHVScrollHelper#SetRowCount(rowCount as Number)
Gurax_DeclareMethodAlias(wxVarHVScrollHelper, SetRowCount_gurax, "SetRowCount")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("rowCount", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxVarHVScrollHelper, SetRowCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	size_t rowCount = args_gurax.PickNumber<size_t>();
	// Function body
	pEntity_gurax->SetRowCount(rowCount);
	return Gurax::Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxVarHVScrollHelper
//------------------------------------------------------------------------------
VType_wxVarHVScrollHelper VTYPE_wxVarHVScrollHelper("VarHVScrollHelper");

void VType_wxVarHVScrollHelper::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_Object, Flag::Mutable);
	// Assignment of method
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, EnablePhysicalScrolling_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, GetRowColumnCount_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, GetVisibleBegin_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, GetVisibleEnd_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, SetRowColumnCount_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, IsVisible_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, RefreshRowColumn_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, RefreshRowsColumns_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, ScrollToRowColumn_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, VirtualHitTest_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, GetColumnCount_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, GetVisibleColumnsBegin_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, GetVisibleColumnsEnd_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, IsColumnVisible_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, RefreshColumn_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, RefreshColumns_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, ScrollColumnPages_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, ScrollColumns_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, ScrollToColumn_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, SetColumnCount_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, GetRowCount_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, GetVisibleRowsBegin_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, GetVisibleRowsEnd_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, IsRowVisible_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, RefreshRow_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, RefreshRows_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, ScrollRowPages_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, ScrollRows_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, ScrollToRow_gurax));
	Assign(Gurax_CreateMethod(wxVarHVScrollHelper, SetRowCount_gurax));
}

//------------------------------------------------------------------------------
// Value_wxVarHVScrollHelper
//------------------------------------------------------------------------------
VType& Value_wxVarHVScrollHelper::vtype = VTYPE_wxVarHVScrollHelper;

String Value_wxVarHVScrollHelper::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.VarHVScrollHelper");
}

Gurax_EndModuleScope(wx)
