//==============================================================================
// VType_wxTreeCtrl.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"""(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.TreeCtrl, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.TreeCtrl, `en)}

${help.ComposeMethodHelp(wx.TreeCtrl, `en)}
)""";

static const char* g_docHelp_ja = u8R"""(
# 概要

# 定数

${help.ComposePropertyHelp(wx.TreeCtrl, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.TreeCtrl, `ja)}

${help.ComposeMethodHelp(wx.TreeCtrl, `ja)}
)""";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.TreeCtrl(parent as wx.Window, id? as Number, pos? as wx.Point, size? as wx.Size, style? as Number, validator? as wx.Validator, name? as String) {block?}
Gurax_DeclareConstructorAlias(TreeCtrl_gurax, "TreeCtrl")
{
	Declare(VTYPE_wxTreeCtrl, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("id", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("pos", VTYPE_wxPoint, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("style", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("validator", VTYPE_wxValidator, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("name", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementConstructorEx(TreeCtrl_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	bool id_validFlag = args_gurax.IsValid();
	wxWindowID id = id_validFlag? args_gurax.PickNumber<wxWindowID>() : wxID_ANY;
	const wxPoint& pos = args_gurax.IsValid()? args_gurax.Pick<Value_wxPoint>().GetEntity() : wxDefaultPosition;
	const wxSize& size = args_gurax.IsValid()? args_gurax.Pick<Value_wxSize>().GetEntity() : wxDefaultSize;
	bool style_validFlag = args_gurax.IsValid();
	long style = style_validFlag? args_gurax.PickNumber<long>() : wxTR_DEFAULT_STYLE;
	const wxValidator& validator = args_gurax.IsValid()? args_gurax.Pick<Value_wxValidator>().GetEntity() : wxDefaultValidator;
	const char* name = args_gurax.IsValid()? args_gurax.PickString() : wxTreeCtrlNameStr;
	// Function body
	auto pEntity_gurax = new Value_wxTreeCtrl::EntityT(parent, id, pos, size, style, validator, name);
	RefPtr<Value_wxTreeCtrl> pValue_gurax(new Value_wxTreeCtrl(pEntity_gurax));
	pEntity_gurax->core_gurax.SetInfo(processor_gurax.Reference(), *pValue_gurax);
	return argument_gurax.ReturnValue(processor_gurax, pValue_gurax.release());
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------
// wx.TreeCtrl#AddRoot(text as String, image? as Number, selImage? as Number, data? as Any) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, AddRoot_gurax, "AddRoot")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
	DeclareArg("image", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("selImage", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("data", VTYPE_Any, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, AddRoot_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	const char* text = args_gurax.PickString();
	bool image_validFlag = args_gurax.IsValid();
	int image = image_validFlag? args_gurax.PickNumber<int>() : -1;
	bool selImage_validFlag = args_gurax.IsValid();
	int selImage = selImage_validFlag? args_gurax.PickNumber<int>() : -1;
	const Value& data = args_gurax.IsValid()? args_gurax.PickValue() : Value::C_nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->AddRoot(text, image, selImage, TreeItemData::Create(data))));
}

// wx.TreeCtrl#AppendItem(parent as wx.TreeItemId, text as String, image? as Number, selImage? as Number, data? as Any) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, AppendItem_gurax, "AppendItem")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareArg("parent", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
	DeclareArg("image", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("selImage", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("data", VTYPE_Any, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, AppendItem_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_parent = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& parent = value_parent.GetEntity();
	const char* text = args_gurax.PickString();
	bool image_validFlag = args_gurax.IsValid();
	int image = image_validFlag? args_gurax.PickNumber<int>() : -1;
	bool selImage_validFlag = args_gurax.IsValid();
	int selImage = selImage_validFlag? args_gurax.PickNumber<int>() : -1;
	const Value& data = args_gurax.IsValid()? args_gurax.PickValue() : Value::C_nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->AppendItem(parent, text, image, selImage, TreeItemData::Create(data))));
}

// wx.TreeCtrl#AssignImageList(imageList as wx.ImageList)
Gurax_DeclareMethodAlias(wxTreeCtrl, AssignImageList_gurax, "AssignImageList")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("imageList", VTYPE_wxImageList, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, AssignImageList_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxImageList& value_imageList = args_gurax.Pick<Value_wxImageList>();
	wxImageList* imageList = value_imageList.GetEntityPtr();
	// Function body
	pEntity_gurax->AssignImageList(imageList);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#AssignStateImageList(imageList as wx.ImageList)
Gurax_DeclareMethodAlias(wxTreeCtrl, AssignStateImageList_gurax, "AssignStateImageList")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("imageList", VTYPE_wxImageList, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, AssignStateImageList_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxImageList& value_imageList = args_gurax.Pick<Value_wxImageList>();
	wxImageList* imageList = value_imageList.GetEntityPtr();
	// Function body
	pEntity_gurax->AssignStateImageList(imageList);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#Collapse(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, Collapse_gurax, "Collapse")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, Collapse_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->Collapse(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#CollapseAll()
Gurax_DeclareMethodAlias(wxTreeCtrl, CollapseAll_gurax, "CollapseAll")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, CollapseAll_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->CollapseAll();
	return Gurax::Value::nil();
}

// wx.TreeCtrl#CollapseAllChildren(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, CollapseAllChildren_gurax, "CollapseAllChildren")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, CollapseAllChildren_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->CollapseAllChildren(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#CollapseAndReset(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, CollapseAndReset_gurax, "CollapseAndReset")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, CollapseAndReset_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->CollapseAndReset(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#Create(parent as wx.Window, id? as Number, pos? as wx.Point, size? as wx.Size, style? as Number, validator? as wx.Validator, name? as String)
Gurax_DeclareMethodAlias(wxTreeCtrl, Create_gurax, "Create")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("parent", VTYPE_wxWindow, ArgOccur::Once, ArgFlag::None);
	DeclareArg("id", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("pos", VTYPE_wxPoint, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("size", VTYPE_wxSize, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("style", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("validator", VTYPE_wxValidator, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("name", VTYPE_String, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, Create_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxWindow& value_parent = args_gurax.Pick<Value_wxWindow>();
	wxWindow* parent = value_parent.GetEntityPtr();
	bool id_validFlag = args_gurax.IsValid();
	wxWindowID id = id_validFlag? args_gurax.PickNumber<wxWindowID>() : wxID_ANY;
	const wxPoint& pos = args_gurax.IsValid()? args_gurax.Pick<Value_wxPoint>().GetEntity() : wxDefaultPosition;
	const wxSize& size = args_gurax.IsValid()? args_gurax.Pick<Value_wxSize>().GetEntity() : wxDefaultSize;
	bool style_validFlag = args_gurax.IsValid();
	long style = style_validFlag? args_gurax.PickNumber<long>() : wxTR_DEFAULT_STYLE;
	const wxValidator& validator = args_gurax.IsValid()? args_gurax.Pick<Value_wxValidator>().GetEntity() : wxDefaultValidator;
	const char* name = args_gurax.IsValid()? args_gurax.PickString() : wxTreeCtrlNameStr;
	// Function body
	bool rtn = pEntity_gurax->Create(parent, id, pos, size, style, validator, name);
	return new Gurax::Value_Bool(rtn);
}

// wx.TreeCtrl#Delete(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, Delete_gurax, "Delete")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, Delete_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->Delete(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#DeleteAllItems()
Gurax_DeclareMethodAlias(wxTreeCtrl, DeleteAllItems_gurax, "DeleteAllItems")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, DeleteAllItems_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->DeleteAllItems();
	return Gurax::Value::nil();
}

// wx.TreeCtrl#DeleteChildren(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, DeleteChildren_gurax, "DeleteChildren")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, DeleteChildren_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->DeleteChildren(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#EnableBellOnNoMatch(on? as Bool)
Gurax_DeclareMethodAlias(wxTreeCtrl, EnableBellOnNoMatch_gurax, "EnableBellOnNoMatch")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("on", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, EnableBellOnNoMatch_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	bool on = args_gurax.IsValid()? args_gurax.PickBool() : true;
	// Function body
	pEntity_gurax->EnableBellOnNoMatch(on);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#EndEditLabel(item as wx.TreeItemId, discardChanges? as Bool)
Gurax_DeclareMethodAlias(wxTreeCtrl, EndEditLabel_gurax, "EndEditLabel")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("discardChanges", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, EndEditLabel_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	bool discardChanges = args_gurax.IsValid()? args_gurax.PickBool() : false;
	// Function body
	pEntity_gurax->EndEditLabel(item, discardChanges);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#EnsureVisible(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, EnsureVisible_gurax, "EnsureVisible")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, EnsureVisible_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->EnsureVisible(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#Expand(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, Expand_gurax, "Expand")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, Expand_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->Expand(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#ExpandAll()
Gurax_DeclareMethodAlias(wxTreeCtrl, ExpandAll_gurax, "ExpandAll")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, ExpandAll_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->ExpandAll();
	return Gurax::Value::nil();
}

// wx.TreeCtrl#ExpandAllChildren(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, ExpandAllChildren_gurax, "ExpandAllChildren")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, ExpandAllChildren_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->ExpandAllChildren(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#GetBoundingRect(item as wx.TreeItemId, rect as wx.Rect, textOnly? as Bool)
Gurax_DeclareMethodAlias(wxTreeCtrl, GetBoundingRect_gurax, "GetBoundingRect")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("rect", VTYPE_wxRect, ArgOccur::Once, ArgFlag::None);
	DeclareArg("textOnly", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetBoundingRect_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	Value_wxRect& value_rect = args_gurax.Pick<Value_wxRect>();
	wxRect& rect = value_rect.GetEntity();
	bool textOnly = args_gurax.IsValid()? args_gurax.PickBool() : false;
	// Function body
	bool rtn = pEntity_gurax->GetBoundingRect(item, rect, textOnly);
	return new Gurax::Value_Bool(rtn);
}

// wx.TreeCtrl#GetChildrenCount(item as wx.TreeItemId, recursively? as Bool)
Gurax_DeclareMethodAlias(wxTreeCtrl, GetChildrenCount_gurax, "GetChildrenCount")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("recursively", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetChildrenCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	bool recursively = args_gurax.IsValid()? args_gurax.PickBool() : true;
	// Function body
	size_t rtn = pEntity_gurax->GetChildrenCount(item, recursively);
	return new Gurax::Value_Number(rtn);
}

// wx.TreeCtrl#GetCount()
Gurax_DeclareMethodAlias(wxTreeCtrl, GetCount_gurax, "GetCount")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetCount_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	unsigned int rtn = pEntity_gurax->GetCount();
	return new Gurax::Value_Number(rtn);
}

// wx.TreeCtrl#GetEditControl() {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetEditControl_gurax, "GetEditControl")
{
	Declare(VTYPE_wxTextCtrl, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetEditControl_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTextCtrl(
		pEntity_gurax->GetEditControl()));
}

// wx.TreeCtrl#GetFirstVisibleItem() {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetFirstVisibleItem_gurax, "GetFirstVisibleItem")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetFirstVisibleItem_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetFirstVisibleItem()));
}

// wx.TreeCtrl#GetFocusedItem() {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetFocusedItem_gurax, "GetFocusedItem")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetFocusedItem_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetFocusedItem()));
}

// wx.TreeCtrl#ClearFocusedItem()
Gurax_DeclareMethodAlias(wxTreeCtrl, ClearFocusedItem_gurax, "ClearFocusedItem")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, ClearFocusedItem_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->ClearFocusedItem();
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetFocusedItem(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetFocusedItem_gurax, "SetFocusedItem")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetFocusedItem_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->SetFocusedItem(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#GetImageList() {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetImageList_gurax, "GetImageList")
{
	Declare(VTYPE_wxImageList, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetImageList_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxImageList(
		pEntity_gurax->GetImageList()));
}

// wx.TreeCtrl#GetIndent()
Gurax_DeclareMethodAlias(wxTreeCtrl, GetIndent_gurax, "GetIndent")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetIndent_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	unsigned int rtn = pEntity_gurax->GetIndent();
	return new Gurax::Value_Number(rtn);
}

// wx.TreeCtrl#GetSpacing()
Gurax_DeclareMethodAlias(wxTreeCtrl, GetSpacing_gurax, "GetSpacing")
{
	Declare(VTYPE_Number, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetSpacing_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	unsigned int rtn = pEntity_gurax->GetSpacing();
	return new Gurax::Value_Number(rtn);
}

// wx.TreeCtrl#GetItemBackgroundColour(item as wx.TreeItemId) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetItemBackgroundColour_gurax, "GetItemBackgroundColour")
{
	Declare(VTYPE_wxColour, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetItemBackgroundColour_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxColour(
		pEntity_gurax->GetItemBackgroundColour(item)));
}

// wx.TreeCtrl#GetItemData(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, GetItemData_gurax, "GetItemData")
{
	Declare(VTYPE_Any, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetItemData_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	TreeItemData* rtn = dynamic_cast<TreeItemData*>(pEntity_gurax->GetItemData(item));
	if (!rtn) return Value::nil();
	return rtn->GetValue().Reference();
}

// wx.TreeCtrl#GetItemFont(item as wx.TreeItemId) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetItemFont_gurax, "GetItemFont")
{
	Declare(VTYPE_wxFont, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetItemFont_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxFont(
		pEntity_gurax->GetItemFont(item)));
}

// wx.TreeCtrl#GetItemParent(item as wx.TreeItemId) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetItemParent_gurax, "GetItemParent")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetItemParent_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetItemParent(item)));
}

// wx.TreeCtrl#GetItemState(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, GetItemState_gurax, "GetItemState")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetItemState_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	int rtn = pEntity_gurax->GetItemState(item);
	return new Gurax::Value_Number(rtn);
}

// wx.TreeCtrl#GetItemText(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, GetItemText_gurax, "GetItemText")
{
	Declare(VTYPE_String, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetItemText_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	wxString rtn = pEntity_gurax->GetItemText(item);
	//return new Gurax::Value_String(static_cast<const char*>(rtn.c_str()));
	return new Gurax::Value_String(rtn.utf8_str().data());
}

// wx.TreeCtrl#GetItemTextColour(item as wx.TreeItemId) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetItemTextColour_gurax, "GetItemTextColour")
{
	Declare(VTYPE_wxColour, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetItemTextColour_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxColour(
		pEntity_gurax->GetItemTextColour(item)));
}

// wx.TreeCtrl#GetLastChild(item as wx.TreeItemId) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetLastChild_gurax, "GetLastChild")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetLastChild_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetLastChild(item)));
}

// wx.TreeCtrl#GetNextSibling(item as wx.TreeItemId) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetNextSibling_gurax, "GetNextSibling")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetNextSibling_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetNextSibling(item)));
}

// wx.TreeCtrl#GetNextVisible(item as wx.TreeItemId) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetNextVisible_gurax, "GetNextVisible")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetNextVisible_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetNextVisible(item)));
}

// wx.TreeCtrl#GetPrevSibling(item as wx.TreeItemId) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetPrevSibling_gurax, "GetPrevSibling")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetPrevSibling_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetPrevSibling(item)));
}

// wx.TreeCtrl#GetPrevVisible(item as wx.TreeItemId) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetPrevVisible_gurax, "GetPrevVisible")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetPrevVisible_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetPrevVisible(item)));
}

// wx.TreeCtrl#GetQuickBestSize()
Gurax_DeclareMethodAlias(wxTreeCtrl, GetQuickBestSize_gurax, "GetQuickBestSize")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetQuickBestSize_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->GetQuickBestSize();
	return new Gurax::Value_Bool(rtn);
}

// wx.TreeCtrl#GetRootItem() {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetRootItem_gurax, "GetRootItem")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetRootItem_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetRootItem()));
}

// wx.TreeCtrl#GetSelection() {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetSelection_gurax, "GetSelection")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetSelection_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxTreeItemId(
		pEntity_gurax->GetSelection()));
}

// wx.TreeCtrl#GetSelections()
Gurax_DeclareMethodAlias(wxTreeCtrl, GetSelections_gurax, "GetSelections")
{
	Declare(VTYPE_Any, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetSelections_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	wxArrayTreeItemIds treeItemIds;
	pEntity_gurax->GetSelections(treeItemIds);
	RefPtr<ValueOwner> pValues(new ValueOwner());
	for (const wxTreeItemId& treeItemId : treeItemIds) {
		pValues->push_back(new Value_wxTreeItemId(treeItemId));
	}
	return new Value_List(VTYPE_wxTreeItemId, pValues.release());
}

// wx.TreeCtrl#GetStateImageList() {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, GetStateImageList_gurax, "GetStateImageList")
{
	Declare(VTYPE_wxImageList, Flag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, GetStateImageList_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxImageList(
		pEntity_gurax->GetStateImageList()));
}

// wx.TreeCtrl#HitTest(point as wx.Point)
Gurax_DeclareMethodAlias(wxTreeCtrl, HitTest_gurax, "HitTest")
{
	Declare(VTYPE_Any, Flag::None);
	DeclareArg("point", VTYPE_wxPoint, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, HitTest_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxPoint& value_point = args_gurax.Pick<Value_wxPoint>();
	const wxPoint& point = value_point.GetEntity();
	// Function body
	int flags;
	wxTreeItemId rtn = pEntity_gurax->HitTest(point, flags);
	return Value_Tuple::Create(new Value_wxTreeItemId(rtn), new Value_Number(flags));
}

// wx.TreeCtrl#InsertItem(parent as wx.TreeItemId, pos as Any, text as String, image? as Number, selImage? as Number, data? as Any) {block?}
Gurax_DeclareMethodAlias(wxTreeCtrl, InsertItem_gurax, "InsertItem")
{
	Declare(VTYPE_wxTreeItemId, Flag::None);
	DeclareArg("parent", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("pos", VTYPE_Any, ArgOccur::Once, ArgFlag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
	DeclareArg("image", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("selImage", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareArg("data", VTYPE_Any, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementMethodEx(wxTreeCtrl, InsertItem_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_parent = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& parent = value_parent.GetEntity();
	const Gurax::Value& pos = args_gurax.PickValue();
	const char* text = args_gurax.PickString();
	bool image_validFlag = args_gurax.IsValid();
	int image = image_validFlag? args_gurax.PickNumber<int>() : -1;
	bool selImage_validFlag = args_gurax.IsValid();
	int selImage = selImage_validFlag? args_gurax.PickNumber<int>() : -1;
	const Value& data = args_gurax.IsValid()? args_gurax.PickValue() : Value::C_nil();
	// Function body
	if (pos.IsType(VTYPE_wxTreeItemId)) {
		//InsertItem(parent as const_TreeItemId_r, previous as const_TreeItemId_r, text as const_String_r, image as int = -1, selImage as int = -1, data as TreeItemData_p = NULL) as TreeItemId
		wxTreeItemId rtn = pEntity_gurax->InsertItem(parent, Value_wxTreeItemId::GetEntity(pos), text, image, selImage, new TreeItemData(data.Reference()));
		return new Value_wxTreeItemId(rtn);
	} else if (pos.IsType(VTYPE_Number)) {
		//InsertItem(parent as const_TreeItemId_r, pos as size_t, text as const_String_r, image as int = -1, selImage as int = -1, data as TreeItemData_p = NULL) as TreeItemId
		wxTreeItemId rtn = pEntity_gurax->InsertItem(parent, Value_Number::GetNumber<size_t>(pos), text, image, selImage, new TreeItemData(data.Reference()));
		return new Value_wxTreeItemId(rtn);
	}
	Error::Issue(ErrorType::TypeError, "");
	return Value::nil();
}

// wx.TreeCtrl#IsBold(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, IsBold_gurax, "IsBold")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, IsBold_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->IsBold(item);
	return new Gurax::Value_Bool(rtn);
}

// wx.TreeCtrl#IsEmpty()
Gurax_DeclareMethodAlias(wxTreeCtrl, IsEmpty_gurax, "IsEmpty")
{
	Declare(VTYPE_Bool, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, IsEmpty_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	bool rtn = pEntity_gurax->IsEmpty();
	return new Gurax::Value_Bool(rtn);
}

// wx.TreeCtrl#IsExpanded(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, IsExpanded_gurax, "IsExpanded")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, IsExpanded_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->IsExpanded(item);
	return new Gurax::Value_Bool(rtn);
}

// wx.TreeCtrl#IsSelected(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, IsSelected_gurax, "IsSelected")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, IsSelected_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->IsSelected(item);
	return new Gurax::Value_Bool(rtn);
}

// wx.TreeCtrl#IsVisible(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, IsVisible_gurax, "IsVisible")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, IsVisible_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->IsVisible(item);
	return new Gurax::Value_Bool(rtn);
}

// wx.TreeCtrl#ItemHasChildren(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, ItemHasChildren_gurax, "ItemHasChildren")
{
	Declare(VTYPE_Bool, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, ItemHasChildren_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	bool rtn = pEntity_gurax->ItemHasChildren(item);
	return new Gurax::Value_Bool(rtn);
}

// wx.TreeCtrl#OnCompareItems(item1 as wx.TreeItemId, item2 as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, OnCompareItems_gurax, "OnCompareItems")
{
	Declare(VTYPE_Number, Flag::None);
	DeclareArg("item1", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("item2", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, OnCompareItems_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item1 = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item1 = value_item1.GetEntity();
	Value_wxTreeItemId& value_item2 = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item2 = value_item2.GetEntity();
	// Function body
	int rtn = pEntity_gurax->OnCompareItems(item1, item2);
	return new Gurax::Value_Number(rtn);
}

// wx.TreeCtrl#ScrollTo(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, ScrollTo_gurax, "ScrollTo")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, ScrollTo_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->ScrollTo(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SelectItem(item as wx.TreeItemId, select? as Bool)
Gurax_DeclareMethodAlias(wxTreeCtrl, SelectItem_gurax, "SelectItem")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("select", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SelectItem_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	bool select = args_gurax.IsValid()? args_gurax.PickBool() : true;
	// Function body
	pEntity_gurax->SelectItem(item, select);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetImageList(imageList as wx.ImageList)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetImageList_gurax, "SetImageList")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("imageList", VTYPE_wxImageList, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetImageList_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxImageList& value_imageList = args_gurax.Pick<Value_wxImageList>();
	wxImageList* imageList = value_imageList.GetEntityPtr();
	// Function body
	pEntity_gurax->SetImageList(imageList);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetIndent(indent as Number)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetIndent_gurax, "SetIndent")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("indent", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetIndent_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned int indent = args_gurax.PickNumber<unsigned int>();
	// Function body
	pEntity_gurax->SetIndent(indent);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetSpacing(spacing as Number)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetSpacing_gurax, "SetSpacing")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("spacing", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetSpacing_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	unsigned int spacing = args_gurax.PickNumber<unsigned int>();
	// Function body
	pEntity_gurax->SetSpacing(spacing);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetItemBackgroundColour(item as wx.TreeItemId, col as wx.Colour)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetItemBackgroundColour_gurax, "SetItemBackgroundColour")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("col", VTYPE_wxColour, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetItemBackgroundColour_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	Value_wxColour& value_col = args_gurax.Pick<Value_wxColour>();
	const wxColour& col = value_col.GetEntity();
	// Function body
	pEntity_gurax->SetItemBackgroundColour(item, col);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetItemBold(item as wx.TreeItemId, bold? as Bool)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetItemBold_gurax, "SetItemBold")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("bold", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetItemBold_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	bool bold = args_gurax.IsValid()? args_gurax.PickBool() : true;
	// Function body
	pEntity_gurax->SetItemBold(item, bold);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetItemDropHighlight(item as wx.TreeItemId, highlight? as Bool)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetItemDropHighlight_gurax, "SetItemDropHighlight")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("highlight", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetItemDropHighlight_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	bool highlight = args_gurax.IsValid()? args_gurax.PickBool() : true;
	// Function body
	pEntity_gurax->SetItemDropHighlight(item, highlight);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetItemFont(item as wx.TreeItemId, font as wx.Font)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetItemFont_gurax, "SetItemFont")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("font", VTYPE_wxFont, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetItemFont_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	Value_wxFont& value_font = args_gurax.Pick<Value_wxFont>();
	const wxFont& font = value_font.GetEntity();
	// Function body
	pEntity_gurax->SetItemFont(item, font);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetItemHasChildren(item as wx.TreeItemId, hasChildren? as Bool)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetItemHasChildren_gurax, "SetItemHasChildren")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("hasChildren", VTYPE_Bool, ArgOccur::ZeroOrOnce, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetItemHasChildren_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	bool hasChildren = args_gurax.IsValid()? args_gurax.PickBool() : true;
	// Function body
	pEntity_gurax->SetItemHasChildren(item, hasChildren);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetItemState(item as wx.TreeItemId, state as Number)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetItemState_gurax, "SetItemState")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("state", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetItemState_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	int state = args_gurax.PickNumber<int>();
	// Function body
	pEntity_gurax->SetItemState(item, state);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetItemText(item as wx.TreeItemId, text as String)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetItemText_gurax, "SetItemText")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("text", VTYPE_String, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetItemText_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	const char* text = args_gurax.PickString();
	// Function body
	pEntity_gurax->SetItemText(item, text);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetItemTextColour(item as wx.TreeItemId, col as wx.Colour)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetItemTextColour_gurax, "SetItemTextColour")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
	DeclareArg("col", VTYPE_wxColour, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetItemTextColour_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	Value_wxColour& value_col = args_gurax.Pick<Value_wxColour>();
	const wxColour& col = value_col.GetEntity();
	// Function body
	pEntity_gurax->SetItemTextColour(item, col);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetQuickBestSize(quickBestSize as Bool)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetQuickBestSize_gurax, "SetQuickBestSize")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("quickBestSize", VTYPE_Bool, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetQuickBestSize_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	bool quickBestSize = args_gurax.PickBool();
	// Function body
	pEntity_gurax->SetQuickBestSize(quickBestSize);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetStateImageList(imageList as wx.ImageList)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetStateImageList_gurax, "SetStateImageList")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("imageList", VTYPE_wxImageList, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetStateImageList_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxImageList& value_imageList = args_gurax.Pick<Value_wxImageList>();
	wxImageList* imageList = value_imageList.GetEntityPtr();
	// Function body
	pEntity_gurax->SetStateImageList(imageList);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SetWindowStyle(styles as Number)
Gurax_DeclareMethodAlias(wxTreeCtrl, SetWindowStyle_gurax, "SetWindowStyle")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("styles", VTYPE_Number, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SetWindowStyle_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	long styles = args_gurax.PickNumber<long>();
	// Function body
	pEntity_gurax->SetWindowStyle(styles);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SortChildren(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, SortChildren_gurax, "SortChildren")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SortChildren_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->SortChildren(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#Toggle(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, Toggle_gurax, "Toggle")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, Toggle_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->Toggle(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#ToggleItemSelection(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, ToggleItemSelection_gurax, "ToggleItemSelection")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, ToggleItemSelection_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->ToggleItemSelection(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#Unselect()
Gurax_DeclareMethodAlias(wxTreeCtrl, Unselect_gurax, "Unselect")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, Unselect_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->Unselect();
	return Gurax::Value::nil();
}

// wx.TreeCtrl#UnselectAll()
Gurax_DeclareMethodAlias(wxTreeCtrl, UnselectAll_gurax, "UnselectAll")
{
	Declare(VTYPE_Nil, Flag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, UnselectAll_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Function body
	pEntity_gurax->UnselectAll();
	return Gurax::Value::nil();
}

// wx.TreeCtrl#UnselectItem(item as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, UnselectItem_gurax, "UnselectItem")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("item", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, UnselectItem_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_item = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& item = value_item.GetEntity();
	// Function body
	pEntity_gurax->UnselectItem(item);
	return Gurax::Value::nil();
}

// wx.TreeCtrl#SelectChildren(parent as wx.TreeItemId)
Gurax_DeclareMethodAlias(wxTreeCtrl, SelectChildren_gurax, "SelectChildren")
{
	Declare(VTYPE_Nil, Flag::None);
	DeclareArg("parent", VTYPE_wxTreeItemId, ArgOccur::Once, ArgFlag::None);
}

Gurax_ImplementMethodEx(wxTreeCtrl, SelectChildren_gurax, processor_gurax, argument_gurax)
{
	// Target
	auto& valueThis_gurax = GetValueThis(argument_gurax);
	auto pEntity_gurax = valueThis_gurax.GetEntityPtr();
	if (!pEntity_gurax) return Value::nil();
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxTreeItemId& value_parent = args_gurax.Pick<Value_wxTreeItemId>();
	const wxTreeItemId& parent = value_parent.GetEntity();
	// Function body
	pEntity_gurax->SelectChildren(parent);
	return Gurax::Value::nil();
}

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxTreeCtrl
//------------------------------------------------------------------------------
VType_wxTreeCtrl VTYPE_wxTreeCtrl("TreeCtrl");

void VType_wxTreeCtrl::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_wxControl, Flag::Mutable, Gurax_CreateConstructor(TreeCtrl_gurax));
	// Assignment of method
	Assign(Gurax_CreateMethod(wxTreeCtrl, AddRoot_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, AppendItem_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, AssignImageList_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, AssignStateImageList_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, Collapse_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, CollapseAll_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, CollapseAllChildren_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, CollapseAndReset_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, Create_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, Delete_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, DeleteAllItems_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, DeleteChildren_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, EnableBellOnNoMatch_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, EndEditLabel_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, EnsureVisible_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, Expand_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, ExpandAll_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, ExpandAllChildren_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetBoundingRect_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetChildrenCount_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetCount_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetEditControl_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetFirstVisibleItem_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetFocusedItem_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, ClearFocusedItem_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetFocusedItem_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetImageList_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetIndent_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetSpacing_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetItemBackgroundColour_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetItemData_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetItemFont_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetItemParent_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetItemState_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetItemText_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetItemTextColour_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetLastChild_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetNextSibling_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetNextVisible_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetPrevSibling_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetPrevVisible_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetQuickBestSize_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetRootItem_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetSelection_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetSelections_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, GetStateImageList_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, HitTest_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, InsertItem_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, IsBold_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, IsEmpty_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, IsExpanded_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, IsSelected_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, IsVisible_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, ItemHasChildren_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, OnCompareItems_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, ScrollTo_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SelectItem_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetImageList_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetIndent_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetSpacing_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetItemBackgroundColour_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetItemBold_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetItemDropHighlight_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetItemFont_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetItemHasChildren_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetItemState_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetItemText_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetItemTextColour_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetQuickBestSize_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetStateImageList_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SetWindowStyle_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SortChildren_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, Toggle_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, ToggleItemSelection_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, Unselect_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, UnselectAll_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, UnselectItem_gurax));
	Assign(Gurax_CreateMethod(wxTreeCtrl, SelectChildren_gurax));
}

//------------------------------------------------------------------------------
// Value_wxTreeCtrl
//------------------------------------------------------------------------------
VType& Value_wxTreeCtrl::vtype = VTYPE_wxTreeCtrl;

String Value_wxTreeCtrl::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.TreeCtrl");
}

//------------------------------------------------------------------------------
// Value_wxTreeCtrl::EntityT
//------------------------------------------------------------------------------

Gurax_EndModuleScope(wx)
