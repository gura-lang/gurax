#!/usr/bin/env gurax

expr = `{
	wxAnyButton = class(wxControl) {
	}
	wxApp = class(wxAppConsole) {
	}
	wxAppConsole = class(wxEvtHandler) {
	}
	wxButton = class(wxAnyButton) {
	}
	wxCommandEvent = class(wxEvent) {
	}
	wxControl = class(wxWindow) {
	}
	wxEvent = class(wxObject) {
	}
	wxEventType = class {
	}
	wxEvtHandler = class {
	}
	wxFrame = class(wxWindow) {
	}
	wxMenu = class(wxEvtHandler) {
	}
	wxMenuBar = class(wxWindow) {
	}
	wxMenuItem = class(wxObject) {
	}
	wxObject = class {
	}
	wxPanel = class(wxWindow) {
	}
	wxPoint = class {
	}
	wxSize = class {
	}
	wxStatusBar = class(wxWindow) {
	}
	wxValidator = class(wxEvtHandler) {
	}
	wxWindow = class(wxEvtHandler) {
	}
}

ClassInfo = class {
	className as String
	classNameParent:nil as String
	classInfoParent:nil as ClassInfo
	__init__(className as String, classNameParent:nil as String) = {
		this.className = className
		this.classNameParent = classNameParent
	}
	GetClassInfoRoot() = {
		classInfo = this.classInfoParent
		while (classInfo) {
			!classInfo.classInfoParent && return (classInfo)
			classInfo = classInfo.classInfoParent
		}
		nil
	}
}

classInfoTbl = []

expr.EachElem {|expr|
	if (expr.IsAssign() && expr.left.IsIdentifier() && expr.right.IsCaller() && expr.right.car.IsIdentifier(`class)) {
		className = expr.left.symbolName
		params = expr.right.EachParam():list
		if (!params.first) {
			classNameParent = nil
		} elsif (params.first.IsIdentifier()) {
			classNameParent = params.first.symbolName
		} else {
			sys.cerr.Printf('%d: identifier must be specified\n', expr.lineNoTop)
			sys.Exit(1)
		}
		//expr.right.block
		//Println(className, ' ', classNameParent)
		classInfoTbl.Add(ClassInfo(className, classNameParent))
	}
}

classInfoTbl.Each {|classInfo|
	if (classInfo.classNameParent) {
		classInfo.classInfoParent = classInfoTbl.Find(classInfoTbl:*className == classInfo.classNameParent)
		if (!classInfo.classInfoParent) {
			sys.cerr.Printf('class is not found: %s\n', classInfo.classNameParent)
			sys.Exit(1)
		}
	}
}

classInfoTbl.Each {|classInfo|
	classInfoParent = classInfo.classInfoParent
	classInfoRoot = classInfo.GetClassInfoRoot()
	Printf('%s %s %s\n', classInfo.className,
		cond(classInfoParent, classInfoParent.className, '(nil)'),
		cond(classInfoRoot, classInfoRoot.className, '(nil)'))
}
