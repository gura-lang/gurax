//==============================================================================
// VType_wxHtmlColourCell.cpp
// Don't edit this file since it's been generated by Generate.gura.
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(wx)

//------------------------------------------------------------------------------
// Help
//------------------------------------------------------------------------------
static const char* g_docHelp_en = u8R"""(
# Overview

# Predefined Variable

${help.ComposePropertyHelp(wx.HtmlColourCell, `en)}

# Operator

# Cast Operation

${help.ComposeConstructorHelp(wx.HtmlColourCell, `en)}

${help.ComposeMethodHelp(wx.HtmlColourCell, `en)}
)""";

static const char* g_docHelp_ja = u8R"""(
# 概要

# 定数

${help.ComposePropertyHelp(wx.HtmlColourCell, `ja)}

# オペレータ

# キャスト

${help.ComposeConstructorHelp(wx.HtmlColourCell, `ja)}

${help.ComposeMethodHelp(wx.HtmlColourCell, `ja)}
)""";

//------------------------------------------------------------------------------
// Implementation of constructor
//------------------------------------------------------------------------------
// wx.HtmlColourCell(clr as wx.Colour, flags? as Number) {block?}
Gurax_DeclareConstructorAlias(HtmlColourCell_gurax, "HtmlColourCell")
{
	Declare(VTYPE_wxHtmlColourCell, Flag::None);
	DeclareArg("clr", VTYPE_wxColour, ArgOccur::Once, ArgFlag::None);
	DeclareArg("flags", VTYPE_Number, ArgOccur::ZeroOrOnce, ArgFlag::None);
	DeclareBlock(BlkOccur::ZeroOrOnce);
}

Gurax_ImplementConstructorEx(HtmlColourCell_gurax, processor_gurax, argument_gurax)
{
	// Arguments
	Gurax::ArgPicker args_gurax(argument_gurax);
	Value_wxColour& value_clr = args_gurax.Pick<Value_wxColour>();
	const wxColour& clr = value_clr.GetEntity();
	bool flags_validFlag = args_gurax.IsValid();
	int flags = flags_validFlag? args_gurax.PickNumber<int>() : wxHTML_CLR_FOREGROUND;
	// Function body
	return argument_gurax.ReturnValue(processor_gurax, new Value_wxHtmlColourCell(
		wxHtmlColourCell(clr, flags)));
}

//-----------------------------------------------------------------------------
// Implementation of method
//-----------------------------------------------------------------------------

//-----------------------------------------------------------------------------
// Implementation of property
//-----------------------------------------------------------------------------

//------------------------------------------------------------------------------
// VType_wxHtmlColourCell
//------------------------------------------------------------------------------
VType_wxHtmlColourCell VTYPE_wxHtmlColourCell("HtmlColourCell");

void VType_wxHtmlColourCell::DoPrepare(Frame& frameOuter)
{
	// Add help
	AddHelp(Gurax_Symbol(en), g_docHelp_en);
	AddHelp(Gurax_Symbol(ja), g_docHelp_ja);
	// Declaration of VType
	Declare(VTYPE_wxHtmlCell, Flag::Mutable, Gurax_CreateConstructor(HtmlColourCell_gurax));
	// Assignment of method
}

//------------------------------------------------------------------------------
// Value_wxHtmlColourCell
//------------------------------------------------------------------------------
VType& Value_wxHtmlColourCell::vtype = VTYPE_wxHtmlColourCell;

String Value_wxHtmlColourCell::ToString(const StringStyle& ss) const
{
	return ToStringGeneric(ss, "wx.HtmlColourCell");
}

Gurax_EndModuleScope(wx)
