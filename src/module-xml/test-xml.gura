#!/usr/bin/env gurax
//==============================================================================
// test-xml.gura
//==============================================================================
import(util.tester) {*}
import(xml)

sampleText1 = R'''
<?xml version="1.0"?>
<PurchaseOrder PurchaseOrderNumber="99503" OrderDate="1999-10-20">
  <Address Type="Shipping">
    <Name>Ellen Adams</Name>
    <Street>123 Maple Street</Street>
    <City>Mill Valley</City>
    <State>CA</State>
    <Zip>10999</Zip>
    <Country>USA</Country>
  </Address>
  <Address Type="Billing">
    <Name>Tai Yee</Name>
    <Street>8 Oak Avenue</Street>
    <City>Old Town</City>
    <State>PA</State>
    <Zip>95819</Zip>
    <Country>USA</Country>
  </Address>
  <DeliveryNotes>Please leave packages in shed by driveway.</DeliveryNotes>
  <Items>
    <Item PartNumber="872-AA">
      <ProductName>Lawnmower</ProductName>
      <Quantity>1</Quantity>
      <USPrice>148.95</USPrice>
      <Comment>Confirm this is electric</Comment>
    </Item>
    <Item PartNumber="926-AA">
      <ProductName>Baby Monitor</ProductName>
      <Quantity>2</Quantity>
      <USPrice>39.98</USPrice>
      <ShipDate>1999-05-21</ShipDate>
    </Item>
  </Items>
</PurchaseOrder>
'''

WalkTree(node as xml.Node, func as Function, indentLevel as Number = 0):map:void = {
  func(node, indentLevel)
	node.IsElement() && WalkTree(node.children.Each(), func, indentLevel + 1)
}

ParseAndCompose(text as String) = {
	Println('----------------------------------------------------------------')
	doc = xml.Parse(text)
	doc.Compose()
  WalkTree(doc.root, &{|node, indentLevel| Printf('%*s%s\n', indentLevel * 2, '', node)})
}

ParseAndCompose(sampleText1)

ParseAndCompose(R'''
<?xml version="1.0" encoding="UTF-8"?>
<SoftwareEngineer>
<empl id="01">
<name>
<projectname> Man-router</projectname>
<Workingdomain> machine learning</Workingdomain>
</name>
<Enddate>
<entities><![CDATA[
This is the local project with the fibre optics.
All the statistical manipulation is performed. Example. '"&<> and submission date 12/12/2020
]]></entities>
</Enddate>
</empl>
</SoftwareEngineer>
''')

TestCase('Element#Each()') {
  doc = xml.Parse(sampleText1)
  Println(doc.root.Each())
}

TestCase('Element#EachText()') {
  doc = xml.Parse(sampleText1)
  Println(doc.root.EachText())
}

TestCase('Element#EachElement()') {
  doc = xml.Parse(sampleText1)
  Println('EachElement()')
  Println(doc.root.EachElement())
  Println("EachElement('Address')")
  Println(doc.root.EachElement('Address'))
}

TestCase('Element#attrs') {
  elem = xml.Parse(sampleText1).root
  Tester(`elem.attrs['PurchaseOrderNumber'])
  Tester(`elem.attrs['OrderDate'])
}

TestCase('Node#parent') {
  doc = xml.Parse(sampleText1)
  WalkTree(doc.root, &{|node, indentLevel|
    Printf('%*s%s%s -> %s\n', indentLevel * 2, '', node.type,
          cond(node.IsElement(), '(' + node.name + ')', ''),
          cond(node.parent, 'element(' + node.parent.name + ')', 'nil'))})
}

TestCase('Element#GetAttr()') {
  elem = xml.Parse(sampleText1).root
  Tester(`elem.GetAttr('PurchaseOrderNumber'))
  Tester(`elem.GetAttr('OrderDate'))
}

TestCase('Element#GetAttrName()') {
  elem = xml.Parse(sampleText1).root
  Tester(`elem.GetAttrName(0))
  Tester(`elem.GetAttrName(1))
  Tester(`elem.GetAttrName('PurchaseOrderNumber'))
  Tester(`elem.GetAttrName('OrderDate'))
}

TestCase('Element#GetAttrValue()') {
  elem = xml.Parse(sampleText1).root
  Tester(`elem.GetAttrValue(0))
  Tester(`elem.GetAttrValue(1))
  Tester(`elem.GetAttrValue('PurchaseOrderNumber'))
  Tester(`elem.GetAttrValue('OrderDate'))
}
