#!/usr/bin/env gurax
//==============================================================================
// test-conio.gura
//==============================================================================
import(util.tester) {*}
import(conio)

PushAnyKey(str = ' push any key ') = {
	[w, h] = conio.GetWinSize()
	conio.MoveTo((w - str.width) / 2, h / 2 - 3)
	conio.SetColor(`black, `white) { Print(str) }
	conio.WaitKey():raise
}

scope {
	conio.Clear()
	[w, h] = conio.GetWinSize()
	str = Chr(0x30 + [0..9].Cycle(w - 4)).Join()
	for (region in [`left, `right, `line]) {
		conio.Clear()
		Range(h) {|y| conio.MoveTo(0, y) { Printf('%s%4d', str, y) }}
		[x, y] = [Int(w / 2), Int(h / 2)]
		conio.MoveTo(x, y)
		Print('#')
		conio.MoveTo(x, y)
		conio.Clear(region)
		PushAnyKey(('Clear ' + region.ToString()).Center(20))
	}
}

scope {
	[w, h] = conio.GetWinSize()
	PrintFormatted(str:String) = Println(str.Center(w, '='))
	bg = `white
	conio.Clear()
	conio.SetColor(`red, bg) {
		PrintFormatted('red')
		conio.SetColor(`blue, bg) {
			PrintFormatted('blue')
			conio.SetColor(`green, bg) {
				PrintFormatted('green')
				conio.SetColor(`yellow, bg) {
					PrintFormatted('yellow')
				}
				PrintFormatted('green again')
				conio.SetColor(`bright_red, bg)
				PrintFormatted('bright_red')
				conio.SetColor(`bright_blue, bg)
				PrintFormatted('bright_blue')
				conio.SetColor(`bright_green, bg)
				PrintFormatted('bright_green')
			}
			PrintFormatted('blue again')
		}
		PrintFormatted('red again')
	}
	PushAnyKey()
}

conio.Clear()
