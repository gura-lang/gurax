#!/usr/bin/env gurax
import(conio)

ProgressBar = class {
	strHead as String
	nBarsMax as Number
	valueMax as Number
	nBars as Number = -1
	nColsValue as Number
	__init__(strHead as String, nBarsMax as Number, valueMax as Number) = {
		this.strHead = strHead
		this.nBarsMax = nBarsMax
		this.valueMax = valueMax
		this.nColsValue = Format('%d', valueMax).len
	}
	Reset() = {
		this.nBars = -1
	}
	SetValue(value as Number) = {
		nBarsCur = Int(this.nBarsMax * value / this.valueMax)
		(this.nBars == nBarsCur) && return(false)
		Printf('%s%s%s %*d/%d\r', this.strHead,
				'#' * nBarsCur, '-' * (this.nBarsMax - nBarsCur),
				this.nColsValue, value, this.valueMax)
		this.nBars = nBarsCur
		true
	}
	Clear() = conio.Clear(`line)
}

if (__name__ == '__main__') {
	ProgressBar('', 20, 10) {|progressBar|
		repeat (progressBar.valueMax + 1) {|value|
			progressBar.SetValue(value)
			os.Sleep(.1)
		}
		progressBar.Clear()
	}
	ProgressBar('', 20, 20) {|progressBar|
		repeat (progressBar.valueMax + 1) {|value|
			progressBar.SetValue(value)
			os.Sleep(.1)
		}
		progressBar.Clear()
	}
	ProgressBar('', 40, 10) {|progressBar|
		repeat (progressBar.valueMax + 1) {|value|
			progressBar.SetValue(value)
			os.Sleep(.1)
		}
		progressBar.Clear()
	}
	ProgressBar('', 40, 20) {|progressBar|
		repeat (progressBar.valueMax + 1) {|value|
			progressBar.SetValue(value)
			os.Sleep(.1)
		}
		progressBar.Clear()
	}
	ProgressBar(Format('Phase#%d,%d ', 3, 2), 20, 20) {|progressBar|
		repeat (progressBar.valueMax + 1) {|value|
			progressBar.SetValue(value)
			os.Sleep(.1)
		}
		Println()
	}
}
