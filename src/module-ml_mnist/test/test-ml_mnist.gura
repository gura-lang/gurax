#!/usr/bin/env gurax
//==============================================================================
// test-ml_mnist.gura
//==============================================================================
import(util.tester) {*}
import(ml.mnist)
import(ml.qmnist)
import(ml.kmnist)

db = ml.mnist.Database('.')
dbQ = ml.qmnist.Database('.')
dbK = ml.kmnist.Database('.')

TestCase('Basic test') {
	Printf('MNIST: nRows=%d, nCols=%d, nClasses=%d\n', db.nRows, db.nCols, db.nClasses)
	Printf('%s\n', db.train.imageSet)
	Printf('%s\n', db.train.labelSet)
	Printf('%s\n', db.test.imageSet)
	Printf('%s\n', db.test.labelSet)
	Printf('QMNIST: nRows=%d, nCols=%d, nClasses=%d\n', dbQ.nRows, dbQ.nCols, dbQ.nClasses)
	Printf('%s\n', dbQ.train.imageSet)
	Printf('%s\n', dbQ.train.labelSet)
	Printf('%s\n', dbQ.test.imageSet)
	Printf('%s\n', dbQ.test.labelSet)
	Printf('KMNIST: nRows=%d, nCols=%d, nClasses=%d\n', dbK.nRows, dbK.nCols, dbK.nClasses)
	Printf('%s\n', dbK.train.imageSet)
	Printf('%s\n', dbK.train.labelSet)
	Printf('%s\n', dbK.test.imageSet)
	Printf('%s\n', dbK.test.labelSet)
}

TestCase('ml.mnist.SampleSet#Each()') {
	[db, dbQ, dbK]:*train:*Each(`float)::Head(6) {|sample|
		Println(sample.label)
		ml.mnist.PrintImage(sample.input, guideFlag = false)
	}
}

TestCase('ml.mnist.SampleSet#EachBatch()') {
	[db, dbQ, dbK]:*train:*EachBatch(3, `float)::Head(2) {|sample|
		repeat (sample.input.shape[0]) {|i|
			Println(sample.label)
			ml.mnist.PrintImage(sample.input[i], guideFlag = false)
		}
	}
}

TestCase('ml.mnist.SampleSet#Get()') {
	[db, dbQ, dbK].Each {|db|
		repeat (6) {|i|
			sample = db.train.Get(i, `float)
			Println(sample.label)
			ml.mnist.PrintImage(sample.input, guideFlag = false)
		}
	}
}

TestCase('ml.mnist.SampleSet#Shuffle()') {
	rand = Random(0)
	repeat (3) {
		db.train.Shuffle(rand)
		sample = db.train.EachBatch(32, `float).NextValue()
		Println(sample.labels.Each():iter {|label| Format('%d', label)}.Join(','))
	}
}
