#!/usr/bin/env gurax
import(sdl) {*}
import(png)

SCREEN_WIDTH = 640;
SCREEN_HEIGHT = 480;

gWindow = nil
gScreenSurface = nil
gPNGSurface = nil

init() = {
	//Initialize SDL
	SDL_Init(SDL_INIT_VIDEO)
 	//Create window
 	gWindow:extern = gWindow = SDL_CreateWindow("SDL Tutorial", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN);
	//Get window surface
	gScreenSurface:extern = SDL_GetWindowSurface(gWindow);
}

loadMedia() = {
	//Load PNG surface
	gPNGSurface:extern = loadSurface("06_extension_libraries_and_loading_other_image_formats/loaded.png");
}

close() = {
	//Deallocate surface
	SDL_FreeSurface(gPNGSurface);
	gPNGSurface:extern = nil;
	//Destroy window
	SDL_DestroyWindow(gWindow);
	gWindow:extern = nil;
	//Quit SDL subsystems
	SDL_Quit();
}

loadSurface(path:String) = {
	//Load image at specified path
	loadedSurface = SDL_CreateRGBSurfaceFromImage(path);
	optimizedSurface = SDL_ConvertSurface(loadedSurface, gScreenSurface.format, 0);
	//Get rid of old loaded surface
	SDL_FreeSurface(loadedSurface);
	optimizedSurface
}

main() = {
	//Start up SDL and create window
	init()
	//Load media
	loadMedia()

	quit = false

	//Event handler
	e = SDL_Event()

	//While application is running
	while (!quit) {
		//Handle events on queue
		while (SDL_PollEvent(e) != 0) {
			//User requests quit
			if (e.type == SDL_QUIT) {
				quit = true;
			}
		}

		//Apply the image stretched
		SDL_BlitSurface(gPNGSurface, nil, gScreenSurface, nil);
	
		//Update the surface
		SDL_UpdateWindowSurface( gWindow );
	}

	//Free resources and close SDL
	close();
}

main()
