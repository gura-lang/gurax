#!/usr/bin/env gurax
/*This source code copyrighted by Lazy Foo' Productions (2004-2020)
and may not be redistributed without written permission.*/

import(sdl) {*}

SCREEN_WIDTH = 640;
SCREEN_HEIGHT = 480;

gWindow = nil
gScreenSurface = nil
gHelloWorld = nil

init() = {
	//Initialization flag
	success = true;

	//Initialize SDL
	if (SDL_Init(SDL_INIT_VIDEO) < 0) {
		Printf("SDL could not initialize! SDL_Error: %s\n", SDL_GetError());
		success = false;
	} else {
		//Create window
		gWindow:extern = gWindow = SDL_CreateWindow("SDL Tutorial", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN);
		if (!gWindow)  {
			Printf("Window could not be created! SDL_Error: %s\n", SDL_GetError());
			success = false;
		} else {
			//Get window surface
			gScreenSurface:extern = SDL_GetWindowSurface(gWindow);
		}
	}

	success
}

loadMedia() = {
	//Loading success flag
	success = true;

	//Load splash image
	gHelloWorld:extern = SDL_LoadBMP("02_getting_an_image_on_the_screen/hello_world.bmp");
	if (!gHelloWorld) {
		Printf("Unable to load image %s! SDL Error: %s\n", "02_getting_an_image_on_the_screen/hello_world.bmp", SDL_GetError());
		success = false;
	}

	success
}

close() = {
	//Deallocate surface
	SDL_FreeSurface(gHelloWorld);
	gHelloWorld:extern = nil;
	//Destroy window
	SDL_DestroyWindow(gWindow);
	gWindow:extern = nil;
	//Quit SDL subsystems
	SDL_Quit();
}

main() = {
	//Start up SDL and create window
	if (!init()) {
		Printf("Failed to initialize!\n");
	} else {
		//Load media
		if (!loadMedia()) {
			Printf("Failed to load media!\n");
		} else {
			//Apply the image
			SDL_BlitSurface(gHelloWorld, nil, gScreenSurface, nil);

			//Update the surface
			SDL_UpdateWindowSurface(gWindow);

			//Wait two seconds
			SDL_Delay(2000);
		}
	}

	//Free resources and close SDL
	close();
}

main()
