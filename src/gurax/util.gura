TestCase(title:String):void {`block} = {
	PrintTitle(title)
	block.Eval()
}

PrintTitle(title:String) = {
	Printf('======== %s ========\n', title)
}

Tester(expr:Expr):dynamic_scope = {
	Printf('%s ..', expr)
	rtn = expr.Eval()
	Printf(' %s\n', rtn):nomap
}

PrintPUnit(expr:Expr) = {
	seqIdOffset = 0
	punits = expr.EachPUnit()
	punit = punits.NextValue()
	seqIdOffset = punit.seqId
	while (punit) {
		Printf('  ##%d %s\n', punit.seqId - seqIdOffset, punit.ToString(seqIdOffset))
		punit = punits.NextValue()
	}
}
