#!./gurax
import(util)
tbl = [3, 1, 4, 1, 5, 9, 2, 6, 5, 3, 5, 8]
x = for (n in tbl):list { if (n % 2 == 0) { continue }; n * 2 }
Println(x)
/*
util.Tester(`tbl)
util.Tester(`(for (n in tbl):list { n * 2 }))
util.Tester(`(for (n in tbl):list {|i| n * 2 }))
//util.Tester(`(for (n in tbl):list { if (n % 2 == 0) { continue }; n * 2 }))
util.Tester(`(for (n in tbl):xlist { if (n % 2 == 0) { continue }; n * 2 }))
util.Tester(`(for (n in tbl):list { if (n % 2 == 0) { continue('x') }; n * 2 }))
*/
/*
for (n in []) {
	Printf('%d\n', n)
}
for (n in [3, 1, 4, 1, 5]) {
	Printf('%d\n', n)
}
for (n in [3, 1, 4, 1, 5]) {|i|
	Printf('#%d %d\n', i, n)
}
for (n1 in [3, 1, 4, 1, 5], n2 in [1, 4, 1, 4, 2]) {|i|
	Printf('#%d %d %d\n', i, n1, n2)
}
for (n1 in [3, 1, 4, 1, 5], n2 in [1, 4, 1, 4, 2], n3 in [1, 7, 3, 2, 0]) {|i|
	Printf('#%d %d %d %d\n', i, n1, n2, n3)
}
for (n1 in [3, 1, 4, 1, 5], n2 in [1, 4, 1]) {|i|
	Printf('#%d %d %d\n', i, n1, n2)
}
for (n1 in [3, 1, 4, 1, 5], n2 in [1, 4, 1, 4, 2], n3 in [1, 7, 3]) {|i|
	Printf('#%d %d %d %d\n', i, n1, n2, n3)
}
*/
