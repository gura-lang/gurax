--------
{`a}
  ##0 Jump(##4)
  ##1 BeginSequence(exit=##4)
  ##2 Lookup(`a)
  ##3 Return()
  ##4 Value(<Expr:`(a):PUnit#11>)
  ##5 Return()
--------
{`a; `b; `c}
  ##0 Jump(##4)
  ##1 BeginSequence(exit=##4)
  ##2 Lookup(`a)
  ##3 Return()
  ##4 Value(<Expr:`(a):PUnit#21>), DiscardValue()
  ##5 Jump(##9)
  ##6 BeginSequence(exit=##9)
  ##7 Lookup(`b)
  ##8 Return()
  ##9 Value(<Expr:`(b):PUnit#26>), DiscardValue()
  ##10 Jump(##14)
  ##11 BeginSequence(exit=##14)
  ##12 Lookup(`c)
  ##13 Return()
  ##14 Value(<Expr:`(c):PUnit#31>)
  ##15 Return()
--------
{a && b}
  ##0 Lookup(`a)
  ##1 KeepJumpIfNot(branchdest=##3)
  ##2 Lookup(`b)
  ##3 NoOperation()
  ##4 Return()
--------
{(a && b) && c}
  ##0 Lookup(`a)
  ##1 KeepJumpIfNot(branchdest=##3)
  ##2 Lookup(`b)
  ##3 NoOperation()
  ##4 KeepJumpIfNot(branchdest=##6)
  ##5 Lookup(`c)
  ##6 NoOperation()
  ##7 Return()
--------
{a || b}
  ##0 Lookup(`a)
  ##1 KeepJumpIf(branchdest=##3)
  ##2 Lookup(`b)
  ##3 NoOperation()
  ##4 Return()
--------
{(a || b) || c}
  ##0 Lookup(`a)
  ##1 KeepJumpIf(branchdest=##3)
  ##2 Lookup(`b)
  ##3 NoOperation()
  ##4 KeepJumpIf(branchdest=##6)
  ##5 Lookup(`c)
  ##6 NoOperation()
  ##7 Return()
--------
3 + 5
  ##0 Value(<Number:3>)
  ##1 Value(<Number:5>)
  ##2 BinaryOp(+)
  ##3 Return()
--------
false && false
  ##0 Lookup(`false)
  ##1 KeepJumpIfNot(branchdest=##3)
  ##2 Lookup(`false)
  ##3 NoOperation()
  ##4 Return()
true && true .. true
true && false .. false
false && true .. false
false && false .. false
true || true .. true
true || false .. true
false || true .. true
false || false .. false
'hello' && 'world' .. world
'hello' && false .. false
false && 'hello' .. false
'hello' && true .. true
true && 'hello' .. hello
'hello' || 'world' .. hello
'hello' || false .. hello
false || 'hello' .. hello
'hello' || true .. hello
true || 'hello' .. true
