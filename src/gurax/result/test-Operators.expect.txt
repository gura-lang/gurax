--------
{`a}
  ##0 Jump(##3)
  ##1 BeginSequence(sentinel=##3)
  ##2 Lookup(`a)
  ##3 Value(<Expr:`(a):PUnit#11>)
--------
{`a; `b; `c}
  ##0 Jump(##3)
  ##1 BeginSequence(sentinel=##3)
  ##2 Lookup(`a)
  ##3 Value(<Expr:`(a):PUnit#19>), DiscardValue()
  ##4 Jump(##7)
  ##5 BeginSequence(sentinel=##7)
  ##6 Lookup(`b)
  ##7 Value(<Expr:`(b):PUnit#23>), DiscardValue()
  ##8 Jump(##11)
  ##9 BeginSequence(sentinel=##11)
  ##10 Lookup(`c)
  ##11 Value(<Expr:`(c):PUnit#27>)
--------
{a && b}
  ##0 Lookup(`a)
  ##1 KeepJumpIfNot(branchdest=##3)
  ##2 Lookup(`b)
  ##3 NoOperation()
--------
{(a && b) && c}
  ##0 Lookup(`a)
  ##1 KeepJumpIfNot(branchdest=##3)
  ##2 Lookup(`b)
  ##3 NoOperation()
  ##4 KeepJumpIfNot(branchdest=##6)
  ##5 Lookup(`c)
  ##6 NoOperation()
--------
{a || b}
  ##0 Lookup(`a)
  ##1 KeepJumpIf(branchdest=##3)
  ##2 Lookup(`b)
  ##3 NoOperation()
--------
{(a || b) || c}
  ##0 Lookup(`a)
  ##1 KeepJumpIf(branchdest=##3)
  ##2 Lookup(`b)
  ##3 NoOperation()
  ##4 KeepJumpIf(branchdest=##6)
  ##5 Lookup(`c)
  ##6 NoOperation()
--------
3 + 5
  ##0 Value(<Number:3>)
  ##1 Value(<Number:5>)
  ##2 BinaryOp(+)
--------
false && false
  ##0 Lookup(`false)
  ##1 KeepJumpIfNot(branchdest=##3)
  ##2 Lookup(`false)
  ##3 NoOperation()
======== Operator .. ========
1 .. 10 .. <Iterator:Range:begin=1:end=11:step=1>
1 .. 1 .. <Iterator:Range:begin=1:end=2:step=1>
1 .. 0 .. <Iterator:Range:begin=1:end=-1:step=-1>
1 .. (-10) .. <Iterator:Range:begin=1:end=-11:step=-1>
======== Operators && and || ========
true && true .. true
true && false .. false
false && true .. false
false && false .. false
true || true .. true
true || false .. true
false || true .. true
false || false .. false
'hello' && 'world' .. world
'hello' && false .. false
false && 'hello' .. false
'hello' && true .. true
true && 'hello' .. hello
'hello' || 'world' .. hello
'hello' || false .. hello
false || 'hello' .. hello
'hello' || true .. hello
true || 'hello' .. true
