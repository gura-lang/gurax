#!/usr/bin/env gurax
import(util.modbuild)

builder = util.modbuild.Builder('re')
builder.pathNamesSrc = [
	'module-re.cpp', 'Common.cpp', 'Group.cpp', 'Iterators.cpp', 'Match.cpp', 'Pattern.cpp',
	'VType_Group.cpp', 'VType_Match.cpp', 'VType_Pattern.cpp'
]
builder.pathNamesScript = [
	'script/sed.gura', 'script/sed.doc.gura', 'script/tokenizer.gura', 'script/tokenizer.doc.gura'
]
/*
if (sys.platform == `mswin) {
	baseDir = path.join(builder.guestDir, 'onig-5.9.5')
	builder.incDirs.append(baseDir)
	builder.libDirs.append(baseDir)
	builder.libs.append('onig_s.lib')
	builder.cflags.append('-DONIG_EXTERN=extern')
} elsif (sys.platform == `linux) {
	builder.libs.append('onig')
	builder.debFiles = ['libonig']
	builder.rpmFiles = ['oniguruma']
	builder.debFilesDevel = ['libonig-dev']
	builder.rpmFilesDevel = ['oniguruma-devel']
} elsif (sys.platform == `darwin) {
	builder.incDirs.append('guest/include/onig')
	builder.libDirs.append('guest/lib')
	builder.libs.append('onig')
	builder.cflags.append('-DONIG_EXTERN=extern')
}
*/
builder.dirNamesInc.Append('guest/include/onigmo')
builder.dirNamesLib.Append('guest/lib')
builder.libs.Append('onigmo')
builder.Run()
