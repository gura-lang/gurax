#!/usr/bin/env gurax
//==============================================================================
// util.builder.gura
//==============================================================================

//------------------------------------------------------------------------------
// BuildRule
//------------------------------------------------------------------------------
BuildRule = struct {
	pathNameTgt:String
	pathNamesSrc[]:String
	func:Function
	Execute() = {
		if (!fs.Exists(this.pathNameTgt) || \
			(fs.Stat(this.pathNameTgt).mtime < fs.Stat(this.pathNamesSrc):*mtime).Or()) {
			this.func()
		} else {
			true
		}
	}
}

//------------------------------------------------------------------------------
// Builder
//------------------------------------------------------------------------------
Builder = class {
	cflags = [
		'-DGURA_MODULE_SEPARATED', '-fPIC'
	]
	ldflags = ['-shared']
	libs = []
	__init__() = {
	}
	Exec(pathName:String, args*:String) = {
		rtn = (os.Exec(pathName, args*) == 0)
		rtn
	}
	Compile(pathNameSrc:String) = {
		this.Exec('gcc', cflags*, '-o', pathNameObj, '-c', pathNameSrc)
	}
	Build(name:String, pathNamesSrc[]:String) = {
		pathNameTgt = name + '.gurd'
		
	}
}
