#!/usr/bin/env gurax
import(util.tester) {*}
import(tar)

TestCase('Property') {
	tar.Stat.PrintPropSlots()
	tar.Reader.PrintPropSlots()
	tar.Writer.PrintPropSlots()
	tar.bzip2.PrintPropSlots()
	tar.gzip.PrintPropSlots()
}

TestCase('Archive test') {
	Entry = struct { fileName:String, buff:Binary }
	r = Random(0)
	entries = repeat (100):list {|i|
		buff = Binary()
		buff.p.Put(`uint8, r.IntSeq(256, r.Int(50000) + 1))
		Entry(Format('entry%d.bin', i + 1), buff)
	}
	for (compress in [`none, `gzip, `bzip2]) {
		Printf('tar compression: %s\n', compress)
		buff = Binary()
		tar.Writer(buff, compress).Add(entries:*buff, entries:*fileName)
		for (entry in entries, stream in tar.Reader(buff, compress).EachEntry()) {
			buffRead = stream.Read()
			Printf('%-12s %5dbytes Verify:%s\n', stream.identifier, stream.stat.size,
										cond(entry.buff == buffRead, 'OK', '*NG*'))
		}
	}
}

TestCase('Codec') {
	[nil, 'sjis', 'utf8', 'utf16le', 'utf16be', 'utf32le', 'utf32be'].Each {|codec|
		Printf('Codec:%s\n', codec || 'nil')
		tar.codec = codec
		Binary {|buff|
			w = tar.Writer(buff)
			w.Add(b'', [
				'\xe4\xbb\x95\xe6\xa7\x98\xe6\x9b\xb8\x2e\x64\x6f\x63'
				'\xe5\x8f\x96\xe3\x82\x8a\xe6\x89\xb1\xe3\x81\x84\xe8\xaa\xac\xe6\x98\x8e\xe6\x9b\xb8\x2e\x64\x6f\x63'
				'\x32\x30\x32\x30\xe4\xb8\x8a\xe5\x8d\x8a\xe6\x9c\x9f\xe5\x96\xb6\xe6\xa5\xad\xe5\xa0\xb1\xe5\x91\x8a\xe6\x9b\xb8\x2e\x78\x6c\x73'
				'\x32\x30\x32\x30\xe4\xb8\x8b\xe5\x8d\x8a\xe6\x9c\x9f\xe5\x96\xb6\xe6\xa5\xad\xe5\xa0\xb1\xe5\x91\x8a\xe6\x9b\xb8\x2e\x78\x6c\x73'
				'\xe3\x82\xa4\xe3\x83\xa9\xe3\x82\xb9\xe3\x83\x88\xe6\xa1\x88\xef\xbc\x91\x2e\x70\x6e\x67'
				'\xe3\x82\xa4\xe3\x83\xa9\xe3\x82\xb9\xe3\x83\x88\xe6\xa1\x88\xef\xbc\x92\x2e\x70\x6e\x67'
				'\xe3\x82\xa4\xe3\x83\xa9\xe3\x82\xb9\xe3\x83\x88\xe6\xa1\x88\xef\xbc\x93\x2e\x70\x6e\x67'])
			w.Close()
			r = tar.Reader(buff)
			Println('  ', r.EachEntry():*stat:*name@tar)
			Println('  ', path.Walk(tar.Directory(buff)))
		}
	}
	tar.codec = nil
}

TestCase('path.Walk() in tar file') {
	Println(path.Walk('zerofiles.tar/'))
}

TestCase('path.Walk() with tar.Directory') {
	Println(path.Walk(tar.Directory('zerofiles.tar')))
}

TestCase('tar.Reader#EachEntry()') {
	Println(tar.Reader('zerofiles.tar').EachEntry():*stat:*name@tar)
}
