#!/usr/bin/env gurax
import(ml.cifar):binary {*}

Cifar10 = class(Cifar) {
	__init__(pathNameTar as String, type as Symbol) = {|false|
		if (path.ExtName(pathNameTar).Lower() != '.gz') {
			pathNameTar = path.Join(pathNameTar, 'cifar-10-binary.tar.gz')
		}
		if (type == `train) {
			fileNames = [
				'data_batch_1.bin', 'data_batch_2.bin', 'data_batch_3.bin', 'data_batch_4.bin', 'data_batch_5.bin'
			]
		} elsif (type == `test) {
			fileNames = ['test_batch.bin']
		} else {
			Error.Raise(Error.SymbolError, 'specify `train or `test')
		}
		tar.Reader(pathNameTar).EachEntry {|stream|
			(stream.identifier in fileNames) && this.Read(stream)
		}
	}
}

Cifar100 = class(Cifar) {
	__init__(pathNameTar as String, type as Symbol) = {|true|
		if (path.ExtName(pathNameTar).Lower() != '.gz') {
			pathNameTar = path.Join(pathNameTar, 'cifar-100-binary.tar.gz')
		}
		if (type == `train) {
			fileNames = ['train.bin']
		} elsif (type == `test) {
			fileNames = ['test.bin']
		} else {
			Error.Raise(Error.SymbolError, 'specify `train or `test')
		}
		tar.Reader(pathNameTar).EachEntry {|stream|
			(stream.identifier in fileNames) && this.Read(stream)
		}
	}
}
