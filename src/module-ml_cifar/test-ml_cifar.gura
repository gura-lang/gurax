#!/usr/bin/env gurax
//==============================================================================
// test-ml_cifar.gura
//==============================================================================
import(util.tester) {*}
import(ml.cifar10)
import(ml.cifar100)
import(tar)

pattern = [' ', '.', ':', '#', '#']

PrintImage(array as Array, out as Stream = sys.cout, guideFlag as Bool = true, numCeil as Number = 1.) = {
	if (guideFlag) {
		out.Printf('  0123456789012345678901234567\n')
		arrayGray = 0.299 * array[0] + 0.587 * array[1] + 0.114 * array[2]
		arrayGray.ToList().Each {|row, iRow| out.Printf('%2d%s\n', iRow, pattern.Get(row * 4 / numCeil).Join())}
	} else {
		array.ToList().Each {|row, iRow| out.Printf('%s\n', pattern.Get(row * 4 / numCeil).Join())}
	}
}

TestCase('Basic test') {
	//db = ml.cifar10.Database('.')
	db = ml.cifar100.Database('.')
	Println(db.train)
	Println(db.test)
	db.train.Each(`float) {|pair|
		[image, label] = pair
		Println(db.labelNames[label.ArgMax()])
		PrintImage(image, guideFlag = true)
	}
}
