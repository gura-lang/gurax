#!/usr/bin/env gurax
import(jpeg)
import(argopt)

tmplHelp = tR'''
usage: jpeg-editskeleton.gura file
'''

argopt.Parser {|p|
	[argv, opt] = p.Parse(sys.argv)
	if (argv.len < 1) {
		tmplHelp.Render(sys.cerr)
		sys.Exit(1)
	}
	fileNameSrc = argv[0]
	fields = path.SplitExt(fileNameSrc)
	fileNameDst = fields[0] + '.edit' + fields[1]
}

contentSrc = jpeg.Content(fileNameSrc)
contentDst = jpeg.Content()
contentSrc.EachSegment {|segment|
	Println(segment.markerSymbol)
	if (segment.IsExif()) {
		exifSrc = segment
		exifDst = jpeg.Exif()
		if (exifSrc.ifd0) {
			ifdDst = jpeg.IFD(exifSrc.ifd0.symbol)
			exifSrc.ifd0.EachTag {|tag|
				ifdDst.AddTag(tag)
			}
			exifDst.ifd0 = ifdDst
		}
		if (exifSrc.ifd1) {
			ifdDst = jpeg.IFD(exifSrc.ifd1.symbol)
			exifSrc.ifd1.EachTag {|tag|
				ifdDst.AddTag(tag)
			}
			exifDst.ifd1 = ifdDst
		}
		contentDst.AddSegment(exifDst)
	} elsif (segment.IsJFIF()) {
		contentDst.AddSegment(segment)
	} else {
		contentDst.AddSegment(segment)
	}
}
contentDst.buffImage = contentSrc.buffImage
contentDst.Write(fileNameDst)
Printf('%s was created\n', fileNameDst)
