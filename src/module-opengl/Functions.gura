#!/usr/bin/env gurax
import(cbridge)

r = cbridge.Renderer()

//------------------------------------------------------------------------------
// Type Information
//------------------------------------------------------------------------------
r.DeclareType_Number('GLenum')
r.DeclareType_Number('GLbitfield')
r.DeclareType_Number('GLuint')
r.DeclareType_Number('GLint')
r.DeclareType_Number('GLsizei')
r.DeclareType_Number('GLbyte')
r.DeclareType_Number('GLshort')
r.DeclareType_Number('GLubyte')
r.DeclareType_Number('GLushort')
r.DeclareType_Number('GLulong')
r.DeclareType_Number('GLfloat')
r.DeclareType_Number('GLclampf')
r.DeclareType_Number('GLdouble')
r.DeclareType_Number('GLclampd')
r.DeclareType_Number('GLint64')
r.DeclareType_Number('GLuint64')
r.DeclareType_Number('GLsync')
r.DeclareType_Number('GLchar')
r.DeclareType_Number('GLintptr')
r.DeclareType_Number('GLsizeiptr')
r.DeclareType_Number('GLint64EXT')
r.DeclareType_Number('GLuint64EXT')
//r.DeclareType(GLvoid)
r.DeclareType('GLboolean', 'GLboolean', 'Bool',
	codePicker = R'''
	${this.cType} ${varName} = static_cast<GLboolean>(args_gurax.PickBool());
	'''
	codePickerValidation = R'''
	${this.cType} ${varName} = args_gurax.IsValid()? static_cast<GLboolean>(args_gurax.PickBool()) : GL_FALSE;
	'''
	codePickerVec = R'''
	auto ${varName} = args_gurax.PickListT<GLboolean>([](Gurax::Value& value) {
		return value.GetBool()? GL_TRUE : GL_FALSE;
	});
	'''
	codeFunctionBody = R'''
	${this.cType} rtn = ${caller};
	return new Gurax::Value_Bool(!!rtn);
	''')

r.DeclareType('String_const_GLchar_p', 'const GLchar*', 'String',
	codePicker = R'''
	${this.cType} ${varName} = reinterpret_cast<${this.cType}>(args_gurax.PickString());
	'''
	codePickerValidation = R'''
	${this.cType} ${varName} = args_gurax.IsValid()? reinterpret_cast<${this.cType}>(args_gurax.PickString()) : nullptr;
	'''
	codePickerVec = R'''
	auto ${varName} = args_gurax.PickListT<${this.cType}>([](Gurax::Value& value) {
		return reinterpret_cast<${this.cType}>(Gurax::Value_String::GetString(value));
	});
	'''
	codeFunctionBody = R'''
	${this.cType} rtn = ${caller};
	return new Gurax::Value_String(reinterpret_cast<const char*>(rtn));
	''')

r.DeclareType('Number_const_void_p', 'const void*', 'Number',
	codePicker = R'''
	${this.cType} ${varName} = reinterpret_cast<${this.cType}>(args_gurax.PickNumber<size_t>());
	'''
	codePickerValidation = R'''
	${this.cType} ${varName} = args_gurax.IsValid()? reinterpret_cast<${this.cType}>(args_gurax.PickNumber<size_t>()) : nullptr;
	''')

r.DeclareType('Return_void_p', 'void*', 'Pointer',
	codeFunctionBody = R'''
	${this.cType} rtn = ${caller};
	return new Gurax::Value_Pointer(new Pointer_Memory(new MemorySloth(rtn)));
	''')

r.DeclareType('String_const_GLubyte_p', 'const GLubyte*', 'String',
	codePicker = R'''
	${this.cType} ${varName} = reinterpret_cast<${this.cType}>(args_gurax.PickString());
	'''
	codePickerValidation = R'''
	${this.cType} ${varName} = args_gurax.IsValid()? reinterpret_cast<${this.cType}>(args_gurax.PickString()) : nullptr;
	'''
	codePickerVec = R'''
	auto ${varName} = args_gurax.PickListT<${this.cType}>([](Gurax::Value& value) {
		return reinterpret_cast<${this.cType}>(Gurax::Value_String::GetString(value));
	});
	'''
	codeFunctionBody = R'''
	${this.cType} rtn = ${caller};
	return new Gurax::Value_String(reinterpret_cast<const char*>(rtn));
	''')

r.DeclareType_Pointer('const_GLboolean_p', 'const GLboolean*')
r.DeclareType_Pointer('const_GLenum_p', 'const GLenum*')
r.DeclareType_Pointer('const_GLbitfield_p', 'const GLbitfield*')
r.DeclareType_Pointer('const_GLuint_p', 'const GLuint*')
r.DeclareType_Pointer('const_GLint_p', 'const GLint*')
r.DeclareType_Pointer('const_GLsizei_p', 'const GLsizei*')
r.DeclareType_Pointer('const_GLbyte_p', 'const GLbyte*')
r.DeclareType_Pointer('const_GLshort_p', 'const GLshort*')
r.DeclareType_Pointer('const_GLubyte_p', 'const GLubyte*')
r.DeclareType_Pointer('const_GLushort_p', 'const GLushort*')
r.DeclareType_Pointer('const_GLulong_p', 'const GLulong*')
r.DeclareType_Pointer('const_GLfloat_p', 'const GLfloat*')
r.DeclareType_Pointer('const_GLclampf_p', 'const GLclampf*')
r.DeclareType_Pointer('const_GLdouble_p', 'const GLdouble*')
r.DeclareType_Pointer('const_GLclampd_p', 'const GLclampd*')
r.DeclareType_Pointer('const_GLint64_p', 'const GLint64*')
r.DeclareType_Pointer('const_GLuint64_p', 'const GLuint64*')
r.DeclareType_Pointer('const_GLsync_p', 'const GLsync*')
r.DeclareType_Pointer('const_GLchar_p', 'const GLchar*')
r.DeclareType_Pointer('const_GLintptr_p', 'const GLintptr*')
r.DeclareType_Pointer('const_GLsizeiptr_p', 'const GLsizeiptr*')
r.DeclareType_Pointer('const_GLvoid_p', 'const GLvoid*')
r.DeclareType_Pointer('const_GLint64EXT_p', 'const GLint64EXT*')
r.DeclareType_Pointer('const_GLuint64EXT_p', 'const GLuint64EXT*')

r.DeclareType_WritablePointer('GLboolean_p', 'GLboolean*')
r.DeclareType_WritablePointer('GLenum_p', 'GLenum*')
r.DeclareType_WritablePointer('GLbitfield_p', 'GLbitfield*')
r.DeclareType_WritablePointer('GLuint_p', 'GLuint*')
r.DeclareType_WritablePointer('GLint_p', 'GLint*')
r.DeclareType_WritablePointer('GLsizei_p', 'GLsizei*')
r.DeclareType_WritablePointer('GLbyte_p', 'GLbyte*')
r.DeclareType_WritablePointer('GLshort_p', 'GLshort*')
r.DeclareType_WritablePointer('GLubyte_p', 'GLubyte*')
r.DeclareType_WritablePointer('GLushort_p', 'GLushort*')
r.DeclareType_WritablePointer('GLulong_p', 'GLulong*')
r.DeclareType_WritablePointer('GLfloat_p', 'GLfloat*')
r.DeclareType_WritablePointer('GLclampf_p', 'GLclampf*')
r.DeclareType_WritablePointer('GLdouble_p', 'GLdouble*')
r.DeclareType_WritablePointer('GLclampd_p', 'GLclampd*')
r.DeclareType_WritablePointer('GLint64_p', 'GLint64*')
r.DeclareType_WritablePointer('GLuint64_p', 'GLuint64*')
r.DeclareType_WritablePointer('GLsync_p', 'GLsync*')
r.DeclareType_WritablePointer('GLchar_p', 'GLchar*')
r.DeclareType_WritablePointer('GLintptr_p', 'GLintptr*')
r.DeclareType_WritablePointer('GLsizeiptr_p', 'GLsizeiptr*')
r.DeclareType_WritablePointer('GLvoid_p', 'GLvoid*')
r.DeclareType_Pointer('GLint64EXT_p', 'GLint64EXT*')
r.DeclareType_Pointer('GLuint64EXT_p', 'GLuint64EXT*')

//------------------------------------------------------------------------------
// Function Registration: Context
//------------------------------------------------------------------------------
r.Register('opengl') {

//======== GLEW ========
glewInit() as GLenum

glewIsSupported(name as const_char_p) as GLboolean

glewGetExtension(name as const_char_p) as GLboolean

glewGetErrorString(error as GLenum) as String_const_GLubyte_p

glewGetString(name as GLenum) as String_const_GLubyte_p

//======== GL_VERSION_1_1 ========
glAccum(op as GLenum, value as GLfloat)

glAlphaFunc(func as GLenum, ref as GLclampf):void

glAreTexturesResident(n as GLsizei, textures as const_GLuint_p, residences:nil as GLboolean_p) as GLboolean

glArrayElement(i as GLint):void

glBegin(mode as GLenum):void

glBindTexture(target as GLenum, texture as GLuint):void

glBitmap(width as GLsizei, height as GLsizei, xorig as GLfloat, yorig as GLfloat, xmove as GLfloat, ymove as GLfloat, bitmap:nil as const_GLubyte_p):void

glBlendFunc(sfactor as GLenum, dfactor as GLenum):void

glCallList(list as GLuint):void

glCallLists(n as GLsizei, type as GLenum, lists:nil as const_void_p):void

glClear(mask as GLbitfield):void

glClearAccum(red as GLfloat, green as GLfloat, blue as GLfloat, alpha as GLfloat):void

glClearColor(red as GLclampf, green as GLclampf, blue as GLclampf, alpha as GLclampf):void

glClearDepth(depth as GLclampd):void

glClearIndex(c as GLfloat):void

glClearStencil(s as GLint):void

glClipPlane(plane as GLenum, equation as const_GLdouble_p):void

glColor3b(red as GLbyte, green as GLbyte, blue as GLbyte):void

glColor3bv(v as const_GLbyte_p):void

glColor3d(red as GLdouble, green as GLdouble, blue as GLdouble):void

glColor3dv(v as const_GLdouble_p):void

glColor3f(red as GLfloat, green as GLfloat, blue as GLfloat):void

glColor3fv(v as const_GLfloat_p):void

glColor3i(red as GLint, green as GLint, blue as GLint):void

glColor3iv(v as const_GLint_p):void

glColor3s(red as GLshort, green as GLshort, blue as GLshort):void

glColor3sv(v as const_GLshort_p):void

glColor3ub(red as GLubyte, green as GLubyte, blue as GLubyte):void

glColor3ubv(v as const_GLubyte_p):void

glColor3ui(red as GLuint, green as GLuint, blue as GLuint):void

glColor3uiv(v as const_GLuint_p):void

glColor3us(red as GLushort, green as GLushort, blue as GLushort):void

glColor3usv(v as const_GLushort_p):void

glColor4b(red as GLbyte, green as GLbyte, blue as GLbyte, alpha as GLbyte):void

glColor4bv(v as const_GLbyte_p):void

glColor4d(red as GLdouble, green as GLdouble, blue as GLdouble, alpha as GLdouble):void

glColor4dv(v as const_GLdouble_p):void

glColor4f(red as GLfloat, green as GLfloat, blue as GLfloat, alpha as GLfloat):void

glColor4fv(v as const_GLfloat_p):void

glColor4i(red as GLint, green as GLint, blue as GLint, alpha as GLint):void

glColor4iv(v as const_GLint_p):void

glColor4s(red as GLshort, green as GLshort, blue as GLshort, alpha as GLshort):void

glColor4sv(v as const_GLshort_p):void

glColor4ub(red as GLubyte, green as GLubyte, blue as GLubyte, alpha as GLubyte):void

glColor4ubv(v as const_GLubyte_p):void

glColor4ui(red as GLuint, green as GLuint, blue as GLuint, alpha as GLuint):void

glColor4uiv(v as const_GLuint_p):void

glColor4us(red as GLushort, green as GLushort, blue as GLushort, alpha as GLushort):void

glColor4usv(v as const_GLushort_p):void

glColorMask(red as GLboolean, green as GLboolean, blue as GLboolean, alpha as GLboolean):void

glColorMaterial(face as GLenum, mode as GLenum):void

glColorPointer(size as GLint, type as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

glCopyPixels(x as GLint, y as GLint, width as GLsizei, height as GLsizei, type as GLenum):void

glCopyTexImage1D(target as GLenum, level as GLint, internalFormat as GLenum, x as GLint, y as GLint, width as GLsizei, border as GLint):void

glCopyTexImage2D(target as GLenum, level as GLint, internalFormat as GLenum, x as GLint, y as GLint, width as GLsizei, height as GLsizei, border as GLint):void

glCopyTexSubImage1D(target as GLenum, level as GLint, xoffset as GLint, x as GLint, y as GLint, width as GLsizei):void

glCopyTexSubImage2D(target as GLenum, level as GLint, xoffset as GLint, yoffset as GLint, x as GLint, y as GLint, width as GLsizei, height as GLsizei):void

glCullFace(mode as GLenum):void

glDeleteLists(list as GLuint, range as GLsizei):void

glDeleteTextures(n as GLsizei, textures as const_GLuint_p):void

glDepthFunc(func as GLenum):void

glDepthMask(flag as GLboolean):void

glDepthRange(zNear as GLclampd, zFar as GLclampd):void

glDisable(cap as GLenum):void

glDisableClientState(array as GLenum):void

glDrawArrays(mode as GLenum, first as GLint, count as GLsizei):void

glDrawBuffer(mode as GLenum):void

glDrawElements(mode as GLenum, count as GLsizei, type as GLenum, indices:nil as const_void_p):void

glDrawPixels(width as GLsizei, height as GLsizei, format as GLenum, type as GLenum, pixels:nil as const_void_p):void

glEdgeFlag(flag as GLboolean):void

glEdgeFlagPointer(stride as GLsizei, pointer:nil as const_void_p):void

glEdgeFlagv(flag as const_GLboolean_p):void

glEnable(cap as GLenum):void

glEnableClientState(array as GLenum):void

glEnd():void

glEndList():void

glEvalCoord1d(u as GLdouble):void

glEvalCoord1dv(u as const_GLdouble_p):void

glEvalCoord1f(u as GLfloat):void

glEvalCoord1fv(u as const_GLfloat_p):void

glEvalCoord2d(u as GLdouble, v as GLdouble):void

glEvalCoord2dv(u as const_GLdouble_p):void

glEvalCoord2f(u as GLfloat, v as GLfloat):void

glEvalCoord2fv(u as const_GLfloat_p):void

glEvalMesh1(mode as GLenum, i1 as GLint, i2 as GLint):void

glEvalMesh2(mode as GLenum, i1 as GLint, i2 as GLint, j1 as GLint, j2 as GLint):void

glEvalPoint1(i as GLint):void

glEvalPoint2(i as GLint, j as GLint):void

glFeedbackBuffer(size as GLsizei, type as GLenum, buffer:nil as GLfloat_p):void

glFinish():void

glFlush():void

glFogf(pname as GLenum, param as GLfloat):void

glFogfv(pname as GLenum, params as const_GLfloat_p):void

glFogi(pname as GLenum, param as GLint):void

glFogiv(pname as GLenum, params as const_GLint_p):void

glFrontFace(mode as GLenum):void

glFrustum(left as GLdouble, right as GLdouble, bottom as GLdouble, top as GLdouble, zNear as GLdouble, zFar as GLdouble):void

glGenLists(range as GLsizei) as GLuint

glGenTextures(n as GLsizei, textures:nil as GLuint_p):void

glGetBooleanv(pname as GLenum, params:nil as GLboolean_p):void

glGetClipPlane(plane as GLenum, equation:nil as GLdouble_p):void

glGetDoublev(pname as GLenum, params:nil as GLdouble_p):void

glGetError() as GLenum

glGetFloatv(pname as GLenum, params:nil as GLfloat_p):void

glGetIntegerv(pname as GLenum, params:nil as GLint_p):void

glGetLightfv(light as GLenum, pname as GLenum, params:nil as GLfloat_p):void

glGetLightiv(light as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetMapdv(target as GLenum, query as GLenum, v:nil as GLdouble_p):void

glGetMapfv(target as GLenum, query as GLenum, v:nil as GLfloat_p):void

glGetMapiv(target as GLenum, query as GLenum, v:nil as GLint_p):void

glGetMaterialfv(face as GLenum, pname as GLenum, params:nil as GLfloat_p):void

glGetMaterialiv(face as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetPixelMapfv(map as GLenum, values:nil as GLfloat_p):void

glGetPixelMapuiv(map as GLenum, values:nil as GLuint_p):void

glGetPixelMapusv(map as GLenum, values:nil as GLushort_p):void

//glGetPointerv(pname as GLenum, params as const_void_p_p):void

glGetPolygonStipple(mask:nil as GLubyte_p):void

glGetString(name as GLenum) as String_const_GLubyte_p

glGetTexEnvfv(target as GLenum, pname as GLenum, params:nil as GLfloat_p):void

glGetTexEnviv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetTexGendv(coord as GLenum, pname as GLenum, params:nil as GLdouble_p):void

glGetTexGenfv(coord as GLenum, pname as GLenum, params:nil as GLfloat_p):void

glGetTexGeniv(coord as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetTexImage(target as GLenum, level as GLint, format as GLenum, type as GLenum, pixels:nil as void_p):void

glGetTexLevelParameterfv(target as GLenum, level as GLint, pname as GLenum, params:nil as GLfloat_p):void

glGetTexLevelParameteriv(target as GLenum, level as GLint, pname as GLenum, params:nil as GLint_p):void

glGetTexParameterfv(target as GLenum, pname as GLenum, params:nil as GLfloat_p):void

glGetTexParameteriv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glHint(target as GLenum, mode as GLenum):void

glIndexMask(mask as GLuint):void

glIndexPointer(type as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

glIndexd(c as GLdouble):void

glIndexdv(c as const_GLdouble_p):void

glIndexf(c as GLfloat):void

glIndexfv(c as const_GLfloat_p):void

glIndexi(c as GLint):void

glIndexiv(c as const_GLint_p):void

glIndexs(c as GLshort):void

glIndexsv(c as const_GLshort_p):void

glIndexub(c as GLubyte):void

glIndexubv(c as const_GLubyte_p):void

glInitNames():void

glInterleavedArrays(format as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

glIsEnabled(cap as GLenum) as GLboolean

glIsList(list as GLuint) as GLboolean

glIsTexture(texture as GLuint) as GLboolean

glLightModelf(pname as GLenum, param as GLfloat):void

glLightModelfv(pname as GLenum, params as const_GLfloat_p):void

glLightModeli(pname as GLenum, param as GLint):void

glLightModeliv(pname as GLenum, params as const_GLint_p):void

glLightf(light as GLenum, pname as GLenum, param as GLfloat):void

glLightfv(light as GLenum, pname as GLenum, params as const_GLfloat_p):void

glLighti(light as GLenum, pname as GLenum, param as GLint):void

glLightiv(light as GLenum, pname as GLenum, params as const_GLint_p):void

glLineStipple(factor as GLint, pattern as GLushort):void

glLineWidth(width as GLfloat):void

glListBase(base as GLuint):void

glLoadIdentity():void

glLoadMatrixd(m as const_GLdouble_p):void

glLoadMatrixf(m as const_GLfloat_p):void

glLoadName(name as GLuint):void

glLogicOp(opcode as GLenum):void

glMap1d(target as GLenum, u1 as GLdouble, u2 as GLdouble, stride as GLint, order as GLint, points as const_GLdouble_p):void

glMap1f(target as GLenum, u1 as GLfloat, u2 as GLfloat, stride as GLint, order as GLint, points as const_GLfloat_p):void

glMap2d(target as GLenum, u1 as GLdouble, u2 as GLdouble, ustride as GLint, uorder as GLint, v1 as GLdouble, v2 as GLdouble, vstride as GLint, vorder as GLint, points as const_GLdouble_p):void

glMap2f(target as GLenum, u1 as GLfloat, u2 as GLfloat, ustride as GLint, uorder as GLint, v1 as GLfloat, v2 as GLfloat, vstride as GLint, vorder as GLint, points as const_GLfloat_p):void

glMapGrid1d(un as GLint, u1 as GLdouble, u2 as GLdouble):void

glMapGrid1f(un as GLint, u1 as GLfloat, u2 as GLfloat):void

glMapGrid2d(un as GLint, u1 as GLdouble, u2 as GLdouble, vn as GLint, v1 as GLdouble, v2 as GLdouble):void

glMapGrid2f(un as GLint, u1 as GLfloat, u2 as GLfloat, vn as GLint, v1 as GLfloat, v2 as GLfloat):void

glMaterialf(face as GLenum, pname as GLenum, param as GLfloat):void

glMaterialfv(face as GLenum, pname as GLenum, params as const_GLfloat_p):void

glMateriali(face as GLenum, pname as GLenum, param as GLint):void

glMaterialiv(face as GLenum, pname as GLenum, params as const_GLint_p):void

glMatrixMode(mode as GLenum):void

glMultMatrixd(m as const_GLdouble_p):void

glMultMatrixf(m as const_GLfloat_p):void

glNewList(list as GLuint, mode as GLenum):void

glNormal3b(nx as GLbyte, ny as GLbyte, nz as GLbyte):void

glNormal3bv(v as const_GLbyte_p):void

glNormal3d(nx as GLdouble, ny as GLdouble, nz as GLdouble):void

glNormal3dv(v as const_GLdouble_p):void

glNormal3f(nx as GLfloat, ny as GLfloat, nz as GLfloat):void

glNormal3fv(v as const_GLfloat_p):void

glNormal3i(nx as GLint, ny as GLint, nz as GLint):void

glNormal3iv(v as const_GLint_p):void

glNormal3s(nx as GLshort, ny as GLshort, nz as GLshort):void

glNormal3sv(v as const_GLshort_p):void

glNormalPointer(type as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

glOrtho(left as GLdouble, right as GLdouble, bottom as GLdouble, top as GLdouble, zNear as GLdouble, zFar as GLdouble):void

glPassThrough(token as GLfloat):void

glPixelMapfv(map as GLenum, mapsize as GLsizei, values as const_GLfloat_p):void

glPixelMapuiv(map as GLenum, mapsize as GLsizei, values as const_GLuint_p):void

glPixelMapusv(map as GLenum, mapsize as GLsizei, values as const_GLushort_p):void

glPixelStoref(pname as GLenum, param as GLfloat):void

glPixelStorei(pname as GLenum, param as GLint):void

glPixelTransferf(pname as GLenum, param as GLfloat):void

glPixelTransferi(pname as GLenum, param as GLint):void

glPixelZoom(xfactor as GLfloat, yfactor as GLfloat):void

glPointSize(size as GLfloat):void

glPolygonMode(face as GLenum, mode as GLenum):void

glPolygonOffset(factor as GLfloat, units as GLfloat):void

glPolygonStipple(mask as const_GLubyte_p):void

glPopAttrib():void

glPopClientAttrib():void

glPopMatrix():void

glPopName():void

glPrioritizeTextures(n as GLsizei, textures as const_GLuint_p, priorities as const_GLclampf_p):void

glPushAttrib(mask as GLbitfield):void

glPushClientAttrib(mask as GLbitfield):void

glPushMatrix():void

glPushName(name as GLuint):void

glRasterPos2d(x as GLdouble, y as GLdouble):void

glRasterPos2dv(v as const_GLdouble_p):void

glRasterPos2f(x as GLfloat, y as GLfloat):void

glRasterPos2fv(v as const_GLfloat_p):void

glRasterPos2i(x as GLint, y as GLint):void

glRasterPos2iv(v as const_GLint_p):void

glRasterPos2s(x as GLshort, y as GLshort):void

glRasterPos2sv(v as const_GLshort_p):void

glRasterPos3d(x as GLdouble, y as GLdouble, z as GLdouble):void

glRasterPos3dv(v as const_GLdouble_p):void

glRasterPos3f(x as GLfloat, y as GLfloat, z as GLfloat):void

glRasterPos3fv(v as const_GLfloat_p):void

glRasterPos3i(x as GLint, y as GLint, z as GLint):void

glRasterPos3iv(v as const_GLint_p):void

glRasterPos3s(x as GLshort, y as GLshort, z as GLshort):void

glRasterPos3sv(v as const_GLshort_p):void

glRasterPos4d(x as GLdouble, y as GLdouble, z as GLdouble, w as GLdouble):void

glRasterPos4dv(v as const_GLdouble_p):void

glRasterPos4f(x as GLfloat, y as GLfloat, z as GLfloat, w as GLfloat):void

glRasterPos4fv(v as const_GLfloat_p):void

glRasterPos4i(x as GLint, y as GLint, z as GLint, w as GLint):void

glRasterPos4iv(v as const_GLint_p):void

glRasterPos4s(x as GLshort, y as GLshort, z as GLshort, w as GLshort):void

glRasterPos4sv(v as const_GLshort_p):void

glReadBuffer(mode as GLenum):void

glReadPixels(x as GLint, y as GLint, width as GLsizei, height as GLsizei, format as GLenum, type as GLenum, pixels:nil as void_p):void

glRectd(x1 as GLdouble, y1 as GLdouble, x2 as GLdouble, y2 as GLdouble):void

glRectdv(v1 as const_GLdouble_p, v2 as const_GLdouble_p):void

glRectf(x1 as GLfloat, y1 as GLfloat, x2 as GLfloat, y2 as GLfloat):void

glRectfv(v1 as const_GLfloat_p, v2 as const_GLfloat_p):void

glRecti(x1 as GLint, y1 as GLint, x2 as GLint, y2 as GLint):void

glRectiv(v1 as const_GLint_p, v2 as const_GLint_p):void

glRects(x1 as GLshort, y1 as GLshort, x2 as GLshort, y2 as GLshort):void

glRectsv(v1 as const_GLshort_p, v2 as const_GLshort_p):void

glRenderMode(mode as GLenum) as GLint

glRotated(angle as GLdouble, x as GLdouble, y as GLdouble, z as GLdouble):void

glRotatef(angle as GLfloat, x as GLfloat, y as GLfloat, z as GLfloat):void

glScaled(x as GLdouble, y as GLdouble, z as GLdouble):void

glScalef(x as GLfloat, y as GLfloat, z as GLfloat):void

glScissor(x as GLint, y as GLint, width as GLsizei, height as GLsizei):void

glSelectBuffer(size as GLsizei, buffer:nil as GLuint_p):void

glShadeModel(mode as GLenum):void

glStencilFunc(func as GLenum, ref as GLint, mask as GLuint):void

glStencilMask(mask as GLuint):void

glStencilOp(fail as GLenum, zfail as GLenum, zpass as GLenum):void

glTexCoord1d(s as GLdouble):void

glTexCoord1dv(v as const_GLdouble_p):void

glTexCoord1f(s as GLfloat):void

glTexCoord1fv(v as const_GLfloat_p):void

glTexCoord1i(s as GLint):void

glTexCoord1iv(v as const_GLint_p):void

glTexCoord1s(s as GLshort):void

glTexCoord1sv(v as const_GLshort_p):void

glTexCoord2d(s as GLdouble, t as GLdouble):void

glTexCoord2dv(v as const_GLdouble_p):void

glTexCoord2f(s as GLfloat, t as GLfloat):void

glTexCoord2fv(v as const_GLfloat_p):void

glTexCoord2i(s as GLint, t as GLint):void

glTexCoord2iv(v as const_GLint_p):void

glTexCoord2s(s as GLshort, t as GLshort):void

glTexCoord2sv(v as const_GLshort_p):void

glTexCoord3d(s as GLdouble, t as GLdouble, r as GLdouble):void

glTexCoord3dv(v as const_GLdouble_p):void

glTexCoord3f(s as GLfloat, t as GLfloat, r as GLfloat):void

glTexCoord3fv(v as const_GLfloat_p):void

glTexCoord3i(s as GLint, t as GLint, r as GLint):void

glTexCoord3iv(v as const_GLint_p):void

glTexCoord3s(s as GLshort, t as GLshort, r as GLshort):void

glTexCoord3sv(v as const_GLshort_p):void

glTexCoord4d(s as GLdouble, t as GLdouble, r as GLdouble, q as GLdouble):void

glTexCoord4dv(v as const_GLdouble_p):void

glTexCoord4f(s as GLfloat, t as GLfloat, r as GLfloat, q as GLfloat):void

glTexCoord4fv(v as const_GLfloat_p):void

glTexCoord4i(s as GLint, t as GLint, r as GLint, q as GLint):void

glTexCoord4iv(v as const_GLint_p):void

glTexCoord4s(s as GLshort, t as GLshort, r as GLshort, q as GLshort):void

glTexCoord4sv(v as const_GLshort_p):void

glTexCoordPointer(size as GLint, type as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

glTexEnvf(target as GLenum, pname as GLenum, param as GLfloat):void

glTexEnvfv(target as GLenum, pname as GLenum, params as const_GLfloat_p):void

glTexEnvi(target as GLenum, pname as GLenum, param as GLint):void

glTexEnviv(target as GLenum, pname as GLenum, params as const_GLint_p):void

glTexGend(coord as GLenum, pname as GLenum, param as GLdouble):void

glTexGendv(coord as GLenum, pname as GLenum, params as const_GLdouble_p):void

glTexGenf(coord as GLenum, pname as GLenum, param as GLfloat):void

glTexGenfv(coord as GLenum, pname as GLenum, params as const_GLfloat_p):void

glTexGeni(coord as GLenum, pname as GLenum, param as GLint):void

glTexGeniv(coord as GLenum, pname as GLenum, params as const_GLint_p):void

glTexImage1D(target as GLenum, level as GLint, internalformat as GLint, width as GLsizei, border as GLint, format as GLenum, type as GLenum, pixels:nil as void_p):void

glTexImage2D(target as GLenum, level as GLint, internalformat as GLint, width as GLsizei, height as GLsizei, border as GLint, format as GLenum, type as GLenum, pixels:nil as void_p):void

glTexParameterf(target as GLenum, pname as GLenum, param as GLfloat):void

glTexParameterfv(target as GLenum, pname as GLenum, params as const_GLfloat_p):void

glTexParameteri(target as GLenum, pname as GLenum, param as GLint):void

glTexParameteriv(target as GLenum, pname as GLenum, params as const_GLint_p):void

glTexSubImage1D(target as GLenum, level as GLint, xoffset as GLint, width as GLsizei, format as GLenum, type as GLenum, pixels:nil as void_p):void

glTexSubImage2D(target as GLenum, level as GLint, xoffset as GLint, yoffset as GLint, width as GLsizei, height as GLsizei, format as GLenum, type as GLenum, pixels:nil as void_p):void

glTranslated(x as GLdouble, y as GLdouble, z as GLdouble):void

glTranslatef(x as GLfloat, y as GLfloat, z as GLfloat):void

glVertex2d(x as GLdouble, y as GLdouble):void

glVertex2dv(v as const_GLdouble_p):void

glVertex2f(x as GLfloat, y as GLfloat):void

glVertex2fv(v as const_GLfloat_p):void

glVertex2i(x as GLint, y as GLint):void

glVertex2iv(v as const_GLint_p):void

glVertex2s(x as GLshort, y as GLshort):void

glVertex2sv(v as const_GLshort_p):void

glVertex3d(x as GLdouble, y as GLdouble, z as GLdouble):void

glVertex3dv(v as const_GLdouble_p):void

glVertex3f(x as GLfloat, y as GLfloat, z as GLfloat):void

glVertex3fv(v as const_GLfloat_p):void

glVertex3i(x as GLint, y as GLint, z as GLint):void

glVertex3iv(v as const_GLint_p):void

glVertex3s(x as GLshort, y as GLshort, z as GLshort):void

glVertex3sv(v as const_GLshort_p):void

glVertex4d(x as GLdouble, y as GLdouble, z as GLdouble, w as GLdouble):void

glVertex4dv(v as const_GLdouble_p):void

glVertex4f(x as GLfloat, y as GLfloat, z as GLfloat, w as GLfloat):void

glVertex4fv(v as const_GLfloat_p):void

glVertex4i(x as GLint, y as GLint, z as GLint, w as GLint):void

glVertex4iv(v as const_GLint_p):void

glVertex4s(x as GLshort, y as GLshort, z as GLshort, w as GLshort):void

glVertex4sv(v as const_GLshort_p):void

glVertexPointer(size as GLint, type as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

glViewport(x as GLint, y as GLint, width as GLsizei, height as GLsizei):void

//======== GL_VERSION_1_2 ========

glCopyTexSubImage3D(target as GLenum, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, x as GLint, y as GLint, width as GLsizei, height as GLsizei):void

glDrawRangeElements(mode as GLenum, start as GLuint, end as GLuint, count as GLsizei, type as GLenum, indices:nil as const_void_p):void

glTexImage3D(target as GLenum, level as GLint, internalFormat as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, border as GLint, format as GLenum, type as GLenum, pixels:nil as const_void_p):void

glTexSubImage3D(target as GLenum, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, format as GLenum, type as GLenum, pixels:nil as const_void_p):void

//======== GL_VERSION_1_3 ========

glActiveTexture(texture as GLenum):void

glClientActiveTexture(texture as GLenum):void

glCompressedTexImage1D(target as GLenum, level as GLint, internalformat as GLenum, width as GLsizei, border as GLint, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexImage2D(target as GLenum, level as GLint, internalformat as GLenum, width as GLsizei, height as GLsizei, border as GLint, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexImage3D(target as GLenum, level as GLint, internalformat as GLenum, width as GLsizei, height as GLsizei, depth as GLsizei, border as GLint, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexSubImage1D(target as GLenum, level as GLint, xoffset as GLint, width as GLsizei, format as GLenum, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexSubImage2D(target as GLenum, level as GLint, xoffset as GLint, yoffset as GLint, width as GLsizei, height as GLsizei, format as GLenum, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexSubImage3D(target as GLenum, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, format as GLenum, imageSize as GLsizei, data:nil as const_void_p):void

glGetCompressedTexImage(target as GLenum, lod as GLint, img:nil as void_p):void

glLoadTransposeMatrixd(m as const_GLdouble_p):void

glLoadTransposeMatrixf(m as const_GLfloat_p):void

glMultTransposeMatrixd(m as const_GLdouble_p):void

glMultTransposeMatrixf(m as const_GLfloat_p):void

glMultiTexCoord1d(target as GLenum, s as GLdouble):void

glMultiTexCoord1dv(target as GLenum, v as const_GLdouble_p):void

glMultiTexCoord1f(target as GLenum, s as GLfloat):void

glMultiTexCoord1fv(target as GLenum, v as const_GLfloat_p):void

glMultiTexCoord1i(target as GLenum, s as GLint):void

glMultiTexCoord1iv(target as GLenum, v as const_GLint_p):void

glMultiTexCoord1s(target as GLenum, s as GLshort):void

glMultiTexCoord1sv(target as GLenum, v as const_GLshort_p):void

glMultiTexCoord2d(target as GLenum, s as GLdouble, t as GLdouble):void

glMultiTexCoord2dv(target as GLenum, v as const_GLdouble_p):void

glMultiTexCoord2f(target as GLenum, s as GLfloat, t as GLfloat):void

glMultiTexCoord2fv(target as GLenum, v as const_GLfloat_p):void

glMultiTexCoord2i(target as GLenum, s as GLint, t as GLint):void

glMultiTexCoord2iv(target as GLenum, v as const_GLint_p):void

glMultiTexCoord2s(target as GLenum, s as GLshort, t as GLshort):void

glMultiTexCoord2sv(target as GLenum, v as const_GLshort_p):void

glMultiTexCoord3d(target as GLenum, s as GLdouble, t as GLdouble, r as GLdouble):void

glMultiTexCoord3dv(target as GLenum, v as const_GLdouble_p):void

glMultiTexCoord3f(target as GLenum, s as GLfloat, t as GLfloat, r as GLfloat):void

glMultiTexCoord3fv(target as GLenum, v as const_GLfloat_p):void

glMultiTexCoord3i(target as GLenum, s as GLint, t as GLint, r as GLint):void

glMultiTexCoord3iv(target as GLenum, v as const_GLint_p):void

glMultiTexCoord3s(target as GLenum, s as GLshort, t as GLshort, r as GLshort):void

glMultiTexCoord3sv(target as GLenum, v as const_GLshort_p):void

glMultiTexCoord4d(target as GLenum, s as GLdouble, t as GLdouble, r as GLdouble, q as GLdouble):void

glMultiTexCoord4dv(target as GLenum, v as const_GLdouble_p):void

glMultiTexCoord4f(target as GLenum, s as GLfloat, t as GLfloat, r as GLfloat, q as GLfloat):void

glMultiTexCoord4fv(target as GLenum, v as const_GLfloat_p):void

glMultiTexCoord4i(target as GLenum, s as GLint, t as GLint, r as GLint, q as GLint):void

glMultiTexCoord4iv(target as GLenum, v as const_GLint_p):void

glMultiTexCoord4s(target as GLenum, s as GLshort, t as GLshort, r as GLshort, q as GLshort):void

glMultiTexCoord4sv(target as GLenum, v as const_GLshort_p):void

glSampleCoverage(value as GLclampf, invert as GLboolean):void

//======== GL_VERSION_1_4 ========

glBlendColor(red as GLclampf, green as GLclampf, blue as GLclampf, alpha as GLclampf):void

glBlendEquation(mode as GLenum):void

glBlendFuncSeparate(sfactorRGB as GLenum, dfactorRGB as GLenum, sfactorAlpha as GLenum, dfactorAlpha as GLenum):void

glFogCoordPointer(type as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

glFogCoordd(coord as GLdouble):void

glFogCoorddv(coord as const_GLdouble_p):void

glFogCoordf(coord as GLfloat):void

glFogCoordfv(coord as const_GLfloat_p):void

glMultiDrawArrays(mode as GLenum, first as const_GLint_p, count as const_GLsizei_p, drawcount as GLsizei):void

glMultiDrawElements(mode as GLenum, count[] as GLsizei, type as GLenum, indices[]:nil as const_void_p):void = \
	R'''
	GLsizei drawcount = count.sizeT<GLsizei>();
	if (drawcount != indices.sizeT<GLsizei>()) {
		Error::Issue(ErrorType::RangeError, "count and indices must have the same number of elements");
		return Value::nil();
	}
	glMultiDrawElements(mode, count, type, indices, drawcount);
	return Value::nil();
	'''

glPointParameterf(pname as GLenum, param as GLfloat):void

glPointParameterfv(pname as GLenum, params as const_GLfloat_p):void

glPointParameteri(pname as GLenum, param as GLint):void

glPointParameteriv(pname as GLenum, params as const_GLint_p):void

glSecondaryColor3b(red as GLbyte, green as GLbyte, blue as GLbyte):void

glSecondaryColor3bv(v as const_GLbyte_p):void

glSecondaryColor3d(red as GLdouble, green as GLdouble, blue as GLdouble):void

glSecondaryColor3dv(v as const_GLdouble_p):void

glSecondaryColor3f(red as GLfloat, green as GLfloat, blue as GLfloat):void

glSecondaryColor3fv(v as const_GLfloat_p):void

glSecondaryColor3i(red as GLint, green as GLint, blue as GLint):void

glSecondaryColor3iv(v as const_GLint_p):void

glSecondaryColor3s(red as GLshort, green as GLshort, blue as GLshort):void

glSecondaryColor3sv(v as const_GLshort_p):void

glSecondaryColor3ub(red as GLubyte, green as GLubyte, blue as GLubyte):void

glSecondaryColor3ubv(v as const_GLubyte_p):void

glSecondaryColor3ui(red as GLuint, green as GLuint, blue as GLuint):void

glSecondaryColor3uiv(v as const_GLuint_p):void

glSecondaryColor3us(red as GLushort, green as GLushort, blue as GLushort):void

glSecondaryColor3usv(v as const_GLushort_p):void

glSecondaryColorPointer(size as GLint, type as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

glWindowPos2d(x as GLdouble, y as GLdouble):void

glWindowPos2dv(p as const_GLdouble_p):void

glWindowPos2f(x as GLfloat, y as GLfloat):void

glWindowPos2fv(p as const_GLfloat_p):void

glWindowPos2i(x as GLint, y as GLint):void

glWindowPos2iv(p as const_GLint_p):void

glWindowPos2s(x as GLshort, y as GLshort):void

glWindowPos2sv(p as const_GLshort_p):void

glWindowPos3d(x as GLdouble, y as GLdouble, z as GLdouble):void

glWindowPos3dv(p as const_GLdouble_p):void

glWindowPos3f(x as GLfloat, y as GLfloat, z as GLfloat):void

glWindowPos3fv(p as const_GLfloat_p):void

glWindowPos3i(x as GLint, y as GLint, z as GLint):void

glWindowPos3iv(p as const_GLint_p):void

glWindowPos3s(x as GLshort, y as GLshort, z as GLshort):void

glWindowPos3sv(p as const_GLshort_p):void

//======== GL_VERSION_1_5 ========

glBeginQuery(target as GLenum, id as GLuint):void

glBindBuffer(target as GLenum, buffer as GLuint):void

glBufferData(target as GLenum, size as GLsizeiptr, data:nil as const_void_p, usage as GLenum):void

glBufferSubData(target as GLenum, offset as GLintptr, size as GLsizeiptr, data:nil as const_void_p):void

glDeleteBuffers(n as GLsizei, buffers as const_GLuint_p):void

glDeleteQueries(n as GLsizei, ids as const_GLuint_p):void

glEndQuery(target as GLenum):void

glGenBuffers(n as GLsizei, buffers:nil as GLuint_p):void

glGenQueries(n as GLsizei, ids:nil as GLuint_p):void

glGetBufferParameteriv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

//glGetBufferPointerv(target as GLenum, pname as GLenum, params as const_void_p_p):void

glGetBufferSubData(target as GLenum, offset as GLintptr, size as GLsizeiptr, data:nil as void_p):void

glGetQueryObjectiv(id as GLuint, pname as GLenum, params:nil as GLint_p):void

glGetQueryObjectuiv(id as GLuint, pname as GLenum, params:nil as GLuint_p):void

glGetQueryiv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glIsBuffer(buffer as GLuint) as GLboolean

glIsQuery(id as GLuint) as GLboolean

glMapBuffer(target as GLenum, access as GLenum) as Return_void_p

glUnmapBuffer(target as GLenum) as GLboolean

//======== GL_VERSION_2_0 ========

glAttachShader(program as GLuint, shader as GLuint):void

glBindAttribLocation(program as GLuint, index as GLuint, name as String_const_GLchar_p):void

glBlendEquationSeparate(modeRGB as GLenum, modeAlpha as GLenum):void

glCompileShader(shader as GLuint):void

glCreateProgram() as GLuint

glCreateShader(type as GLenum) as GLuint

glDeleteProgram(program as GLuint):void

glDeleteShader(shader as GLuint):void

glDetachShader(program as GLuint, shader as GLuint):void

glDisableVertexAttribArray(index as GLuint):void

glDrawBuffers(n as GLsizei, bufs as const_GLenum_p):void

glEnableVertexAttribArray(index as GLuint):void

glGetActiveAttrib(program as GLuint, index as GLuint, maxLength as GLsizei, length:nil as GLsizei_p, size:nil as GLint_p, type:nil as GLenum_p, name:nil as GLchar_p):void

glGetActiveUniform(program as GLuint, index as GLuint, maxLength as GLsizei, length:nil as GLsizei_p, size:nil as GLint_p, type:nil as GLenum_p, name:nil as GLchar_p):void

glGetAttachedShaders(program as GLuint, maxCount as GLsizei, count:nil as GLsizei_p, shaders:nil as GLuint_p):void

glGetAttribLocation(program as GLuint, name as String_const_GLchar_p) as GLint

glGetProgramInfoLog(program as GLuint, bufSize as GLsizei, length:nil as GLsizei_p, infoLog:nil as GLchar_p):void

glGetProgramiv(program as GLuint, pname as GLenum, param:nil as GLint_p):void

glGetShaderInfoLog(shader as GLuint, bufSize as GLsizei, length:nil as GLsizei_p, infoLog:nil as GLchar_p):void

glGetShaderSource(obj as GLuint, maxLength as GLsizei, length:nil as GLsizei_p, source:nil as GLchar_p):void

glGetShaderiv(shader as GLuint, pname as GLenum, param:nil as GLint_p):void

glGetUniformLocation(program as GLuint, name as String_const_GLchar_p) as GLint

glGetUniformfv(program as GLuint, location as GLint, params:nil as GLfloat_p):void

glGetUniformiv(program as GLuint, location as GLint, params:nil as GLint_p):void

//glGetVertexAttribPointerv(index as GLuint, pname as GLenum, pointer as void_p__p):void

glGetVertexAttribdv(index as GLuint, pname as GLenum, params:nil as GLdouble_p):void

glGetVertexAttribfv(index as GLuint, pname as GLenum, params:nil as GLfloat_p):void

glGetVertexAttribiv(index as GLuint, pname as GLenum, params:nil as GLint_p):void

glIsProgram(program as GLuint) as GLboolean

glIsShader(shader as GLuint) as GLboolean

glLinkProgram(program as GLuint):void

//glShaderSource(shader as GLuint, count as GLsizei, string[] as String_const_GLchar_p, length[] as GLint):void
glShaderSource(shader as GLuint, string[] as String_const_GLchar_p, length[] as GLint):void = \
	R'''
	GLsizei count = string.sizeT<GLsizei>();
	if (!length.empty() && count != length.sizeT<GLsizei>()) {
		Error::Issue(ErrorType::RangeError, "string and length must have the same number of elements");
		return Value::nil();
	}
	glShaderSource(shader, count, string, length.empty()? nullptr : length.data());
	return Value::nil();
	'''

glStencilFuncSeparate(frontfunc as GLenum, backfunc as GLenum, ref as GLint, mask as GLuint):void

glStencilMaskSeparate(face as GLenum, mask as GLuint):void

glStencilOpSeparate(face as GLenum, sfail as GLenum, dpfail as GLenum, dppass as GLenum):void

glUniform1f(location as GLint, v0 as GLfloat):void

glUniform1fv(location as GLint, count as GLsizei, value as const_GLfloat_p):void

glUniform1i(location as GLint, v0 as GLint):void

glUniform1iv(location as GLint, count as GLsizei, value as const_GLint_p):void

glUniform2f(location as GLint, v0 as GLfloat, v1 as GLfloat):void

glUniform2fv(location as GLint, count as GLsizei, value as const_GLfloat_p):void

glUniform2i(location as GLint, v0 as GLint, v1 as GLint):void

glUniform2iv(location as GLint, count as GLsizei, value as const_GLint_p):void

glUniform3f(location as GLint, v0 as GLfloat, v1 as GLfloat, v2 as GLfloat):void

glUniform3fv(location as GLint, count as GLsizei, value as const_GLfloat_p):void

glUniform3i(location as GLint, v0 as GLint, v1 as GLint, v2 as GLint):void

glUniform3iv(location as GLint, count as GLsizei, value as const_GLint_p):void

glUniform4f(location as GLint, v0 as GLfloat, v1 as GLfloat, v2 as GLfloat, v3 as GLfloat):void

glUniform4fv(location as GLint, count as GLsizei, value as const_GLfloat_p):void

glUniform4i(location as GLint, v0 as GLint, v1 as GLint, v2 as GLint, v3 as GLint):void

glUniform4iv(location as GLint, count as GLsizei, value as const_GLint_p):void

glUniformMatrix2fv(location as GLint, count as GLsizei, transpose as GLboolean, value as const_GLfloat_p):void

glUniformMatrix3fv(location as GLint, count as GLsizei, transpose as GLboolean, value as const_GLfloat_p):void

glUniformMatrix4fv(location as GLint, count as GLsizei, transpose as GLboolean, value as const_GLfloat_p):void

glUseProgram(program as GLuint):void

glValidateProgram(program as GLuint):void

glVertexAttrib1d(index as GLuint, x as GLdouble):void

glVertexAttrib1dv(index as GLuint, v as const_GLdouble_p):void

glVertexAttrib1f(index as GLuint, x as GLfloat):void

glVertexAttrib1fv(index as GLuint, v as const_GLfloat_p):void

glVertexAttrib1s(index as GLuint, x as GLshort):void

glVertexAttrib1sv(index as GLuint, v as const_GLshort_p):void

glVertexAttrib2d(index as GLuint, x as GLdouble, y as GLdouble):void

glVertexAttrib2dv(index as GLuint, v as const_GLdouble_p):void

glVertexAttrib2f(index as GLuint, x as GLfloat, y as GLfloat):void

glVertexAttrib2fv(index as GLuint, v as const_GLfloat_p):void

glVertexAttrib2s(index as GLuint, x as GLshort, y as GLshort):void

glVertexAttrib2sv(index as GLuint, v as const_GLshort_p):void

glVertexAttrib3d(index as GLuint, x as GLdouble, y as GLdouble, z as GLdouble):void

glVertexAttrib3dv(index as GLuint, v as const_GLdouble_p):void

glVertexAttrib3f(index as GLuint, x as GLfloat, y as GLfloat, z as GLfloat):void

glVertexAttrib3fv(index as GLuint, v as const_GLfloat_p):void

glVertexAttrib3s(index as GLuint, x as GLshort, y as GLshort, z as GLshort):void

glVertexAttrib3sv(index as GLuint, v as const_GLshort_p):void

glVertexAttrib4Nbv(index as GLuint, v as const_GLbyte_p):void

glVertexAttrib4Niv(index as GLuint, v as const_GLint_p):void

glVertexAttrib4Nsv(index as GLuint, v as const_GLshort_p):void

glVertexAttrib4Nub(index as GLuint, x as GLubyte, y as GLubyte, z as GLubyte, w as GLubyte):void

glVertexAttrib4Nubv(index as GLuint, v as const_GLubyte_p):void

glVertexAttrib4Nuiv(index as GLuint, v as const_GLuint_p):void

glVertexAttrib4Nusv(index as GLuint, v as const_GLushort_p):void

glVertexAttrib4bv(index as GLuint, v as const_GLbyte_p):void

glVertexAttrib4d(index as GLuint, x as GLdouble, y as GLdouble, z as GLdouble, w as GLdouble):void

glVertexAttrib4dv(index as GLuint, v as const_GLdouble_p):void

glVertexAttrib4f(index as GLuint, x as GLfloat, y as GLfloat, z as GLfloat, w as GLfloat):void

glVertexAttrib4fv(index as GLuint, v as const_GLfloat_p):void

glVertexAttrib4iv(index as GLuint, v as const_GLint_p):void

glVertexAttrib4s(index as GLuint, x as GLshort, y as GLshort, z as GLshort, w as GLshort):void

glVertexAttrib4sv(index as GLuint, v as const_GLshort_p):void

glVertexAttrib4ubv(index as GLuint, v as const_GLubyte_p):void

glVertexAttrib4uiv(index as GLuint, v as const_GLuint_p):void

glVertexAttrib4usv(index as GLuint, v as const_GLushort_p):void

glVertexAttribPointer(index as GLuint, size as GLint, type as GLenum, normalized as GLboolean, stride as GLsizei, pointer:nil as Number_const_void_p):void

//======== GL_VERSION_2_1 ========

glUniformMatrix2x3fv(location as GLint, count as GLsizei, transpose as GLboolean, value as const_GLfloat_p):void

glUniformMatrix2x4fv(location as GLint, count as GLsizei, transpose as GLboolean, value as const_GLfloat_p):void

glUniformMatrix3x2fv(location as GLint, count as GLsizei, transpose as GLboolean, value as const_GLfloat_p):void

glUniformMatrix3x4fv(location as GLint, count as GLsizei, transpose as GLboolean, value as const_GLfloat_p):void

glUniformMatrix4x2fv(location as GLint, count as GLsizei, transpose as GLboolean, value as const_GLfloat_p):void

glUniformMatrix4x3fv(location as GLint, count as GLsizei, transpose as GLboolean, value as const_GLfloat_p):void

//======== GL_VERSION_3_0 ========

glBeginConditionalRender(id as GLuint, mode as GLenum):void

glBeginTransformFeedback(primitiveMode as GLenum):void

glBindFragDataLocation(program as GLuint, colorNumber as GLuint, name as String_const_GLchar_p):void

glClampColor(target as GLenum, clamp as GLenum):void

glClearBufferfi(buffer as GLenum, drawBuffer as GLint, depth as GLfloat, stencil as GLint):void

glClearBufferfv(buffer as GLenum, drawBuffer as GLint, value as const_GLfloat_p):void

glClearBufferiv(buffer as GLenum, drawBuffer as GLint, value as const_GLint_p):void

glClearBufferuiv(buffer as GLenum, drawBuffer as GLint, value as const_GLuint_p):void

glColorMaski(buf as GLuint, red as GLboolean, green as GLboolean, blue as GLboolean, alpha as GLboolean):void

glDisablei(cap as GLenum, index as GLuint):void

glEnablei(cap as GLenum, index as GLuint):void

glEndConditionalRender():void

glEndTransformFeedback():void

glGetBooleani_v(pname as GLenum, index as GLuint, data:nil as GLboolean_p):void

glGetFragDataLocation(program as GLuint, name as String_const_GLchar_p) as GLint

glGetStringi(name as GLenum, index as GLuint) as String_const_GLubyte_p

glGetTexParameterIiv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetTexParameterIuiv(target as GLenum, pname as GLenum, params:nil as GLuint_p):void

glGetTransformFeedbackVarying(program as GLuint, index as GLuint, bufSize as GLsizei, length:nil as GLsizei_p, size:nil as GLsizei_p, type:nil as GLenum_p, name:nil as GLchar_p):void

glGetUniformuiv(program as GLuint, location as GLint, params:nil as GLuint_p):void

glGetVertexAttribIiv(index as GLuint, pname as GLenum, params:nil as GLint_p):void

glGetVertexAttribIuiv(index as GLuint, pname as GLenum, params:nil as GLuint_p):void

glIsEnabledi(cap as GLenum, index as GLuint) as GLboolean

glTexParameterIiv(target as GLenum, pname as GLenum, params as const_GLint_p):void

glTexParameterIuiv(target as GLenum, pname as GLenum, params as const_GLuint_p):void

//glTransformFeedbackVaryings(program as GLuint, count as GLsizei, varyings:nil as const_GLchar_p_const_p, bufferMode as GLenum):void

glUniform1ui(location as GLint, v0 as GLuint):void

glUniform1uiv(location as GLint, count as GLsizei, value as const_GLuint_p):void

glUniform2ui(location as GLint, v0 as GLuint, v1 as GLuint):void

glUniform2uiv(location as GLint, count as GLsizei, value as const_GLuint_p):void

glUniform3ui(location as GLint, v0 as GLuint, v1 as GLuint, v2 as GLuint):void

glUniform3uiv(location as GLint, count as GLsizei, value as const_GLuint_p):void

glUniform4ui(location as GLint, v0 as GLuint, v1 as GLuint, v2 as GLuint, v3 as GLuint):void

glUniform4uiv(location as GLint, count as GLsizei, value as const_GLuint_p):void

glVertexAttribI1i(index as GLuint, v0 as GLint):void

glVertexAttribI1iv(index as GLuint, v0 as const_GLint_p):void

glVertexAttribI1ui(index as GLuint, v0 as GLuint):void

glVertexAttribI1uiv(index as GLuint, v0 as const_GLuint_p):void

glVertexAttribI2i(index as GLuint, v0 as GLint, v1 as GLint):void

glVertexAttribI2iv(index as GLuint, v0 as const_GLint_p):void

glVertexAttribI2ui(index as GLuint, v0 as GLuint, v1 as GLuint):void

glVertexAttribI2uiv(index as GLuint, v0 as const_GLuint_p):void

glVertexAttribI3i(index as GLuint, v0 as GLint, v1 as GLint, v2 as GLint):void

glVertexAttribI3iv(index as GLuint, v0 as const_GLint_p):void

glVertexAttribI3ui(index as GLuint, v0 as GLuint, v1 as GLuint, v2 as GLuint):void

glVertexAttribI3uiv(index as GLuint, v0 as const_GLuint_p):void

glVertexAttribI4bv(index as GLuint, v0 as const_GLbyte_p):void

glVertexAttribI4i(index as GLuint, v0 as GLint, v1 as GLint, v2 as GLint, v3 as GLint):void

glVertexAttribI4iv(index as GLuint, v0 as const_GLint_p):void

glVertexAttribI4sv(index as GLuint, v0 as const_GLshort_p):void

glVertexAttribI4ubv(index as GLuint, v0 as const_GLubyte_p):void

glVertexAttribI4ui(index as GLuint, v0 as GLuint, v1 as GLuint, v2 as GLuint, v3 as GLuint):void

glVertexAttribI4uiv(index as GLuint, v0 as const_GLuint_p):void

glVertexAttribI4usv(index as GLuint, v0 as const_GLushort_p):void

glVertexAttribIPointer(index as GLuint, size as GLint, type as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

//======== GL_VERSION_3_1 ========

glDrawArraysInstanced(mode as GLenum, first as GLint, count as GLsizei, primcount as GLsizei):void

glDrawElementsInstanced(mode as GLenum, count as GLsizei, type as GLenum, indices:nil as const_void_p, primcount as GLsizei):void

glPrimitiveRestartIndex(buffer as GLuint):void

glTexBuffer(target as GLenum, internalFormat as GLenum, buffer as GLuint):void

//======== GL_VERSION_3_2 ========

glFramebufferTexture(target as GLenum, attachment as GLenum, texture as GLuint, level as GLint):void

glGetBufferParameteri64v(target as GLenum, value as GLenum, data:nil as GLint64_p):void

glGetInteger64i_v(pname as GLenum, index as GLuint, data:nil as GLint64_p):void

//======== GL_VERSION_3_3 ========

glVertexAttribDivisor(index as GLuint, divisor as GLuint):void

//======== GL_VERSION_4_0 ========

glBlendEquationSeparatei(buf as GLuint, modeRGB as GLenum, modeAlpha as GLenum):void

glBlendEquationi(buf as GLuint, mode as GLenum):void

glBlendFuncSeparatei(buf as GLuint, srcRGB as GLenum, dstRGB as GLenum, srcAlpha as GLenum, dstAlpha as GLenum):void

glBlendFunci(buf as GLuint, src as GLenum, dst as GLenum):void

glMinSampleShading(value as GLclampf):void

//======== GL_VERSION_4_5 ========

glGetGraphicsResetStatus() as GLenum

glGetnCompressedTexImage(target as GLenum, lod as GLint, bufSize as GLsizei, pixels:nil as GLvoid_p):void

glGetnTexImage(tex as GLenum, level as GLint, format as GLenum, type as GLenum, bufSize as GLsizei, pixels:nil as GLvoid_p):void

glGetnUniformdv(program as GLuint, location as GLint, bufSize as GLsizei, params:nil as GLdouble_p):void

//======== GL_VERSION_4_6 ========

glMultiDrawArraysIndirectCount(mode as GLenum, indirect:nil as const_GLvoid_p, drawcount as GLintptr, maxdrawcount as GLsizei, stride as GLsizei):void

glMultiDrawElementsIndirectCount(mode as GLenum, type as GLenum, indirect:nil as const_GLvoid_p, drawcount as GLintptr, maxdrawcount as GLsizei, stride as GLsizei):void

glSpecializeShader(shader as GLuint, pEntryPoint as const_GLchar_p, numSpecializationConstants as GLuint, pConstantIndex as const_GLuint_p, pConstantValue as const_GLuint_p):void

//======== GL_ARB_ES2_compatibility ========

glClearDepthf(d as GLclampf):void

glDepthRangef(n as GLclampf, f as GLclampf):void

glGetShaderPrecisionFormat(shadertype as GLenum, precisiontype as GLenum, range:nil as GLint_p, precision:nil as GLint_p):void

glReleaseShaderCompiler():void

glShaderBinary(count as GLsizei, shaders:nil as const_GLuint_p, binaryformat as GLenum, binary:nil as const_void_p, length as GLsizei):void

//======== GL_ARB_ES3_1_compatibility ========

glMemoryBarrierByRegion(barriers as GLbitfield):void

//======== GL_ARB_ES3_2_compatibility ========

glPrimitiveBoundingBoxARB(minX as GLfloat, minY as GLfloat, minZ as GLfloat, minW as GLfloat, maxX as GLfloat, maxY as GLfloat, maxZ as GLfloat, maxW as GLfloat):void

//======== GL_ARB_base_instance ========

glDrawArraysInstancedBaseInstance(mode as GLenum, first as GLint, count as GLsizei, primcount as GLsizei, baseinstance as GLuint):void

glDrawElementsInstancedBaseInstance(mode as GLenum, count as GLsizei, type as GLenum, indices:nil as const_void_p, primcount as GLsizei, baseinstance as GLuint):void

glDrawElementsInstancedBaseVertexBaseInstance(mode as GLenum, count as GLsizei, type as GLenum, indices:nil as const_void_p, primcount as GLsizei, basevertex as GLint, baseinstance as GLuint):void

//======== GL_ARB_bindless_texture ========

glGetImageHandleARB(texture as GLuint, level as GLint, layered as GLboolean, layer as GLint, format as GLenum) as GLuint64

glGetTextureHandleARB(texture as GLuint) as GLuint64

glGetTextureSamplerHandleARB(texture as GLuint, sampler as GLuint) as GLuint64

//glGetVertexAttribLui64vARB(index as GLuint, pname as GLenum, params:nil as GLuint64EXT_p):void

glIsImageHandleResidentARB(handle as GLuint64) as GLboolean

glIsTextureHandleResidentARB(handle as GLuint64) as GLboolean

glMakeImageHandleNonResidentARB(handle as GLuint64):void

glMakeImageHandleResidentARB(handle as GLuint64, access as GLenum):void

glMakeTextureHandleNonResidentARB(handle as GLuint64):void

glMakeTextureHandleResidentARB(handle as GLuint64):void

glProgramUniformHandleui64ARB(program as GLuint, location as GLint, value as GLuint64):void

glProgramUniformHandleui64vARB(program as GLuint, location as GLint, count as GLsizei, values:nil as const_GLuint64_p):void

glUniformHandleui64ARB(location as GLint, value as GLuint64):void

glUniformHandleui64vARB(location as GLint, count as GLsizei, value:nil as const_GLuint64_p):void

glVertexAttribL1ui64ARB(index as GLuint, x as GLuint64EXT):void

glVertexAttribL1ui64vARB(index as GLuint, v:nil as const_GLuint64EXT_p):void

//======== GL_ARB_blend_func_extended ========

glBindFragDataLocationIndexed(program as GLuint, colorNumber as GLuint, index as GLuint, name as String_const_GLchar_p):void

glGetFragDataIndex(program as GLuint, name as String_const_GLchar_p) as GLint

//======== GL_ARB_buffer_storage ========

glBufferStorage(target as GLenum, size as GLsizeiptr, data:nil as const_void_p, flags as GLbitfield):void

//======== GL_ARB_cl_event ========

//glCreateSyncFromCLeventARB(context as cl_context, event as cl_event, flags as GLbitfield) as GLsync

//======== GL_ARB_clear_buffer_object ========

glClearBufferData(target as GLenum, internalformat as GLenum, format as GLenum, type as GLenum, data:nil as const_void_p):void

glClearBufferSubData(target as GLenum, internalformat as GLenum, offset as GLintptr, size as GLsizeiptr, format as GLenum, type as GLenum, data:nil as const_void_p):void

glClearNamedBufferDataEXT(buffer as GLuint, internalformat as GLenum, format as GLenum, type as GLenum, data:nil as const_void_p):void

glClearNamedBufferSubDataEXT(buffer as GLuint, internalformat as GLenum, offset as GLintptr, size as GLsizeiptr, format as GLenum, type as GLenum, data:nil as const_void_p):void

//======== GL_ARB_clear_texture ========

glClearTexImage(texture as GLuint, level as GLint, format as GLenum, type as GLenum, data:nil as const_void_p):void

glClearTexSubImage(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, format as GLenum, type as GLenum, data:nil as const_void_p):void

//======== GL_ARB_clip_control ========

glClipControl(origin as GLenum, depth as GLenum):void

//======== GL_ARB_color_buffer_float ========

glClampColorARB(target as GLenum, clamp as GLenum):void

//======== GL_ARB_compute_shader ========

glDispatchCompute(num_groups_x as GLuint, num_groups_y as GLuint, num_groups_z as GLuint):void

glDispatchComputeIndirect(indirect as GLintptr):void

//======== GL_ARB_compute_variable_group_size ========

glDispatchComputeGroupSizeARB(num_groups_x as GLuint, num_groups_y as GLuint, num_groups_z as GLuint, group_size_x as GLuint, group_size_y as GLuint, group_size_z as GLuint):void

//======== GL_ARB_copy_buffer ========

glCopyBufferSubData(readtarget as GLenum, writetarget as GLenum, readoffset as GLintptr, writeoffset as GLintptr, size as GLsizeiptr):void

//======== GL_ARB_copy_image ========

glCopyImageSubData(srcName as GLuint, srcTarget as GLenum, srcLevel as GLint, srcX as GLint, srcY as GLint, srcZ as GLint, dstName as GLuint, dstTarget as GLenum, dstLevel as GLint, dstX as GLint, dstY as GLint, dstZ as GLint, srcWidth as GLsizei, srcHeight as GLsizei, srcDepth as GLsizei):void

//======== GL_ARB_debug_output ========

//glDebugMessageCallbackARB(callback as GLDEBUGPROCARB, userParam:nil as const_void_p):void

glDebugMessageControlARB(source as GLenum, type as GLenum, severity as GLenum, count as GLsizei, ids:nil as const_GLuint_p, enabled as GLboolean):void

glDebugMessageInsertARB(source as GLenum, type as GLenum, id as GLuint, severity as GLenum, length as GLsizei, buf:nil as const_GLchar_p):void

glGetDebugMessageLogARB(count as GLuint, bufSize as GLsizei, sources:nil as GLenum_p, types:nil as GLenum_p, ids:nil as GLuint_p, severities:nil as GLenum_p, lengths:nil as GLsizei_p, messageLog:nil as GLchar_p) as GLuint

//======== GL_ARB_direct_state_access ========

glBindTextureUnit(unit as GLuint, texture as GLuint):void

glBlitNamedFramebuffer(readFramebuffer as GLuint, drawFramebuffer as GLuint, srcX0 as GLint, srcY0 as GLint, srcX1 as GLint, srcY1 as GLint, dstX0 as GLint, dstY0 as GLint, dstX1 as GLint, dstY1 as GLint, mask as GLbitfield, filter as GLenum):void

glCheckNamedFramebufferStatus(framebuffer as GLuint, target as GLenum) as GLenum

glClearNamedBufferData(buffer as GLuint, internalformat as GLenum, format as GLenum, type as GLenum, data:nil as const_void_p):void

glClearNamedBufferSubData(buffer as GLuint, internalformat as GLenum, offset as GLintptr, size as GLsizeiptr, format as GLenum, type as GLenum, data:nil as const_void_p):void

glClearNamedFramebufferfi(framebuffer as GLuint, buffer as GLenum, drawbuffer as GLint, depth as GLfloat, stencil as GLint):void

glClearNamedFramebufferfv(framebuffer as GLuint, buffer as GLenum, drawbuffer as GLint, value:nil as GLfloat_p):void

glClearNamedFramebufferiv(framebuffer as GLuint, buffer as GLenum, drawbuffer as GLint, value:nil as const_GLint_p):void

glClearNamedFramebufferuiv(framebuffer as GLuint, buffer as GLenum, drawbuffer as GLint, value:nil as const_GLuint_p):void

glCompressedTextureSubImage1D(texture as GLuint, level as GLint, xoffset as GLint, width as GLsizei, format as GLenum, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTextureSubImage2D(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, width as GLsizei, height as GLsizei, format as GLenum, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTextureSubImage3D(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, format as GLenum, imageSize as GLsizei, data:nil as const_void_p):void

glCopyNamedBufferSubData(readBuffer as GLuint, writeBuffer as GLuint, readOffset as GLintptr, writeOffset as GLintptr, size as GLsizeiptr):void

glCopyTextureSubImage1D(texture as GLuint, level as GLint, xoffset as GLint, x as GLint, y as GLint, width as GLsizei):void

glCopyTextureSubImage2D(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, x as GLint, y as GLint, width as GLsizei, height as GLsizei):void

glCopyTextureSubImage3D(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, x as GLint, y as GLint, width as GLsizei, height as GLsizei):void

glCreateBuffers(n as GLsizei, buffers:nil as GLuint_p):void

glCreateFramebuffers(n as GLsizei, framebuffers:nil as GLuint_p):void

glCreateProgramPipelines(n as GLsizei, pipelines:nil as GLuint_p):void

glCreateQueries(target as GLenum, n as GLsizei, ids:nil as GLuint_p):void

glCreateRenderbuffers(n as GLsizei, renderbuffers:nil as GLuint_p):void

glCreateSamplers(n as GLsizei, samplers:nil as GLuint_p):void

glCreateTextures(target as GLenum, n as GLsizei, textures:nil as GLuint_p):void

glCreateTransformFeedbacks(n as GLsizei, ids:nil as GLuint_p):void

glCreateVertexArrays(n as GLsizei, arrays:nil as GLuint_p):void

glDisableVertexArrayAttrib(vaobj as GLuint, index as GLuint):void

glEnableVertexArrayAttrib(vaobj as GLuint, index as GLuint):void

glFlushMappedNamedBufferRange(buffer as GLuint, offset as GLintptr, length as GLsizeiptr):void

glGenerateTextureMipmap(texture as GLuint):void

glGetCompressedTextureImage(texture as GLuint, level as GLint, bufSize as GLsizei, pixels:nil as void_p):void

glGetNamedBufferParameteri64v(buffer as GLuint, pname as GLenum, params:nil as GLint64_p):void

glGetNamedBufferParameteriv(buffer as GLuint, pname as GLenum, params:nil as GLint_p):void

//glGetNamedBufferPointerv(buffer as GLuint, pname as GLenum, params as void_p__p):void

glGetNamedBufferSubData(buffer as GLuint, offset as GLintptr, size as GLsizeiptr, data:nil as void_p):void

glGetNamedFramebufferAttachmentParameteriv(framebuffer as GLuint, attachment as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetNamedFramebufferParameteriv(framebuffer as GLuint, pname as GLenum, param:nil as GLint_p):void

glGetNamedRenderbufferParameteriv(renderbuffer as GLuint, pname as GLenum, params:nil as GLint_p):void

glGetQueryBufferObjecti64v(id as GLuint, buffer as GLuint, pname as GLenum, offset as GLintptr):void

glGetQueryBufferObjectiv(id as GLuint, buffer as GLuint, pname as GLenum, offset as GLintptr):void

glGetQueryBufferObjectui64v(id as GLuint, buffer as GLuint, pname as GLenum, offset as GLintptr):void

glGetQueryBufferObjectuiv(id as GLuint, buffer as GLuint, pname as GLenum, offset as GLintptr):void

glGetTextureImage(texture as GLuint, level as GLint, format as GLenum, type as GLenum, bufSize as GLsizei, pixels:nil as void_p):void

glGetTextureLevelParameterfv(texture as GLuint, level as GLint, pname as GLenum, params:nil as GLfloat_p):void

glGetTextureLevelParameteriv(texture as GLuint, level as GLint, pname as GLenum, params:nil as GLint_p):void

glGetTextureParameterIiv(texture as GLuint, pname as GLenum, params:nil as GLint_p):void

glGetTextureParameterIuiv(texture as GLuint, pname as GLenum, params:nil as GLuint_p):void

glGetTextureParameterfv(texture as GLuint, pname as GLenum, params:nil as GLfloat_p):void

glGetTextureParameteriv(texture as GLuint, pname as GLenum, params:nil as GLint_p):void

glGetTransformFeedbacki64_v(xfb as GLuint, pname as GLenum, index as GLuint, param:nil as GLint64_p):void

glGetTransformFeedbacki_v(xfb as GLuint, pname as GLenum, index as GLuint, param:nil as GLint_p):void

glGetTransformFeedbackiv(xfb as GLuint, pname as GLenum, param:nil as GLint_p):void

glGetVertexArrayIndexed64iv(vaobj as GLuint, index as GLuint, pname as GLenum, param:nil as GLint64_p):void

glGetVertexArrayIndexediv(vaobj as GLuint, index as GLuint, pname as GLenum, param:nil as GLint_p):void

glGetVertexArrayiv(vaobj as GLuint, pname as GLenum, param:nil as GLint_p):void

glInvalidateNamedFramebufferData(framebuffer as GLuint, numAttachments as GLsizei, attachments:nil as const_GLenum_p):void

glInvalidateNamedFramebufferSubData(framebuffer as GLuint, numAttachments as GLsizei, attachments:nil as const_GLenum_p, x as GLint, y as GLint, width as GLsizei, height as GLsizei):void

//glMapNamedBuffer(buffer as GLuint, access as GLenum):void *

//glMapNamedBufferRange(buffer as GLuint, offset as GLintptr, length as GLsizeiptr, access as GLbitfield):void *

glNamedBufferData(buffer as GLuint, size as GLsizeiptr, data:nil as const_void_p, usage as GLenum):void

glNamedBufferStorage(buffer as GLuint, size as GLsizeiptr, data:nil as const_void_p, flags as GLbitfield):void

glNamedBufferSubData(buffer as GLuint, offset as GLintptr, size as GLsizeiptr, data:nil as const_void_p):void

glNamedFramebufferDrawBuffer(framebuffer as GLuint, mode as GLenum):void

glNamedFramebufferDrawBuffers(framebuffer as GLuint, n as GLsizei, bufs:nil as const_GLenum_p):void

glNamedFramebufferParameteri(framebuffer as GLuint, pname as GLenum, param as GLint):void

glNamedFramebufferReadBuffer(framebuffer as GLuint, mode as GLenum):void

glNamedFramebufferRenderbuffer(framebuffer as GLuint, attachment as GLenum, renderbuffertarget as GLenum, renderbuffer as GLuint):void

glNamedFramebufferTexture(framebuffer as GLuint, attachment as GLenum, texture as GLuint, level as GLint):void

glNamedFramebufferTextureLayer(framebuffer as GLuint, attachment as GLenum, texture as GLuint, level as GLint, layer as GLint):void

glNamedRenderbufferStorage(renderbuffer as GLuint, internalformat as GLenum, width as GLsizei, height as GLsizei):void

glNamedRenderbufferStorageMultisample(renderbuffer as GLuint, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei):void

glTextureBuffer(texture as GLuint, internalformat as GLenum, buffer as GLuint):void

glTextureBufferRange(texture as GLuint, internalformat as GLenum, buffer as GLuint, offset as GLintptr, size as GLsizeiptr):void

glTextureParameterIiv(texture as GLuint, pname as GLenum, params:nil as const_GLint_p):void

glTextureParameterIuiv(texture as GLuint, pname as GLenum, params:nil as const_GLuint_p):void

glTextureParameterf(texture as GLuint, pname as GLenum, param as GLfloat):void

glTextureParameterfv(texture as GLuint, pname as GLenum, param:nil as const_GLfloat_p):void

glTextureParameteri(texture as GLuint, pname as GLenum, param as GLint):void

glTextureParameteriv(texture as GLuint, pname as GLenum, param:nil as const_GLint_p):void

glTextureStorage1D(texture as GLuint, levels as GLsizei, internalformat as GLenum, width as GLsizei):void

glTextureStorage2D(texture as GLuint, levels as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei):void

glTextureStorage2DMultisample(texture as GLuint, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, fixedsamplelocations as GLboolean):void

glTextureStorage3D(texture as GLuint, levels as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, depth as GLsizei):void

glTextureStorage3DMultisample(texture as GLuint, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, depth as GLsizei, fixedsamplelocations as GLboolean):void

glTextureSubImage1D(texture as GLuint, level as GLint, xoffset as GLint, width as GLsizei, format as GLenum, type as GLenum, pixels:nil as const_void_p):void

glTextureSubImage2D(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, width as GLsizei, height as GLsizei, format as GLenum, type as GLenum, pixels:nil as const_void_p):void

glTextureSubImage3D(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, format as GLenum, type as GLenum, pixels:nil as const_void_p):void

glTransformFeedbackBufferBase(xfb as GLuint, index as GLuint, buffer as GLuint):void

glTransformFeedbackBufferRange(xfb as GLuint, index as GLuint, buffer as GLuint, offset as GLintptr, size as GLsizeiptr):void

glUnmapNamedBuffer(buffer as GLuint) as GLboolean

glVertexArrayAttribBinding(vaobj as GLuint, attribindex as GLuint, bindingindex as GLuint):void

glVertexArrayAttribFormat(vaobj as GLuint, attribindex as GLuint, size as GLint, type as GLenum, normalized as GLboolean, relativeoffset as GLuint):void

glVertexArrayAttribIFormat(vaobj as GLuint, attribindex as GLuint, size as GLint, type as GLenum, relativeoffset as GLuint):void

glVertexArrayAttribLFormat(vaobj as GLuint, attribindex as GLuint, size as GLint, type as GLenum, relativeoffset as GLuint):void

glVertexArrayBindingDivisor(vaobj as GLuint, bindingindex as GLuint, divisor as GLuint):void

glVertexArrayElementBuffer(vaobj as GLuint, buffer as GLuint):void

glVertexArrayVertexBuffer(vaobj as GLuint, bindingindex as GLuint, buffer as GLuint, offset as GLintptr, stride as GLsizei):void

glVertexArrayVertexBuffers(vaobj as GLuint, first as GLuint, count as GLsizei, buffers:nil as const_GLuint_p, offsets:nil as const_GLintptr_p, strides:nil as const_GLsizei_p):void

//======== GL_ARB_draw_buffers ========

glDrawBuffersARB(n as GLsizei, bufs:nil as const_GLenum_p):void

//======== GL_ARB_draw_buffers_blend ========

glBlendEquationSeparateiARB(buf as GLuint, modeRGB as GLenum, modeAlpha as GLenum):void

glBlendEquationiARB(buf as GLuint, mode as GLenum):void

glBlendFuncSeparateiARB(buf as GLuint, srcRGB as GLenum, dstRGB as GLenum, srcAlpha as GLenum, dstAlpha as GLenum):void

glBlendFunciARB(buf as GLuint, src as GLenum, dst as GLenum):void

//======== GL_ARB_draw_elements_base_vertex ========

glDrawElementsBaseVertex(mode as GLenum, count as GLsizei, type as GLenum, indices:nil as void_p, basevertex as GLint):void

glDrawElementsInstancedBaseVertex(mode as GLenum, count as GLsizei, type as GLenum, indices:nil as const_void_p, primcount as GLsizei, basevertex as GLint):void

glDrawRangeElementsBaseVertex(mode as GLenum, start as GLuint, end as GLuint, count as GLsizei, type as GLenum, indices:nil as void_p, basevertex as GLint):void

//glMultiDrawElementsBaseVertex(mode as GLenum, count:nil as GLsizei_p, type as GLenum, , primcount as GLsizei, basevertex:nil as GLint_p):void

//======== GL_ARB_draw_indirect ========

glDrawArraysIndirect(mode as GLenum, indirect:nil as const_void_p):void

glDrawElementsIndirect(mode as GLenum, type as GLenum, indirect:nil as const_void_p):void

//======== GL_ARB_framebuffer_no_attachments ========

glFramebufferParameteri(target as GLenum, pname as GLenum, param as GLint):void

glGetFramebufferParameteriv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetNamedFramebufferParameterivEXT(framebuffer as GLuint, pname as GLenum, params:nil as GLint_p):void

glNamedFramebufferParameteriEXT(framebuffer as GLuint, pname as GLenum, param as GLint):void

//======== GL_ARB_framebuffer_object ========

glBindFramebuffer(target as GLenum, framebuffer as GLuint):void

glBindRenderbuffer(target as GLenum, renderbuffer as GLuint):void

glBlitFramebuffer(srcX0 as GLint, srcY0 as GLint, srcX1 as GLint, srcY1 as GLint, dstX0 as GLint, dstY0 as GLint, dstX1 as GLint, dstY1 as GLint, mask as GLbitfield, filter as GLenum):void

glCheckFramebufferStatus(target as GLenum) as GLenum

glDeleteFramebuffers(n as GLsizei, framebuffers:nil as const_GLuint_p):void

glDeleteRenderbuffers(n as GLsizei, renderbuffers:nil as const_GLuint_p):void

glFramebufferRenderbuffer(target as GLenum, attachment as GLenum, renderbuffertarget as GLenum, renderbuffer as GLuint):void

glFramebufferTexture1D(target as GLenum, attachment as GLenum, textarget as GLenum, texture as GLuint, level as GLint):void

glFramebufferTexture2D(target as GLenum, attachment as GLenum, textarget as GLenum, texture as GLuint, level as GLint):void

glFramebufferTexture3D(target as GLenum, attachment as GLenum, textarget as GLenum, texture as GLuint, level as GLint, layer as GLint):void

glFramebufferTextureLayer(target as GLenum, attachment as GLenum, texture as GLuint, level as GLint, layer as GLint):void

glGenFramebuffers(n as GLsizei, framebuffers:nil as GLuint_p):void

glGenRenderbuffers(n as GLsizei, renderbuffers:nil as GLuint_p):void

glGenerateMipmap(target as GLenum):void

glGetFramebufferAttachmentParameteriv(target as GLenum, attachment as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetRenderbufferParameteriv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glIsFramebuffer(framebuffer as GLuint) as GLboolean

glIsRenderbuffer(renderbuffer as GLuint) as GLboolean

glRenderbufferStorage(target as GLenum, internalformat as GLenum, width as GLsizei, height as GLsizei):void

glRenderbufferStorageMultisample(target as GLenum, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei):void

//======== GL_ARB_geometry_shader4 ========

glFramebufferTextureARB(target as GLenum, attachment as GLenum, texture as GLuint, level as GLint):void

glFramebufferTextureFaceARB(target as GLenum, attachment as GLenum, texture as GLuint, level as GLint, face as GLenum):void

glFramebufferTextureLayerARB(target as GLenum, attachment as GLenum, texture as GLuint, level as GLint, layer as GLint):void

glProgramParameteriARB(program as GLuint, pname as GLenum, value as GLint):void

//======== GL_ARB_get_program_binary ========

//glGetProgramBinary(program as GLuint, bufSize as GLsizei, length:nil as GLsizei_p, binaryFormat:nil as GLenum_p, ):void

glProgramBinary(program as GLuint, binaryFormat as GLenum, binary:nil as const_void_p, length as GLsizei):void

glProgramParameteri(program as GLuint, pname as GLenum, value as GLint):void

//======== GL_ARB_get_texture_sub_image ========

glGetCompressedTextureSubImage(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, bufSize as GLsizei, pixels:nil as void_p):void

glGetTextureSubImage(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, format as GLenum, type as GLenum, bufSize as GLsizei, pixels:nil as void_p):void

//======== GL_ARB_gl_spirv ========

glSpecializeShaderARB(shader as GLuint, pEntryPoint:nil as const_GLchar_p, numSpecializationConstants as GLuint, pConstantIndex:nil as const_GLuint_p, pConstantValue:nil as const_GLuint_p):void

//======== GL_ARB_gpu_shader_fp64 ========

glGetUniformdv(program as GLuint, location as GLint, params:nil as GLdouble_p):void

glUniform1d(location as GLint, x as GLdouble):void

glUniform1dv(location as GLint, count as GLsizei, value:nil as const_GLdouble_p):void

glUniform2d(location as GLint, x as GLdouble, y as GLdouble):void

glUniform2dv(location as GLint, count as GLsizei, value:nil as const_GLdouble_p):void

glUniform3d(location as GLint, x as GLdouble, y as GLdouble, z as GLdouble):void

glUniform3dv(location as GLint, count as GLsizei, value:nil as const_GLdouble_p):void

glUniform4d(location as GLint, x as GLdouble, y as GLdouble, z as GLdouble, w as GLdouble):void

glUniform4dv(location as GLint, count as GLsizei, value:nil as const_GLdouble_p):void

glUniformMatrix2dv(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glUniformMatrix2x3dv(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glUniformMatrix2x4dv(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glUniformMatrix3dv(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glUniformMatrix3x2dv(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glUniformMatrix3x4dv(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glUniformMatrix4dv(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glUniformMatrix4x2dv(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glUniformMatrix4x3dv(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

//======== GL_ARB_gpu_shader_int64 ========

glGetUniformi64vARB(program as GLuint, location as GLint, params:nil as GLint64_p):void

glGetUniformui64vARB(program as GLuint, location as GLint, params:nil as GLuint64_p):void

glGetnUniformi64vARB(program as GLuint, location as GLint, bufSize as GLsizei, params:nil as GLint64_p):void

glGetnUniformui64vARB(program as GLuint, location as GLint, bufSize as GLsizei, params:nil as GLuint64_p):void

glProgramUniform1i64ARB(program as GLuint, location as GLint, x as GLint64):void

glProgramUniform1i64vARB(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLint64_p):void

glProgramUniform1ui64ARB(program as GLuint, location as GLint, x as GLuint64):void

glProgramUniform1ui64vARB(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLuint64_p):void

glProgramUniform2i64ARB(program as GLuint, location as GLint, x as GLint64, y as GLint64):void

glProgramUniform2i64vARB(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLint64_p):void

glProgramUniform2ui64ARB(program as GLuint, location as GLint, x as GLuint64, y as GLuint64):void

glProgramUniform2ui64vARB(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLuint64_p):void

glProgramUniform3i64ARB(program as GLuint, location as GLint, x as GLint64, y as GLint64, z as GLint64):void

glProgramUniform3i64vARB(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLint64_p):void

glProgramUniform3ui64ARB(program as GLuint, location as GLint, x as GLuint64, y as GLuint64, z as GLuint64):void

glProgramUniform3ui64vARB(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLuint64_p):void

glProgramUniform4i64ARB(program as GLuint, location as GLint, x as GLint64, y as GLint64, z as GLint64, w as GLint64):void

glProgramUniform4i64vARB(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLint64_p):void

glProgramUniform4ui64ARB(program as GLuint, location as GLint, x as GLuint64, y as GLuint64, z as GLuint64, w as GLuint64):void

glProgramUniform4ui64vARB(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLuint64_p):void

glUniform1i64ARB(location as GLint, x as GLint64):void

glUniform1i64vARB(location as GLint, count as GLsizei, value:nil as const_GLint64_p):void

glUniform1ui64ARB(location as GLint, x as GLuint64):void

glUniform1ui64vARB(location as GLint, count as GLsizei, value:nil as const_GLuint64_p):void

glUniform2i64ARB(location as GLint, x as GLint64, y as GLint64):void

glUniform2i64vARB(location as GLint, count as GLsizei, value:nil as const_GLint64_p):void

glUniform2ui64ARB(location as GLint, x as GLuint64, y as GLuint64):void

glUniform2ui64vARB(location as GLint, count as GLsizei, value:nil as const_GLuint64_p):void

glUniform3i64ARB(location as GLint, x as GLint64, y as GLint64, z as GLint64):void

glUniform3i64vARB(location as GLint, count as GLsizei, value:nil as const_GLint64_p):void

glUniform3ui64ARB(location as GLint, x as GLuint64, y as GLuint64, z as GLuint64):void

glUniform3ui64vARB(location as GLint, count as GLsizei, value:nil as const_GLuint64_p):void

glUniform4i64ARB(location as GLint, x as GLint64, y as GLint64, z as GLint64, w as GLint64):void

glUniform4i64vARB(location as GLint, count as GLsizei, value:nil as const_GLint64_p):void

glUniform4ui64ARB(location as GLint, x as GLuint64, y as GLuint64, z as GLuint64, w as GLuint64):void

glUniform4ui64vARB(location as GLint, count as GLsizei, value:nil as const_GLuint64_p):void

//======== GL_ARB_imaging ========

glColorSubTable(target as GLenum, start as GLsizei, count as GLsizei, format as GLenum, type as GLenum, data:nil as const_void_p):void

glColorTable(target as GLenum, internalformat as GLenum, width as GLsizei, format as GLenum, type as GLenum, table:nil as const_void_p):void

glColorTableParameterfv(target as GLenum, pname as GLenum, params:nil as const_GLfloat_p):void

glColorTableParameteriv(target as GLenum, pname as GLenum, params:nil as const_GLint_p):void

glConvolutionFilter1D(target as GLenum, internalformat as GLenum, width as GLsizei, format as GLenum, type as GLenum, image:nil as const_void_p):void

glConvolutionFilter2D(target as GLenum, internalformat as GLenum, width as GLsizei, height as GLsizei, format as GLenum, type as GLenum, image:nil as const_void_p):void

glConvolutionParameterf(target as GLenum, pname as GLenum, params as GLfloat):void

glConvolutionParameterfv(target as GLenum, pname as GLenum, params:nil as const_GLfloat_p):void

glConvolutionParameteri(target as GLenum, pname as GLenum, params as GLint):void

glConvolutionParameteriv(target as GLenum, pname as GLenum, params:nil as const_GLint_p):void

glCopyColorSubTable(target as GLenum, start as GLsizei, x as GLint, y as GLint, width as GLsizei):void

glCopyColorTable(target as GLenum, internalformat as GLenum, x as GLint, y as GLint, width as GLsizei):void

glCopyConvolutionFilter1D(target as GLenum, internalformat as GLenum, x as GLint, y as GLint, width as GLsizei):void

glCopyConvolutionFilter2D(target as GLenum, internalformat as GLenum, x as GLint, y as GLint, width as GLsizei, height as GLsizei):void

glGetColorTable(target as GLenum, format as GLenum, type as GLenum, table:nil as void_p):void

glGetColorTableParameterfv(target as GLenum, pname as GLenum, params:nil as GLfloat_p):void

glGetColorTableParameteriv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetConvolutionFilter(target as GLenum, format as GLenum, type as GLenum, image:nil as void_p):void

glGetConvolutionParameterfv(target as GLenum, pname as GLenum, params:nil as GLfloat_p):void

glGetConvolutionParameteriv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetHistogram(target as GLenum, reset as GLboolean, format as GLenum, type as GLenum, values:nil as void_p):void

glGetHistogramParameterfv(target as GLenum, pname as GLenum, params:nil as GLfloat_p):void

glGetHistogramParameteriv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetMinmax(target as GLenum, reset as GLboolean, format as GLenum, types as GLenum, values:nil as void_p):void

glGetMinmaxParameterfv(target as GLenum, pname as GLenum, params:nil as GLfloat_p):void

glGetMinmaxParameteriv(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetSeparableFilter(target as GLenum, format as GLenum, type as GLenum, row:nil as void_p, column:nil as void_p, span:nil as void_p):void

glHistogram(target as GLenum, width as GLsizei, internalformat as GLenum, sink as GLboolean):void

glMinmax(target as GLenum, internalformat as GLenum, sink as GLboolean):void

glResetHistogram(target as GLenum):void

glResetMinmax(target as GLenum):void

glSeparableFilter2D(target as GLenum, internalformat as GLenum, width as GLsizei, height as GLsizei, format as GLenum, type as GLenum, row:nil as const_void_p, column:nil as const_void_p):void

//======== GL_ARB_indirect_parameters ========

glMultiDrawArraysIndirectCountARB(mode as GLenum, indirect:nil as const_void_p, drawcount as GLintptr, maxdrawcount as GLsizei, stride as GLsizei):void

glMultiDrawElementsIndirectCountARB(mode as GLenum, type as GLenum, indirect:nil as const_void_p, drawcount as GLintptr, maxdrawcount as GLsizei, stride as GLsizei):void

//======== GL_ARB_instanced_arrays ========

glDrawArraysInstancedARB(mode as GLenum, first as GLint, count as GLsizei, primcount as GLsizei):void

glDrawElementsInstancedARB(mode as GLenum, count as GLsizei, type as GLenum, indices:nil as const_void_p, primcount as GLsizei):void

glVertexAttribDivisorARB(index as GLuint, divisor as GLuint):void

//======== GL_ARB_internalformat_query ========

glGetInternalformativ(target as GLenum, internalformat as GLenum, pname as GLenum, bufSize as GLsizei, params:nil as GLint_p):void

//======== GL_ARB_internalformat_query2 ========

glGetInternalformati64v(target as GLenum, internalformat as GLenum, pname as GLenum, bufSize as GLsizei, params:nil as GLint64_p):void

//======== GL_ARB_invalidate_subdata ========

glInvalidateBufferData(buffer as GLuint):void

glInvalidateBufferSubData(buffer as GLuint, offset as GLintptr, length as GLsizeiptr):void

glInvalidateFramebuffer(target as GLenum, numAttachments as GLsizei, attachments:nil as const_GLenum_p):void

glInvalidateSubFramebuffer(target as GLenum, numAttachments as GLsizei, attachments:nil as const_GLenum_p, x as GLint, y as GLint, width as GLsizei, height as GLsizei):void

glInvalidateTexImage(texture as GLuint, level as GLint):void

glInvalidateTexSubImage(texture as GLuint, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei):void

//======== GL_ARB_map_buffer_range ========

glFlushMappedBufferRange(target as GLenum, offset as GLintptr, length as GLsizeiptr):void

//glMapBufferRange(target as GLenum, offset as GLintptr, length as GLsizeiptr, access as GLbitfield):void *

//======== GL_ARB_matrix_palette ========

glCurrentPaletteMatrixARB(index as GLint):void

glMatrixIndexPointerARB(size as GLint, type as GLenum, stride as GLsizei, pointer:nil as void_p):void

glMatrixIndexubvARB(size as GLint, indices:nil as GLubyte_p):void

glMatrixIndexuivARB(size as GLint, indices:nil as GLuint_p):void

glMatrixIndexusvARB(size as GLint, indices:nil as GLushort_p):void

//======== GL_ARB_multi_bind ========

glBindBuffersBase(target as GLenum, first as GLuint, count as GLsizei, buffers:nil as const_GLuint_p):void

glBindBuffersRange(target as GLenum, first as GLuint, count as GLsizei, buffers:nil as const_GLuint_p, offsets:nil as const_GLintptr_p, sizes:nil as const_GLsizeiptr_p):void

glBindImageTextures(first as GLuint, count as GLsizei, textures:nil as const_GLuint_p):void

glBindSamplers(first as GLuint, count as GLsizei, samplers:nil as const_GLuint_p):void

glBindTextures(first as GLuint, count as GLsizei, textures:nil as const_GLuint_p):void

glBindVertexBuffers(first as GLuint, count as GLsizei, buffers:nil as const_GLuint_p, offsets:nil as const_GLintptr_p, strides:nil as const_GLsizei_p):void

//======== GL_ARB_multi_draw_indirect ========

glMultiDrawArraysIndirect(mode as GLenum, indirect:nil as const_void_p, primcount as GLsizei, stride as GLsizei):void

glMultiDrawElementsIndirect(mode as GLenum, type as GLenum, indirect:nil as const_void_p, primcount as GLsizei, stride as GLsizei):void

//======== GL_ARB_multisample ========

glSampleCoverageARB(value as GLclampf, invert as GLboolean):void

//======== GL_ARB_multitexture ========

glActiveTextureARB(texture as GLenum):void

glClientActiveTextureARB(texture as GLenum):void

glMultiTexCoord1dARB(target as GLenum, s as GLdouble):void

glMultiTexCoord1dvARB(target as GLenum, v:nil as const_GLdouble_p):void

glMultiTexCoord1fARB(target as GLenum, s as GLfloat):void

glMultiTexCoord1fvARB(target as GLenum, v:nil as const_GLfloat_p):void

glMultiTexCoord1iARB(target as GLenum, s as GLint):void

glMultiTexCoord1ivARB(target as GLenum, v:nil as const_GLint_p):void

glMultiTexCoord1sARB(target as GLenum, s as GLshort):void

glMultiTexCoord1svARB(target as GLenum, v:nil as const_GLshort_p):void

glMultiTexCoord2dARB(target as GLenum, s as GLdouble, t as GLdouble):void

glMultiTexCoord2dvARB(target as GLenum, v:nil as const_GLdouble_p):void

glMultiTexCoord2fARB(target as GLenum, s as GLfloat, t as GLfloat):void

glMultiTexCoord2fvARB(target as GLenum, v:nil as const_GLfloat_p):void

glMultiTexCoord2iARB(target as GLenum, s as GLint, t as GLint):void

glMultiTexCoord2ivARB(target as GLenum, v:nil as const_GLint_p):void

glMultiTexCoord2sARB(target as GLenum, s as GLshort, t as GLshort):void

glMultiTexCoord2svARB(target as GLenum, v:nil as const_GLshort_p):void

glMultiTexCoord3dARB(target as GLenum, s as GLdouble, t as GLdouble, r as GLdouble):void

glMultiTexCoord3dvARB(target as GLenum, v:nil as const_GLdouble_p):void

glMultiTexCoord3fARB(target as GLenum, s as GLfloat, t as GLfloat, r as GLfloat):void

glMultiTexCoord3fvARB(target as GLenum, v:nil as const_GLfloat_p):void

glMultiTexCoord3iARB(target as GLenum, s as GLint, t as GLint, r as GLint):void

glMultiTexCoord3ivARB(target as GLenum, v:nil as const_GLint_p):void

glMultiTexCoord3sARB(target as GLenum, s as GLshort, t as GLshort, r as GLshort):void

glMultiTexCoord3svARB(target as GLenum, v:nil as const_GLshort_p):void

glMultiTexCoord4dARB(target as GLenum, s as GLdouble, t as GLdouble, r as GLdouble, q as GLdouble):void

glMultiTexCoord4dvARB(target as GLenum, v:nil as const_GLdouble_p):void

glMultiTexCoord4fARB(target as GLenum, s as GLfloat, t as GLfloat, r as GLfloat, q as GLfloat):void

glMultiTexCoord4fvARB(target as GLenum, v:nil as const_GLfloat_p):void

glMultiTexCoord4iARB(target as GLenum, s as GLint, t as GLint, r as GLint, q as GLint):void

glMultiTexCoord4ivARB(target as GLenum, v:nil as const_GLint_p):void

glMultiTexCoord4sARB(target as GLenum, s as GLshort, t as GLshort, r as GLshort, q as GLshort):void

glMultiTexCoord4svARB(target as GLenum, v:nil as const_GLshort_p):void

//======== GL_ARB_occlusion_query ========

glBeginQueryARB(target as GLenum, id as GLuint):void

glDeleteQueriesARB(n as GLsizei, ids:nil as const_GLuint_p):void

glEndQueryARB(target as GLenum):void

glGenQueriesARB(n as GLsizei, ids:nil as GLuint_p):void

glGetQueryObjectivARB(id as GLuint, pname as GLenum, params:nil as GLint_p):void

glGetQueryObjectuivARB(id as GLuint, pname as GLenum, params:nil as GLuint_p):void

glGetQueryivARB(target as GLenum, pname as GLenum, params:nil as GLint_p):void

glIsQueryARB(id as GLuint) as GLboolean

//======== GL_ARB_parallel_shader_compile ========

glMaxShaderCompilerThreadsARB(count as GLuint):void

//======== GL_ARB_point_parameters ========

glPointParameterfARB(pname as GLenum, param as GLfloat):void

glPointParameterfvARB(pname as GLenum, params:nil as const_GLfloat_p):void

//======== GL_ARB_polygon_offset_clamp ========

glPolygonOffsetClamp(factor as GLfloat, units as GLfloat, clamp as GLfloat):void

//======== GL_ARB_program_interface_query ========

glGetProgramInterfaceiv(program as GLuint, programInterface as GLenum, pname as GLenum, params:nil as GLint_p):void

glGetProgramResourceIndex(program as GLuint, programInterface as GLenum, name as String_const_GLchar_p) as GLuint

glGetProgramResourceLocation(program as GLuint, programInterface as GLenum, name as String_const_GLchar_p) as GLint

glGetProgramResourceLocationIndex(program as GLuint, programInterface as GLenum, name as String_const_GLchar_p) as GLint

glGetProgramResourceName(program as GLuint, programInterface as GLenum, index as GLuint, bufSize as GLsizei, length:nil as GLsizei_p, name:nil as GLchar_p):void

glGetProgramResourceiv(program as GLuint, programInterface as GLenum, index as GLuint, propCount as GLsizei, props:nil as const_GLenum_p, bufSize as GLsizei, length:nil as GLsizei_p, params:nil as GLint_p):void

//======== GL_ARB_provoking_vertex ========

glProvokingVertex(mode as GLenum):void

//======== GL_ARB_robustness ========

glGetGraphicsResetStatusARB() as GLenum

glGetnColorTableARB(target as GLenum, format as GLenum, type as GLenum, bufSize as GLsizei, table:nil as void_p):void

glGetnCompressedTexImageARB(target as GLenum, lod as GLint, bufSize as GLsizei, img:nil as void_p):void

glGetnConvolutionFilterARB(target as GLenum, format as GLenum, type as GLenum, bufSize as GLsizei, image:nil as void_p):void

glGetnHistogramARB(target as GLenum, reset as GLboolean, format as GLenum, type as GLenum, bufSize as GLsizei, values:nil as void_p):void

glGetnMapdvARB(target as GLenum, query as GLenum, bufSize as GLsizei, v:nil as GLdouble_p):void

glGetnMapfvARB(target as GLenum, query as GLenum, bufSize as GLsizei, v:nil as GLfloat_p):void

glGetnMapivARB(target as GLenum, query as GLenum, bufSize as GLsizei, v:nil as GLint_p):void

glGetnMinmaxARB(target as GLenum, reset as GLboolean, format as GLenum, type as GLenum, bufSize as GLsizei, values:nil as void_p):void

glGetnPixelMapfvARB(map as GLenum, bufSize as GLsizei, values:nil as GLfloat_p):void

glGetnPixelMapuivARB(map as GLenum, bufSize as GLsizei, values:nil as GLuint_p):void

glGetnPixelMapusvARB(map as GLenum, bufSize as GLsizei, values:nil as GLushort_p):void

glGetnPolygonStippleARB(bufSize as GLsizei, pattern:nil as GLubyte_p):void

//glGetnSeparableFilterARB(target as GLenum, format as GLenum, type as GLenum, rowBufSize as GLsizei, row:nil as void_p, columnBufSize as GLsizei, , ):void

glGetnTexImageARB(target as GLenum, level as GLint, format as GLenum, type as GLenum, bufSize as GLsizei, img:nil as void_p):void

glGetnUniformdvARB(program as GLuint, location as GLint, bufSize as GLsizei, params:nil as GLdouble_p):void

glGetnUniformfvARB(program as GLuint, location as GLint, bufSize as GLsizei, params:nil as GLfloat_p):void

glGetnUniformivARB(program as GLuint, location as GLint, bufSize as GLsizei, params:nil as GLint_p):void

glGetnUniformuivARB(program as GLuint, location as GLint, bufSize as GLsizei, params:nil as GLuint_p):void

glReadnPixelsARB(x as GLint, y as GLint, width as GLsizei, height as GLsizei, format as GLenum, type as GLenum, bufSize as GLsizei, data:nil as void_p):void

//======== GL_ARB_sample_locations ========

glFramebufferSampleLocationsfvARB(target as GLenum, start as GLuint, count as GLsizei, v:nil as const_GLfloat_p):void

glNamedFramebufferSampleLocationsfvARB(framebuffer as GLuint, start as GLuint, count as GLsizei, v:nil as const_GLfloat_p):void

//======== GL_ARB_sample_shading ========

glMinSampleShadingARB(value as GLclampf):void

//======== GL_ARB_sampler_objects ========

glBindSampler(unit as GLuint, sampler as GLuint):void

glDeleteSamplers(count as GLsizei, samplers:nil as const_GLuint_p):void

glGenSamplers(count as GLsizei, samplers:nil as GLuint_p):void

glGetSamplerParameterIiv(sampler as GLuint, pname as GLenum, params:nil as GLint_p):void

glGetSamplerParameterIuiv(sampler as GLuint, pname as GLenum, params:nil as GLuint_p):void

glGetSamplerParameterfv(sampler as GLuint, pname as GLenum, params:nil as GLfloat_p):void

glGetSamplerParameteriv(sampler as GLuint, pname as GLenum, params:nil as GLint_p):void

glIsSampler(sampler as GLuint) as GLboolean

glSamplerParameterIiv(sampler as GLuint, pname as GLenum, params:nil as const_GLint_p):void

glSamplerParameterIuiv(sampler as GLuint, pname as GLenum, params:nil as const_GLuint_p):void

glSamplerParameterf(sampler as GLuint, pname as GLenum, param as GLfloat):void

glSamplerParameterfv(sampler as GLuint, pname as GLenum, params:nil as const_GLfloat_p):void

glSamplerParameteri(sampler as GLuint, pname as GLenum, param as GLint):void

glSamplerParameteriv(sampler as GLuint, pname as GLenum, params:nil as const_GLint_p):void

//======== GL_ARB_separate_shader_objects ========

glActiveShaderProgram(pipeline as GLuint, program as GLuint):void

glBindProgramPipeline(pipeline as GLuint):void

//glCreateShaderProgramv(type as GLenum, count as GLsizei, strings:nil as const_GLchar_p_const_p) as GLuint

glDeleteProgramPipelines(n as GLsizei, pipelines:nil as const_GLuint_p):void

glGenProgramPipelines(n as GLsizei, pipelines:nil as GLuint_p):void

glGetProgramPipelineInfoLog(pipeline as GLuint, bufSize as GLsizei, length:nil as GLsizei_p, infoLog:nil as GLchar_p):void

glGetProgramPipelineiv(pipeline as GLuint, pname as GLenum, params:nil as GLint_p):void

glIsProgramPipeline(pipeline as GLuint) as GLboolean

glProgramUniform1d(program as GLuint, location as GLint, x as GLdouble):void

glProgramUniform1dv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLdouble_p):void

glProgramUniform1f(program as GLuint, location as GLint, x as GLfloat):void

glProgramUniform1fv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLfloat_p):void

glProgramUniform1i(program as GLuint, location as GLint, x as GLint):void

glProgramUniform1iv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLint_p):void

glProgramUniform1ui(program as GLuint, location as GLint, x as GLuint):void

glProgramUniform1uiv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLuint_p):void

glProgramUniform2d(program as GLuint, location as GLint, x as GLdouble, y as GLdouble):void

glProgramUniform2dv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLdouble_p):void

glProgramUniform2f(program as GLuint, location as GLint, x as GLfloat, y as GLfloat):void

glProgramUniform2fv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLfloat_p):void

glProgramUniform2i(program as GLuint, location as GLint, x as GLint, y as GLint):void

glProgramUniform2iv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLint_p):void

glProgramUniform2ui(program as GLuint, location as GLint, x as GLuint, y as GLuint):void

glProgramUniform2uiv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLuint_p):void

glProgramUniform3d(program as GLuint, location as GLint, x as GLdouble, y as GLdouble, z as GLdouble):void

glProgramUniform3dv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLdouble_p):void

glProgramUniform3f(program as GLuint, location as GLint, x as GLfloat, y as GLfloat, z as GLfloat):void

glProgramUniform3fv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLfloat_p):void

glProgramUniform3i(program as GLuint, location as GLint, x as GLint, y as GLint, z as GLint):void

glProgramUniform3iv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLint_p):void

glProgramUniform3ui(program as GLuint, location as GLint, x as GLuint, y as GLuint, z as GLuint):void

glProgramUniform3uiv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLuint_p):void

glProgramUniform4d(program as GLuint, location as GLint, x as GLdouble, y as GLdouble, z as GLdouble, w as GLdouble):void

glProgramUniform4dv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLdouble_p):void

glProgramUniform4f(program as GLuint, location as GLint, x as GLfloat, y as GLfloat, z as GLfloat, w as GLfloat):void

glProgramUniform4fv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLfloat_p):void

glProgramUniform4i(program as GLuint, location as GLint, x as GLint, y as GLint, z as GLint, w as GLint):void

glProgramUniform4iv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLint_p):void

glProgramUniform4ui(program as GLuint, location as GLint, x as GLuint, y as GLuint, z as GLuint, w as GLuint):void

glProgramUniform4uiv(program as GLuint, location as GLint, count as GLsizei, value:nil as const_GLuint_p):void

glProgramUniformMatrix2dv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glProgramUniformMatrix2fv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glProgramUniformMatrix2x3dv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glProgramUniformMatrix2x3fv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glProgramUniformMatrix2x4dv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glProgramUniformMatrix2x4fv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glProgramUniformMatrix3dv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glProgramUniformMatrix3fv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glProgramUniformMatrix3x2dv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glProgramUniformMatrix3x2fv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glProgramUniformMatrix3x4dv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glProgramUniformMatrix3x4fv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glProgramUniformMatrix4dv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glProgramUniformMatrix4fv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glProgramUniformMatrix4x2dv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glProgramUniformMatrix4x2fv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glProgramUniformMatrix4x3dv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLdouble_p):void

glProgramUniformMatrix4x3fv(program as GLuint, location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glUseProgramStages(pipeline as GLuint, stages as GLbitfield, program as GLuint):void

glValidateProgramPipeline(pipeline as GLuint):void

//======== GL_ARB_shader_atomic_counters ========

glGetActiveAtomicCounterBufferiv(program as GLuint, bufferIndex as GLuint, pname as GLenum, params:nil as GLint_p):void

//======== GL_ARB_shader_image_load_store ========

glBindImageTexture(unit as GLuint, texture as GLuint, level as GLint, layered as GLboolean, layer as GLint, access as GLenum, format as GLenum):void

glMemoryBarrier(barriers as GLbitfield):void

//======== GL_ARB_shader_objects ========

//glAttachObjectARB(containerObj as GLhandleARB, obj as GLhandleARB):void

//glCompileShaderARB(shaderObj as GLhandleARB):void

//glCreateProgramObjectARB() as GLhandleARB

//glCreateShaderObjectARB(shaderType as GLenum) as GLhandleARB

//glDeleteObjectARB(obj as GLhandleARB):void

//glDetachObjectARB(containerObj as GLhandleARB, attachedObj as GLhandleARB):void

//glGetActiveUniformARB(programObj as GLhandleARB, index as GLuint, maxLength as GLsizei, length:nil as GLsizei_p, size:nil as GLint_p, type:nil as GLenum_p, name:nil as GLcharARB_p):void

//glGetAttachedObjectsARB(containerObj as GLhandleARB, maxCount as GLsizei, count:nil as GLsizei_p, obj:nil as GLhandleARB_p):void

//glGetHandleARB(pname as GLenum) as GLhandleARB

//glGetInfoLogARB(obj as GLhandleARB, maxLength as GLsizei, length:nil as GLsizei_p, infoLog:nil as GLcharARB_p):void

//glGetObjectParameterfvARB(obj as GLhandleARB, pname as GLenum, params:nil as GLfloat_p):void

//glGetObjectParameterivARB(obj as GLhandleARB, pname as GLenum, params:nil as GLint_p):void

//glGetShaderSourceARB(obj as GLhandleARB, maxLength as GLsizei, length:nil as GLsizei_p, source:nil as GLcharARB_p):void

//glGetUniformLocationARB(programObj as GLhandleARB, name:nil as const_GLcharARB_p) as GLint

//glGetUniformfvARB(programObj as GLhandleARB, location as GLint, params:nil as GLfloat_p):void

//glGetUniformivARB(programObj as GLhandleARB, location as GLint, params:nil as GLint_p):void

//glLinkProgramARB(programObj as GLhandleARB):void

//glShaderSourceARB(shaderObj as GLhandleARB, count as GLsizei, string:nil as const_GLcharARB_p__p, length:nil as const_GLint_p):void

glUniform1fARB(location as GLint, v0 as GLfloat):void

glUniform1fvARB(location as GLint, count as GLsizei, value:nil as const_GLfloat_p):void

glUniform1iARB(location as GLint, v0 as GLint):void

glUniform1ivARB(location as GLint, count as GLsizei, value:nil as const_GLint_p):void

glUniform2fARB(location as GLint, v0 as GLfloat, v1 as GLfloat):void

glUniform2fvARB(location as GLint, count as GLsizei, value:nil as const_GLfloat_p):void

glUniform2iARB(location as GLint, v0 as GLint, v1 as GLint):void

glUniform2ivARB(location as GLint, count as GLsizei, value:nil as const_GLint_p):void

glUniform3fARB(location as GLint, v0 as GLfloat, v1 as GLfloat, v2 as GLfloat):void

glUniform3fvARB(location as GLint, count as GLsizei, value:nil as const_GLfloat_p):void

glUniform3iARB(location as GLint, v0 as GLint, v1 as GLint, v2 as GLint):void

glUniform3ivARB(location as GLint, count as GLsizei, value:nil as const_GLint_p):void

glUniform4fARB(location as GLint, v0 as GLfloat, v1 as GLfloat, v2 as GLfloat, v3 as GLfloat):void

glUniform4fvARB(location as GLint, count as GLsizei, value:nil as const_GLfloat_p):void

glUniform4iARB(location as GLint, v0 as GLint, v1 as GLint, v2 as GLint, v3 as GLint):void

glUniform4ivARB(location as GLint, count as GLsizei, value:nil as const_GLint_p):void

glUniformMatrix2fvARB(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glUniformMatrix3fvARB(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

glUniformMatrix4fvARB(location as GLint, count as GLsizei, transpose as GLboolean, value:nil as const_GLfloat_p):void

//glUseProgramObjectARB(programObj as GLhandleARB):void

//glValidateProgramARB(programObj as GLhandleARB):void

//======== GL_ARB_shader_storage_buffer_object ========

glShaderStorageBlockBinding(program as GLuint, storageBlockIndex as GLuint, storageBlockBinding as GLuint):void

//======== GL_ARB_shader_subroutine ========

glGetActiveSubroutineName(program as GLuint, shadertype as GLenum, index as GLuint, bufsize as GLsizei, length:nil as GLsizei_p, name:nil as GLchar_p):void

glGetActiveSubroutineUniformName(program as GLuint, shadertype as GLenum, index as GLuint, bufsize as GLsizei, length:nil as GLsizei_p, name:nil as GLchar_p):void

glGetActiveSubroutineUniformiv(program as GLuint, shadertype as GLenum, index as GLuint, pname as GLenum, values:nil as GLint_p):void

glGetProgramStageiv(program as GLuint, shadertype as GLenum, pname as GLenum, values:nil as GLint_p):void

glGetSubroutineIndex(program as GLuint, shadertype as GLenum, name:nil as const_GLchar_p) as GLuint

glGetSubroutineUniformLocation(program as GLuint, shadertype as GLenum, name:nil as const_GLchar_p) as GLint

glGetUniformSubroutineuiv(shadertype as GLenum, location as GLint, params:nil as GLuint_p):void

glUniformSubroutinesuiv(shadertype as GLenum, count as GLsizei, indices:nil as const_GLuint_p):void

//======== GL_ARB_shading_language_include ========

//glCompileShaderIncludeARB(shader as GLuint, count as GLsizei, path:nil as const_GLchar_p_const_p, length:nil as const_GLint_p):void

glDeleteNamedStringARB(namelen as GLint, name as String_const_GLchar_p):void

glGetNamedStringARB(namelen as GLint, name as String_const_GLchar_p, bufSize as GLsizei, stringlen:nil as GLint_p, string:nil as GLchar_p):void

glGetNamedStringivARB(namelen as GLint, name as String_const_GLchar_p, pname as GLenum, params:nil as GLint_p):void

glIsNamedStringARB(namelen as GLint, name as String_const_GLchar_p) as GLboolean

glNamedStringARB(type as GLenum, namelen as GLint, name as String_const_GLchar_p, stringlen as GLint, string:nil as const_GLchar_p):void

//======== GL_ARB_sparse_buffer ========

glBufferPageCommitmentARB(target as GLenum, offset as GLintptr, size as GLsizeiptr, commit as GLboolean):void

//======== GL_ARB_sparse_texture ========

glTexPageCommitmentARB(target as GLenum, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, commit as GLboolean):void

//======== GL_ARB_sync ========

//glClientWaitSync(GLsync as GLsync, flags as GLbitfield, timeout as GLuint64) as GLenum

//glDeleteSync(GLsync as GLsync):void

//glFenceSync(condition as GLenum, flags as GLbitfield) as GLsync

glGetInteger64v(pname as GLenum, params:nil as GLint64_p):void

//glGetSynciv(GLsync as GLsync, pname as GLenum, bufSize as GLsizei, length:nil as GLsizei_p, values:nil as GLint_p):void

//glIsSync(GLsync as GLsync) as GLboolean

//glWaitSync(GLsync as GLsync, flags as GLbitfield, timeout as GLuint64):void

//======== GL_ARB_tessellation_shader ========

glPatchParameterfv(pname as GLenum, values:nil as const_GLfloat_p):void

glPatchParameteri(pname as GLenum, value as GLint):void

//======== GL_ARB_texture_barrier ========

glTextureBarrier():void

//======== GL_ARB_texture_buffer_object ========

glTexBufferARB(target as GLenum, internalformat as GLenum, buffer as GLuint):void

//======== GL_ARB_texture_buffer_range ========

glTexBufferRange(target as GLenum, internalformat as GLenum, buffer as GLuint, offset as GLintptr, size as GLsizeiptr):void

glTextureBufferRangeEXT(texture as GLuint, target as GLenum, internalformat as GLenum, buffer as GLuint, offset as GLintptr, size as GLsizeiptr):void

//======== GL_ARB_texture_compression ========

glCompressedTexImage1DARB(target as GLenum, level as GLint, internalformat as GLenum, width as GLsizei, border as GLint, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexImage2DARB(target as GLenum, level as GLint, internalformat as GLenum, width as GLsizei, height as GLsizei, border as GLint, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexImage3DARB(target as GLenum, level as GLint, internalformat as GLenum, width as GLsizei, height as GLsizei, depth as GLsizei, border as GLint, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexSubImage1DARB(target as GLenum, level as GLint, xoffset as GLint, width as GLsizei, format as GLenum, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexSubImage2DARB(target as GLenum, level as GLint, xoffset as GLint, yoffset as GLint, width as GLsizei, height as GLsizei, format as GLenum, imageSize as GLsizei, data:nil as const_void_p):void

glCompressedTexSubImage3DARB(target as GLenum, level as GLint, xoffset as GLint, yoffset as GLint, zoffset as GLint, width as GLsizei, height as GLsizei, depth as GLsizei, format as GLenum, imageSize as GLsizei, data:nil as const_void_p):void

glGetCompressedTexImageARB(target as GLenum, lod as GLint, img:nil as void_p):void

//======== GL_ARB_texture_multisample ========

glGetMultisamplefv(pname as GLenum, index as GLuint, val:nil as GLfloat_p):void

glSampleMaski(index as GLuint, mask as GLbitfield):void

glTexImage2DMultisample(target as GLenum, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, fixedsamplelocations as GLboolean):void

glTexImage3DMultisample(target as GLenum, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, depth as GLsizei, fixedsamplelocations as GLboolean):void

//======== GL_ARB_texture_storage ========

glTexStorage1D(target as GLenum, levels as GLsizei, internalformat as GLenum, width as GLsizei):void

glTexStorage2D(target as GLenum, levels as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei):void

glTexStorage3D(target as GLenum, levels as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, depth as GLsizei):void

//======== GL_ARB_texture_storage_multisample ========

glTexStorage2DMultisample(target as GLenum, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, fixedsamplelocations as GLboolean):void

glTexStorage3DMultisample(target as GLenum, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, depth as GLsizei, fixedsamplelocations as GLboolean):void

glTextureStorage2DMultisampleEXT(texture as GLuint, target as GLenum, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, fixedsamplelocations as GLboolean):void

glTextureStorage3DMultisampleEXT(texture as GLuint, target as GLenum, samples as GLsizei, internalformat as GLenum, width as GLsizei, height as GLsizei, depth as GLsizei, fixedsamplelocations as GLboolean):void

//======== GL_ARB_texture_view ========

glTextureView(texture as GLuint, target as GLenum, origtexture as GLuint, internalformat as GLenum, minlevel as GLuint, numlevels as GLuint, minlayer as GLuint, numlayers as GLuint):void

//======== GL_ARB_timer_query ========

glGetQueryObjecti64v(id as GLuint, pname as GLenum, params:nil as GLint64_p):void

glGetQueryObjectui64v(id as GLuint, pname as GLenum, params:nil as GLuint64_p):void

glQueryCounter(id as GLuint, target as GLenum):void

//======== GL_ARB_transform_feedback2 ========

glBindTransformFeedback(target as GLenum, id as GLuint):void

glDeleteTransformFeedbacks(n as GLsizei, ids:nil as const_GLuint_p):void

glDrawTransformFeedback(mode as GLenum, id as GLuint):void

glGenTransformFeedbacks(n as GLsizei, ids:nil as GLuint_p):void

glIsTransformFeedback(id as GLuint) as GLboolean

glPauseTransformFeedback():void

glResumeTransformFeedback():void

//======== GL_ARB_transform_feedback3 ========

glBeginQueryIndexed(target as GLenum, index as GLuint, id as GLuint):void

glDrawTransformFeedbackStream(mode as GLenum, id as GLuint, stream as GLuint):void

glEndQueryIndexed(target as GLenum, index as GLuint):void

glGetQueryIndexediv(target as GLenum, index as GLuint, pname as GLenum, params:nil as GLint_p):void

//======== GL_ARB_transform_feedback_instanced ========

glDrawTransformFeedbackInstanced(mode as GLenum, id as GLuint, primcount as GLsizei):void

glDrawTransformFeedbackStreamInstanced(mode as GLenum, id as GLuint, stream as GLuint, primcount as GLsizei):void

//======== GL_ARB_transpose_matrix ========

//glLoadTransposeMatrixdARB(m as const_GLdouble_p):void

//glLoadTransposeMatrixfARB(m as const_GLfloat_p):void

//glMultTransposeMatrixdARB(m as const_GLdouble_p):void

//glMultTransposeMatrixfARB(m as const_GLfloat_p):void

//======== GL_ARB_uniform_buffer_object ========

glBindBufferBase(target as GLenum, index as GLuint, buffer as GLuint):void

glBindBufferRange(target as GLenum, index as GLuint, buffer as GLuint, offset as GLintptr, size as GLsizeiptr):void

glGetActiveUniformBlockName(program as GLuint, uniformBlockIndex as GLuint, bufSize as GLsizei, length:nil as GLsizei_p, uniformBlockName:nil as GLchar_p):void

glGetActiveUniformBlockiv(program as GLuint, uniformBlockIndex as GLuint, pname as GLenum, params:nil as GLint_p):void

glGetActiveUniformName(program as GLuint, uniformIndex as GLuint, bufSize as GLsizei, length:nil as GLsizei_p, uniformName:nil as GLchar_p):void

glGetActiveUniformsiv(program as GLuint, uniformCount as GLsizei, uniformIndices:nil as const_GLuint_p, pname as GLenum, params:nil as GLint_p):void

glGetIntegeri_v(target as GLenum, index as GLuint, data:nil as GLint_p):void

glGetUniformBlockIndex(program as GLuint, uniformBlockName as String_const_GLchar_p) as GLuint

//glGetUniformIndices(program as GLuint, uniformCount as GLsizei, uniformNames:nil as const_GLchar_p_const_p, uniformIndices:nil as GLuint_p):void

glUniformBlockBinding(program as GLuint, uniformBlockIndex as GLuint, uniformBlockBinding as GLuint):void

//======== GL_ARB_vertex_array_object ========

glBindVertexArray(array as GLuint):void

glDeleteVertexArrays(n as GLsizei, arrays as const_GLuint_p):void

glGenVertexArrays(n as GLsizei, arrays:nil as GLuint_p):void

glIsVertexArray(array as GLuint) as GLboolean

//======== GL_ARB_vertex_attrib_64bit ========

glGetVertexAttribLdv(index as GLuint, pname as GLenum, params:nil as GLdouble_p):void

glVertexAttribL1d(index as GLuint, x as GLdouble):void

glVertexAttribL1dv(index as GLuint, v:nil as const_GLdouble_p):void

glVertexAttribL2d(index as GLuint, x as GLdouble, y as GLdouble):void

glVertexAttribL2dv(index as GLuint, v:nil as const_GLdouble_p):void

glVertexAttribL3d(index as GLuint, x as GLdouble, y as GLdouble, z as GLdouble):void

glVertexAttribL3dv(index as GLuint, v:nil as const_GLdouble_p):void

glVertexAttribL4d(index as GLuint, x as GLdouble, y as GLdouble, z as GLdouble, w as GLdouble):void

glVertexAttribL4dv(index as GLuint, v:nil as const_GLdouble_p):void

glVertexAttribLPointer(index as GLuint, size as GLint, type as GLenum, stride as GLsizei, pointer:nil as const_void_p):void

//======== GL_ARB_vertex_attrib_binding ========

glBindVertexBuffer(bindingindex as GLuint, buffer as GLuint, offset as GLintptr, stride as GLsizei):void

glVertexArrayBindVertexBufferEXT(vaobj as GLuint, bindingindex as GLuint, buffer as GLuint, offset as GLintptr, stride as GLsizei):void

glVertexArrayVertexAttribBindingEXT(vaobj as GLuint, attribindex as GLuint, bindingindex as GLuint):void

glVertexArrayVertexAttribFormatEXT(vaobj as GLuint, attribindex as GLuint, size as GLint, type as GLenum, normalized as GLboolean, relativeoffset as GLuint):void

glVertexArrayVertexAttribIFormatEXT(vaobj as GLuint, attribindex as GLuint, size as GLint, type as GLenum, relativeoffset as GLuint):void

glVertexArrayVertexAttribLFormatEXT(vaobj as GLuint, attribindex as GLuint, size as GLint, type as GLenum, relativeoffset as GLuint):void

glVertexArrayVertexBindingDivisorEXT(vaobj as GLuint, bindingindex as GLuint, divisor as GLuint):void

glVertexAttribBinding(attribindex as GLuint, bindingindex as GLuint):void

glVertexAttribFormat(attribindex as GLuint, size as GLint, type as GLenum, normalized as GLboolean, relativeoffset as GLuint):void

glVertexAttribIFormat(attribindex as GLuint, size as GLint, type as GLenum, relativeoffset as GLuint):void

glVertexAttribLFormat(attribindex as GLuint, size as GLint, type as GLenum, relativeoffset as GLuint):void

glVertexBindingDivisor(bindingindex as GLuint, divisor as GLuint):void

//======== GL_ARB_vertex_blend ========

glVertexBlendARB(count as GLint):void

glWeightPointerARB(size as GLint, type as GLenum, stride as GLsizei, pointer:nil as void_p):void

glWeightbvARB(size as GLint, weights:nil as GLbyte_p):void

glWeightdvARB(size as GLint, weights:nil as GLdouble_p):void

glWeightfvARB(size as GLint, weights:nil as GLfloat_p):void

glWeightivARB(size as GLint, weights:nil as GLint_p):void

glWeightsvARB(size as GLint, weights:nil as GLshort_p):void

glWeightubvARB(size as GLint, weights:nil as GLubyte_p):void

glWeightuivARB(size as GLint, weights:nil as GLuint_p):void

glWeightusvARB(size as GLint, weights:nil as GLushort_p):void

//======== GL_ARB_vertex_buffer_object ========

glBindBufferARB(target as GLenum, buffer as GLuint):void

//glBufferDataARB(target as GLenum, size as GLsizeiptrARB, data:nil as const_void_p, usage as GLenum):void

//glBufferSubDataARB(target as GLenum, offset as GLintptrARB, size as GLsizeiptrARB, data:nil as const_void_p):void

glDeleteBuffersARB(n as GLsizei, buffers:nil as const_GLuint_p):void

glGenBuffersARB(n as GLsizei, buffers:nil as GLuint_p):void

glGetBufferParameterivARB(target as GLenum, pname as GLenum, params:nil as GLint_p):void

//glGetBufferPointervARB(target as GLenum, pname as GLenum, params as void_p__p):void

//glGetBufferSubDataARB(target as GLenum, offset as GLintptrARB, size as GLsizeiptrARB, data:nil as void_p):void

glIsBufferARB(buffer as GLuint) as GLboolean

//glMapBufferARB(target as GLenum, access as GLenum):void *

glUnmapBufferARB(target as GLenum) as GLboolean

//======== GL_ARB_vertex_program ========

glBindProgramARB(target as GLenum, program as GLuint):void

glDeleteProgramsARB(n as GLsizei, programs:nil as const_GLuint_p):void

glDisableVertexAttribArrayARB(index as GLuint):void

glEnableVertexAttribArrayARB(index as GLuint):void

glGenProgramsARB(n as GLsizei, programs:nil as GLuint_p):void

glGetProgramEnvParameterdvARB(target as GLenum, index as GLuint, params:nil as GLdouble_p):void

glGetProgramEnvParameterfvARB(target as GLenum, index as GLuint, params:nil as GLfloat_p):void

glGetProgramLocalParameterdvARB(target as GLenum, index as GLuint, params:nil as GLdouble_p):void

glGetProgramLocalParameterfvARB(target as GLenum, index as GLuint, params:nil as GLfloat_p):void

glGetProgramStringARB(target as GLenum, pname as GLenum, string:nil as void_p):void

glGetProgramivARB(target as GLenum, pname as GLenum, params:nil as GLint_p):void

//glGetVertexAttribPointervARB(index as GLuint, pname as GLenum, pointer as void_p__p):void

glGetVertexAttribdvARB(index as GLuint, pname as GLenum, params:nil as GLdouble_p):void

glGetVertexAttribfvARB(index as GLuint, pname as GLenum, params:nil as GLfloat_p):void

glGetVertexAttribivARB(index as GLuint, pname as GLenum, params:nil as GLint_p):void

glIsProgramARB(program as GLuint) as GLboolean

glProgramEnvParameter4dARB(target as GLenum, index as GLuint, x as GLdouble, y as GLdouble, z as GLdouble, w as GLdouble):void

glProgramEnvParameter4dvARB(target as GLenum, index as GLuint, params:nil as const_GLdouble_p):void

glProgramEnvParameter4fARB(target as GLenum, index as GLuint, x as GLfloat, y as GLfloat, z as GLfloat, w as GLfloat):void

glProgramEnvParameter4fvARB(target as GLenum, index as GLuint, params:nil as const_GLfloat_p):void

glProgramLocalParameter4dARB(target as GLenum, index as GLuint, x as GLdouble, y as GLdouble, z as GLdouble, w as GLdouble):void

glProgramLocalParameter4dvARB(target as GLenum, index as GLuint, params:nil as const_GLdouble_p):void

glProgramLocalParameter4fARB(target as GLenum, index as GLuint, x as GLfloat, y as GLfloat, z as GLfloat, w as GLfloat):void

glProgramLocalParameter4fvARB(target as GLenum, index as GLuint, params:nil as const_GLfloat_p):void

glProgramStringARB(target as GLenum, format as GLenum, len as GLsizei, string:nil as const_void_p):void

glVertexAttrib1dARB(index as GLuint, x as GLdouble):void

glVertexAttrib1dvARB(index as GLuint, v:nil as const_GLdouble_p):void

glVertexAttrib1fARB(index as GLuint, x as GLfloat):void

glVertexAttrib1fvARB(index as GLuint, v:nil as const_GLfloat_p):void

glVertexAttrib1sARB(index as GLuint, x as GLshort):void

glVertexAttrib1svARB(index as GLuint, v:nil as const_GLshort_p):void

glVertexAttrib2dARB(index as GLuint, x as GLdouble, y as GLdouble):void

glVertexAttrib2dvARB(index as GLuint, v:nil as const_GLdouble_p):void

glVertexAttrib2fARB(index as GLuint, x as GLfloat, y as GLfloat):void

glVertexAttrib2fvARB(index as GLuint, v:nil as const_GLfloat_p):void

glVertexAttrib2sARB(index as GLuint, x as GLshort, y as GLshort):void

glVertexAttrib2svARB(index as GLuint, v:nil as const_GLshort_p):void

glVertexAttrib3dARB(index as GLuint, x as GLdouble, y as GLdouble, z as GLdouble):void

glVertexAttrib3dvARB(index as GLuint, v:nil as const_GLdouble_p):void

glVertexAttrib3fARB(index as GLuint, x as GLfloat, y as GLfloat, z as GLfloat):void

glVertexAttrib3fvARB(index as GLuint, v:nil as const_GLfloat_p):void

glVertexAttrib3sARB(index as GLuint, x as GLshort, y as GLshort, z as GLshort):void

glVertexAttrib3svARB(index as GLuint, v:nil as const_GLshort_p):void

glVertexAttrib4NbvARB(index as GLuint, v:nil as const_GLbyte_p):void

glVertexAttrib4NivARB(index as GLuint, v:nil as const_GLint_p):void

glVertexAttrib4NsvARB(index as GLuint, v:nil as const_GLshort_p):void

glVertexAttrib4NubARB(index as GLuint, x as GLubyte, y as GLubyte, z as GLubyte, w as GLubyte):void

glVertexAttrib4NubvARB(index as GLuint, v:nil as const_GLubyte_p):void

glVertexAttrib4NuivARB(index as GLuint, v:nil as const_GLuint_p):void

glVertexAttrib4NusvARB(index as GLuint, v:nil as const_GLushort_p):void

glVertexAttrib4bvARB(index as GLuint, v:nil as const_GLbyte_p):void

glVertexAttrib4dARB(index as GLuint, x as GLdouble, y as GLdouble, z as GLdouble, w as GLdouble):void

glVertexAttrib4dvARB(index as GLuint, v:nil as const_GLdouble_p):void

glVertexAttrib4fARB(index as GLuint, x as GLfloat, y as GLfloat, z as GLfloat, w as GLfloat):void

glVertexAttrib4fvARB(index as GLuint, v:nil as const_GLfloat_p):void

glVertexAttrib4ivARB(index as GLuint, v:nil as const_GLint_p):void

glVertexAttrib4sARB(index as GLuint, x as GLshort, y as GLshort, z as GLshort, w as GLshort):void

glVertexAttrib4svARB(index as GLuint, v:nil as const_GLshort_p):void

glVertexAttrib4ubvARB(index as GLuint, v:nil as const_GLubyte_p):void

glVertexAttrib4uivARB(index as GLuint, v:nil as const_GLuint_p):void

glVertexAttrib4usvARB(index as GLuint, v:nil as const_GLushort_p):void

glVertexAttribPointerARB(index as GLuint, size as GLint, type as GLenum, normalized as GLboolean, stride as GLsizei, pointer as Number_const_void_p):void

//======== GL_ARB_vertex_shader ========

//glBindAttribLocationARB(programObj as GLhandleARB, index as GLuint, name as String_const_GLcharARB_p):void

//glGetActiveAttribARB(programObj as GLhandleARB, index as GLuint, maxLength as GLsizei, length:nil as GLsizei_p, size:nil as GLint_p, type:nil as GLenum_p, name:nil as GLcharARB_p):void

//glGetAttribLocationARB(programObj as GLhandleARB, name as String_const_GLcharARB_p) as GLint

//======== GL_ARB_vertex_type_2_10_10_10_rev ========

glColorP3ui(type as GLenum, color as GLuint):void

glColorP3uiv(type as GLenum, color:nil as const_GLuint_p):void

glColorP4ui(type as GLenum, color as GLuint):void

glColorP4uiv(type as GLenum, color:nil as const_GLuint_p):void

glMultiTexCoordP1ui(texture as GLenum, type as GLenum, coords as GLuint):void

glMultiTexCoordP1uiv(texture as GLenum, type as GLenum, coords:nil as const_GLuint_p):void

glMultiTexCoordP2ui(texture as GLenum, type as GLenum, coords as GLuint):void

glMultiTexCoordP2uiv(texture as GLenum, type as GLenum, coords:nil as const_GLuint_p):void

glMultiTexCoordP3ui(texture as GLenum, type as GLenum, coords as GLuint):void

glMultiTexCoordP3uiv(texture as GLenum, type as GLenum, coords:nil as const_GLuint_p):void

glMultiTexCoordP4ui(texture as GLenum, type as GLenum, coords as GLuint):void

glMultiTexCoordP4uiv(texture as GLenum, type as GLenum, coords:nil as const_GLuint_p):void

glNormalP3ui(type as GLenum, coords as GLuint):void

glNormalP3uiv(type as GLenum, coords:nil as const_GLuint_p):void

glSecondaryColorP3ui(type as GLenum, color as GLuint):void

glSecondaryColorP3uiv(type as GLenum, color:nil as const_GLuint_p):void

glTexCoordP1ui(type as GLenum, coords as GLuint):void

glTexCoordP1uiv(type as GLenum, coords:nil as const_GLuint_p):void

glTexCoordP2ui(type as GLenum, coords as GLuint):void

glTexCoordP2uiv(type as GLenum, coords:nil as const_GLuint_p):void

glTexCoordP3ui(type as GLenum, coords as GLuint):void

glTexCoordP3uiv(type as GLenum, coords:nil as const_GLuint_p):void

glTexCoordP4ui(type as GLenum, coords as GLuint):void

glTexCoordP4uiv(type as GLenum, coords:nil as const_GLuint_p):void

glVertexAttribP1ui(index as GLuint, type as GLenum, normalized as GLboolean, value as GLuint):void

glVertexAttribP1uiv(index as GLuint, type as GLenum, normalized as GLboolean, value:nil as const_GLuint_p):void

glVertexAttribP2ui(index as GLuint, type as GLenum, normalized as GLboolean, value as GLuint):void

glVertexAttribP2uiv(index as GLuint, type as GLenum, normalized as GLboolean, value:nil as const_GLuint_p):void

glVertexAttribP3ui(index as GLuint, type as GLenum, normalized as GLboolean, value as GLuint):void

glVertexAttribP3uiv(index as GLuint, type as GLenum, normalized as GLboolean, value:nil as const_GLuint_p):void

glVertexAttribP4ui(index as GLuint, type as GLenum, normalized as GLboolean, value as GLuint):void

glVertexAttribP4uiv(index as GLuint, type as GLenum, normalized as GLboolean, value:nil as const_GLuint_p):void

glVertexP2ui(type as GLenum, value as GLuint):void

glVertexP2uiv(type as GLenum, value:nil as const_GLuint_p):void

glVertexP3ui(type as GLenum, value as GLuint):void

glVertexP3uiv(type as GLenum, value:nil as const_GLuint_p):void

glVertexP4ui(type as GLenum, value as GLuint):void

glVertexP4uiv(type as GLenum, value:nil as const_GLuint_p):void

//======== GL_ARB_viewport_array ========

glDepthRangeArrayv(first as GLuint, count as GLsizei, v:nil as const_GLclampd_p):void

glDepthRangeIndexed(index as GLuint, n as GLclampd, f as GLclampd):void

glGetDoublei_v(target as GLenum, index as GLuint, data:nil as GLdouble_p):void

glGetFloati_v(target as GLenum, index as GLuint, data:nil as GLfloat_p):void

glScissorArrayv(first as GLuint, count as GLsizei, v:nil as const_GLint_p):void

glScissorIndexed(index as GLuint, left as GLint, bottom as GLint, width as GLsizei, height as GLsizei):void

glScissorIndexedv(index as GLuint, v:nil as const_GLint_p):void

glViewportArrayv(first as GLuint, count as GLsizei, v:nil as const_GLfloat_p):void

glViewportIndexedf(index as GLuint, x as GLfloat, y as GLfloat, w as GLfloat, h as GLfloat):void

glViewportIndexedfv(index as GLuint, v:nil as const_GLfloat_p):void

//======== GL_ARB_window_pos ========

glWindowPos2dARB(x as GLdouble, y as GLdouble):void

glWindowPos2dvARB(p:nil as const_GLdouble_p):void

glWindowPos2fARB(x as GLfloat, y as GLfloat):void

glWindowPos2fvARB(p:nil as const_GLfloat_p):void

glWindowPos2iARB(x as GLint, y as GLint):void

glWindowPos2ivARB(p:nil as const_GLint_p):void

glWindowPos2sARB(x as GLshort, y as GLshort):void

glWindowPos2svARB(p:nil as const_GLshort_p):void

glWindowPos3dARB(x as GLdouble, y as GLdouble, z as GLdouble):void

glWindowPos3dvARB(p:nil as const_GLdouble_p):void

glWindowPos3fARB(x as GLfloat, y as GLfloat, z as GLfloat):void

glWindowPos3fvARB(p:nil as const_GLfloat_p):void

glWindowPos3iARB(x as GLint, y as GLint, z as GLint):void

glWindowPos3ivARB(p:nil as const_GLint_p):void

glWindowPos3sARB(x as GLshort, y as GLshort, z as GLshort):void

glWindowPos3svARB(p:nil as const_GLshort_p):void

}

tR'''
//==============================================================================
// Functions.cpp
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(opengl)

${r.ComposeFunctionImplementation()}

void AssignFunctions(Frame& frame)
{
	${r.ComposeFunctionAssignment('frame.')}
}

Gurax_EndModuleScope(opengl)
'''.Render(Open('Functions.cpp', 'w').Write(Codec.bom@utf8))
