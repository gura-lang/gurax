#!/usr/bin/env gurax
import(cbridge)

r = cbridge.Renderer()

//------------------------------------------------------------------------------
// Type Information
//------------------------------------------------------------------------------
r.DeclareType_Number('GLenum')
r.DeclareType_Number('GLbitfield')
r.DeclareType_Number('GLuint')
r.DeclareType_Number('GLint')
r.DeclareType_Number('GLsizei')
r.DeclareType_Number('GLbyte')
r.DeclareType_Number('GLshort')
r.DeclareType_Number('GLubyte')
r.DeclareType_Number('GLushort')
r.DeclareType_Number('GLulong')
r.DeclareType_Number('GLfloat')
r.DeclareType_Number('GLclampf')
r.DeclareType_Number('GLdouble')
r.DeclareType_Number('GLclampd')
r.DeclareType_Number('GLint64')
r.DeclareType_Number('GLuint64')
r.DeclareType_Number('GLsync')
r.DeclareType_Number('GLchar')
r.DeclareType_Number('GLintptr')
r.DeclareType_Number('GLsizeiptr')
r.DeclareType_Number('GLint64EXT')
r.DeclareType_Number('GLuint64EXT')
//r.DeclareType(GLvoid)
r.DeclareType('GLboolean', 'GLboolean', 'Bool',
	codePicker = R'''
	${this.cType} ${varName} = static_cast<GLboolean>(args_gurax.PickBool());
	'''
	codePickerValidation = R'''
	${this.cType} ${varName} = args_gurax.IsValid()? static_cast<GLboolean>(args_gurax.PickBool()) : GL_FALSE;
	'''
	codePickerVec = R'''
	auto ${varName} = args_gurax.PickListT<GLboolean>([](Gurax::Value& value) {
		return value.GetBool()? GL_TRUE : GL_FALSE;
	});
	'''
	codeFunctionBody = R'''
	${this.cType} rtn = ${caller};
	return new Gurax::Value_Bool(!!rtn);
	''')

r.DeclareType('String_const_GLchar_p', 'const GLchar*', 'String',
	codePicker = R'''
	${this.cType} ${varName} = reinterpret_cast<${this.cType}>(args_gurax.PickString());
	'''
	codePickerValidation = R'''
	${this.cType} ${varName} = args_gurax.IsValid()? reinterpret_cast<${this.cType}>(args_gurax.PickString()) : nullptr;
	'''
	codePickerVec = R'''
	auto ${varName} = args_gurax.PickListT<${this.cType}>([](Gurax::Value& value) {
		return reinterpret_cast<${this.cType}>(Gurax::Value_String::GetString(value));
	});
	'''
	codeFunctionBody = R'''
	${this.cType} rtn = ${caller};
	return new Gurax::Value_String(reinterpret_cast<const char*>(rtn));
	''')

r.DeclareType('Return_void_p', 'void*', 'Pointer',
	codeFunctionBody = R'''
	${this.cType} rtn = ${caller};
	return new Gurax::Value_Pointer(new Pointer_Memory(new MemorySloth(rtn)));
	''')

r.DeclareType('String_const_GLubyte_p', 'const GLubyte*', 'String',
	codePicker = R'''
	${this.cType} ${varName} = reinterpret_cast<${this.cType}>(args_gurax.PickString());
	'''
	codePickerValidation = R'''
	${this.cType} ${varName} = args_gurax.IsValid()? reinterpret_cast<${this.cType}>(args_gurax.PickString()) : nullptr;
	'''
	codePickerVec = R'''
	auto ${varName} = args_gurax.PickListT<${this.cType}>([](Gurax::Value& value) {
		return reinterpret_cast<${this.cType}>(Gurax::Value_String::GetString(value));
	});
	'''
	codeFunctionBody = R'''
	${this.cType} rtn = ${caller};
	return new Gurax::Value_String(reinterpret_cast<const char*>(rtn));
	''')

r.DeclareType_Pointer('const_GLboolean_p', 'const GLboolean*')
r.DeclareType_Pointer('const_GLenum_p', 'const GLenum*')
r.DeclareType_Pointer('const_GLbitfield_p', 'const GLbitfield*')
r.DeclareType_Pointer('const_GLuint_p', 'const GLuint*')
r.DeclareType_Pointer('const_GLint_p', 'const GLint*')
r.DeclareType_Pointer('const_GLsizei_p', 'const GLsizei*')
r.DeclareType_Pointer('const_GLbyte_p', 'const GLbyte*')
r.DeclareType_Pointer('const_GLshort_p', 'const GLshort*')
r.DeclareType_Pointer('const_GLubyte_p', 'const GLubyte*')
r.DeclareType_Pointer('const_GLushort_p', 'const GLushort*')
r.DeclareType_Pointer('const_GLulong_p', 'const GLulong*')
r.DeclareType_Pointer('const_GLfloat_p', 'const GLfloat*')
r.DeclareType_Pointer('const_GLclampf_p', 'const GLclampf*')
r.DeclareType_Pointer('const_GLdouble_p', 'const GLdouble*')
r.DeclareType_Pointer('const_GLclampd_p', 'const GLclampd*')
r.DeclareType_Pointer('const_GLint64_p', 'const GLint64*')
r.DeclareType_Pointer('const_GLuint64_p', 'const GLuint64*')
r.DeclareType_Pointer('const_GLsync_p', 'const GLsync*')
r.DeclareType_Pointer('const_GLchar_p', 'const GLchar*')
r.DeclareType_Pointer('const_GLintptr_p', 'const GLintptr*')
r.DeclareType_Pointer('const_GLsizeiptr_p', 'const GLsizeiptr*')
r.DeclareType_Pointer('const_GLvoid_p', 'const GLvoid*')
r.DeclareType_Pointer('const_GLint64EXT_p', 'const GLint64EXT*')
r.DeclareType_Pointer('const_GLuint64EXT_p', 'const GLuint64EXT*')

r.DeclareType_WritablePointer('GLboolean_p', 'GLboolean*')
r.DeclareType_WritablePointer('GLenum_p', 'GLenum*')
r.DeclareType_WritablePointer('GLbitfield_p', 'GLbitfield*')
r.DeclareType_WritablePointer('GLuint_p', 'GLuint*')
r.DeclareType_WritablePointer('GLint_p', 'GLint*')
r.DeclareType_WritablePointer('GLsizei_p', 'GLsizei*')
r.DeclareType_WritablePointer('GLbyte_p', 'GLbyte*')
r.DeclareType_WritablePointer('GLshort_p', 'GLshort*')
r.DeclareType_WritablePointer('GLubyte_p', 'GLubyte*')
r.DeclareType_WritablePointer('GLushort_p', 'GLushort*')
r.DeclareType_WritablePointer('GLulong_p', 'GLulong*')
r.DeclareType_WritablePointer('GLfloat_p', 'GLfloat*')
r.DeclareType_WritablePointer('GLclampf_p', 'GLclampf*')
r.DeclareType_WritablePointer('GLdouble_p', 'GLdouble*')
r.DeclareType_WritablePointer('GLclampd_p', 'GLclampd*')
r.DeclareType_WritablePointer('GLint64_p', 'GLint64*')
r.DeclareType_WritablePointer('GLuint64_p', 'GLuint64*')
r.DeclareType_WritablePointer('GLsync_p', 'GLsync*')
r.DeclareType_WritablePointer('GLchar_p', 'GLchar*')
r.DeclareType_WritablePointer('GLintptr_p', 'GLintptr*')
r.DeclareType_WritablePointer('GLsizeiptr_p', 'GLsizeiptr*')
r.DeclareType_WritablePointer('GLvoid_p', 'GLvoid*')
r.DeclareType_Pointer('GLint64EXT_p', 'GLint64EXT*')
r.DeclareType_Pointer('GLuint64EXT_p', 'GLuint64EXT*')

//------------------------------------------------------------------------------
// Function Registration: Context
//------------------------------------------------------------------------------
r.Register('opengl') {

//======== GLEW ========
glewInit():GLenum

glewIsSupported(name:const_char_p):GLboolean

glewGetExtension(name:const_char_p):GLboolean

glewGetErrorString(error:GLenum):String_const_GLubyte_p

glewGetString(name:GLenum):String_const_GLubyte_p

//======== GL_VERSION_1_1 ========
glAccum(op:GLenum, value:GLfloat)

glAlphaFunc(func:GLenum, ref:GLclampf):void

glAreTexturesResident(n:GLsizei, textures[]:GLuint, residences:GLboolean_p:nil):GLboolean

glArrayElement(i:GLint):void

glBegin(mode:GLenum):void

glBindTexture(target:GLenum, texture:GLuint):void

glBitmap(width:GLsizei, height:GLsizei, xorig:GLfloat, yorig:GLfloat, xmove:GLfloat, ymove:GLfloat, bitmap:const_GLubyte_p:nil):void

glBlendFunc(sfactor:GLenum, dfactor:GLenum):void

glCallList(list:GLuint):void

glCallLists(n:GLsizei, type:GLenum, lists:const_void_p):void

glClear(mask:GLbitfield):void

glClearAccum(red:GLfloat, green:GLfloat, blue:GLfloat, alpha:GLfloat):void

glClearColor(red:GLclampf, green:GLclampf, blue:GLclampf, alpha:GLclampf):void

glClearDepth(depth:GLclampd):void

glClearIndex(c:GLfloat):void

glClearStencil(s:GLint):void

glClipPlane(plane:GLenum, equation[4]:GLdouble):void

glColor3b(red:GLbyte, green:GLbyte, blue:GLbyte):void

glColor3bv(v[3]:GLbyte):void

glColor3d(red:GLdouble, green:GLdouble, blue:GLdouble):void

glColor3dv(v[3]:GLdouble):void

glColor3f(red:GLfloat, green:GLfloat, blue:GLfloat):void

glColor3fv(v[3]:GLfloat):void

glColor3i(red:GLint, green:GLint, blue:GLint):void

glColor3iv(v[3]:GLint):void

glColor3s(red:GLshort, green:GLshort, blue:GLshort):void

glColor3sv(v[3]:GLshort):void

glColor3ub(red:GLubyte, green:GLubyte, blue:GLubyte):void

glColor3ubv(v[3]:GLubyte):void

glColor3ui(red:GLuint, green:GLuint, blue:GLuint):void

glColor3uiv(v[3]:GLuint):void

glColor3us(red:GLushort, green:GLushort, blue:GLushort):void

glColor3usv(v[3]:GLushort):void

glColor4b(red:GLbyte, green:GLbyte, blue:GLbyte, alpha:GLbyte):void

glColor4bv(v[4]:GLbyte):void

glColor4d(red:GLdouble, green:GLdouble, blue:GLdouble, alpha:GLdouble):void

glColor4dv(v[4]:GLdouble):void

glColor4f(red:GLfloat, green:GLfloat, blue:GLfloat, alpha:GLfloat):void

glColor4fv(v[4]:GLfloat):void

glColor4i(red:GLint, green:GLint, blue:GLint, alpha:GLint):void

glColor4iv(v[4]:GLint):void

glColor4s(red:GLshort, green:GLshort, blue:GLshort, alpha:GLshort):void

glColor4sv(v[4]:GLshort):void

glColor4ub(red:GLubyte, green:GLubyte, blue:GLubyte, alpha:GLubyte):void

glColor4ubv(v[4]:GLubyte):void

glColor4ui(red:GLuint, green:GLuint, blue:GLuint, alpha:GLuint):void

glColor4uiv(v[4]:GLuint):void

glColor4us(red:GLushort, green:GLushort, blue:GLushort, alpha:GLushort):void

glColor4usv(v[4]:GLushort):void

glColorMask(red:GLboolean, green:GLboolean, blue:GLboolean, alpha:GLboolean):void

glColorMaterial(face:GLenum, mode:GLenum):void

glColorPointer(size:GLint, type:GLenum, stride:GLsizei, pointer:const_void_p):void

glCopyPixels(x:GLint, y:GLint, width:GLsizei, height:GLsizei, type:GLenum):void

glCopyTexImage1D(target:GLenum, level:GLint, internalFormat:GLenum, x:GLint, y:GLint, width:GLsizei, border:GLint):void

glCopyTexImage2D(target:GLenum, level:GLint, internalFormat:GLenum, x:GLint, y:GLint, width:GLsizei, height:GLsizei, border:GLint):void

glCopyTexSubImage1D(target:GLenum, level:GLint, xoffset:GLint, x:GLint, y:GLint, width:GLsizei):void

glCopyTexSubImage2D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei):void

glCullFace(mode:GLenum):void

glDeleteLists(list:GLuint, range:GLsizei):void

glDeleteTextures(textures[]:GLuint):void = \
	R'''
	glDeleteTextures(textures.sizeT<GLsizei>(), textures);
	return Value::nil();
	'''

glDepthFunc(func:GLenum):void

glDepthMask(flag:GLboolean):void

glDepthRange(zNear:GLclampd, zFar:GLclampd):void

glDisable(cap:GLenum):void

glDisableClientState(array:GLenum):void

glDrawArrays(mode:GLenum, first:GLint, count:GLsizei):void

glDrawBuffer(mode:GLenum):void

glDrawElements(mode:GLenum, count:GLsizei, type:GLenum, indices:const_void_p):void

glDrawPixels(width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:const_void_p):void

glEdgeFlag(flag:GLboolean):void

glEdgeFlagPointer(stride:GLsizei, pointer:const_void_p):void

glEdgeFlagv(flag[]:GLboolean):void

glEnable(cap:GLenum):void

glEnableClientState(array:GLenum):void

glEnd():void

glEndList():void

glEvalCoord1d(u:GLdouble):void

glEvalCoord1dv(u[1]:GLdouble):void

glEvalCoord1f(u:GLfloat):void

glEvalCoord1fv(u[1]:GLfloat):void

glEvalCoord2d(u:GLdouble, v:GLdouble):void

glEvalCoord2dv(u[2]:GLdouble):void

glEvalCoord2f(u:GLfloat, v:GLfloat):void

glEvalCoord2fv(u[2]:GLfloat):void

glEvalMesh1(mode:GLenum, i1:GLint, i2:GLint):void

glEvalMesh2(mode:GLenum, i1:GLint, i2:GLint, j1:GLint, j2:GLint):void

glEvalPoint1(i:GLint):void

glEvalPoint2(i:GLint, j:GLint):void

glFeedbackBuffer(size:GLsizei, type:GLenum, buffer:GLfloat_p:nil):void

glFinish():void

glFlush():void

glFogf(pname:GLenum, param:GLfloat):void

glFogfv(pname:GLenum, params[]:GLfloat):void

glFogi(pname:GLenum, param:GLint):void

glFogiv(pname:GLenum, params[]:GLint):void

glFrontFace(mode:GLenum):void

glFrustum(left:GLdouble, right:GLdouble, bottom:GLdouble, top:GLdouble, zNear:GLdouble, zFar:GLdouble):void

glGenLists(range:GLsizei):GLuint

glGenTextures(n:GLsizei, textures:GLuint_p:nil);

glGetBooleanv(pname:GLenum, params:GLboolean_p:nil):void

glGetClipPlane(plane:GLenum, equation:GLdouble_p:nil):void

glGetDoublev(pname:GLenum, params:GLdouble_p:nil):void

glGetError():GLenum

glGetFloatv(pname:GLenum, params:GLfloat_p:nil):void

glGetIntegerv(pname:GLenum, params:GLint_p:nil):void

glGetLightfv(light:GLenum, pname:GLenum, params:GLfloat_p:nil):void

glGetLightiv(light:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetMapdv(target:GLenum, query:GLenum, v:GLdouble_p:nil):void

glGetMapfv(target:GLenum, query:GLenum, v:GLfloat_p:nil):void

glGetMapiv(target:GLenum, query:GLenum, v:GLint_p:nil):void

glGetMaterialfv(face:GLenum, pname:GLenum, params:GLfloat_p:nil):void

glGetMaterialiv(face:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetPixelMapfv(map:GLenum, values:GLfloat_p:nil):void

glGetPixelMapuiv(map:GLenum, values:GLuint_p:nil):void

glGetPixelMapusv(map:GLenum, values:GLushort_p:nil):void

//glGetPointerv(pname:GLenum, params[]:void_p):void

glGetPolygonStipple(mask:GLubyte_p:nil):void

glGetString(name:GLenum):String_const_GLubyte_p

glGetTexEnvfv(target:GLenum, pname:GLenum, params:GLfloat_p:nil):void

glGetTexEnviv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetTexGendv(coord:GLenum, pname:GLenum, params:GLdouble_p:nil):void

glGetTexGenfv(coord:GLenum, pname:GLenum, params:GLfloat_p:nil):void

glGetTexGeniv(coord:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetTexImage(target:GLenum, level:GLint, format:GLenum, type:GLenum, pixels:void_p):void

glGetTexLevelParameterfv(target:GLenum, level:GLint, pname:GLenum, params:GLfloat_p:nil):void

glGetTexLevelParameteriv(target:GLenum, level:GLint, pname:GLenum, params:GLint_p:nil):void

glGetTexParameterfv(target:GLenum, pname:GLenum, params:GLfloat_p:nil):void

glGetTexParameteriv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glHint(target:GLenum, mode:GLenum):void

glIndexMask(mask:GLuint):void

glIndexPointer(type:GLenum, stride:GLsizei, pointer:const_void_p):void

glIndexd(c:GLdouble):void

glIndexdv(c[]:GLdouble):void

glIndexf(c:GLfloat):void

glIndexfv(c[]:GLfloat):void

glIndexi(c:GLint):void

glIndexiv(c[]:GLint):void

glIndexs(c:GLshort):void

glIndexsv(c[]:GLshort):void

glIndexub(c:GLubyte):void

glIndexubv(c[]:GLubyte):void

glInitNames():void

glInterleavedArrays(format:GLenum, stride:GLsizei, pointer:const_void_p):void

glIsEnabled(cap:GLenum):GLboolean

glIsList(list:GLuint):GLboolean

glIsTexture(texture:GLuint):GLboolean

glLightModelf(pname:GLenum, param:GLfloat):void

glLightModelfv(pname:GLenum, params[]:GLfloat):void

glLightModeli(pname:GLenum, param:GLint):void

glLightModeliv(pname:GLenum, params[]:GLint):void

glLightf(light:GLenum, pname:GLenum, param:GLfloat):void

glLightfv(light:GLenum, pname:GLenum, params[]:GLfloat):void

glLighti(light:GLenum, pname:GLenum, param:GLint):void

glLightiv(light:GLenum, pname:GLenum, params[]:GLint):void

glLineStipple(factor:GLint, pattern:GLushort):void

glLineWidth(width:GLfloat):void

glListBase(base:GLuint):void

glLoadIdentity():void

glLoadMatrixd(m[]:GLdouble):void

glLoadMatrixf(m[]:GLfloat):void

glLoadName(name:GLuint):void

glLogicOp(opcode:GLenum):void

glMap1d(target:GLenum, u1:GLdouble, u2:GLdouble, stride:GLint, order:GLint, points[]:GLdouble):void

glMap1f(target:GLenum, u1:GLfloat, u2:GLfloat, stride:GLint, order:GLint, points[]:GLfloat):void

glMap2d(target:GLenum, u1:GLdouble, u2:GLdouble, ustride:GLint, uorder:GLint, v1:GLdouble, v2:GLdouble, vstride:GLint, vorder:GLint, points[]:GLdouble):void

glMap2f(target:GLenum, u1:GLfloat, u2:GLfloat, ustride:GLint, uorder:GLint, v1:GLfloat, v2:GLfloat, vstride:GLint, vorder:GLint, points[]:GLfloat):void

glMapGrid1d(un:GLint, u1:GLdouble, u2:GLdouble):void

glMapGrid1f(un:GLint, u1:GLfloat, u2:GLfloat):void

glMapGrid2d(un:GLint, u1:GLdouble, u2:GLdouble, vn:GLint, v1:GLdouble, v2:GLdouble):void

glMapGrid2f(un:GLint, u1:GLfloat, u2:GLfloat, vn:GLint, v1:GLfloat, v2:GLfloat):void

glMaterialf(face:GLenum, pname:GLenum, param:GLfloat):void

glMaterialfv(face:GLenum, pname:GLenum, params[]:GLfloat):void

glMateriali(face:GLenum, pname:GLenum, param:GLint):void

glMaterialiv(face:GLenum, pname:GLenum, params[]:GLint):void

glMatrixMode(mode:GLenum):void

glMultMatrixd(m[]:GLdouble):void

glMultMatrixf(m[]:GLfloat):void

glNewList(list:GLuint, mode:GLenum):void

glNormal3b(nx:GLbyte, ny:GLbyte, nz:GLbyte):void

glNormal3bv(v[]:GLbyte):void

glNormal3d(nx:GLdouble, ny:GLdouble, nz:GLdouble):void

glNormal3dv(v[]:GLdouble):void

glNormal3f(nx:GLfloat, ny:GLfloat, nz:GLfloat):void

glNormal3fv(v[]:GLfloat):void

glNormal3i(nx:GLint, ny:GLint, nz:GLint):void

glNormal3iv(v[]:GLint):void

glNormal3s(nx:GLshort, ny:GLshort, nz:GLshort):void

glNormal3sv(v[]:GLshort):void

glNormalPointer(type:GLenum, stride:GLsizei, pointer:const_void_p):void

glOrtho(left:GLdouble, right:GLdouble, bottom:GLdouble, top:GLdouble, zNear:GLdouble, zFar:GLdouble):void

glPassThrough(token:GLfloat):void

glPixelMapfv(map:GLenum, mapsize:GLsizei, values[]:GLfloat):void

glPixelMapuiv(map:GLenum, mapsize:GLsizei, values[]:GLuint):void

glPixelMapusv(map:GLenum, mapsize:GLsizei, values[]:GLushort):void

glPixelStoref(pname:GLenum, param:GLfloat):void

glPixelStorei(pname:GLenum, param:GLint):void

glPixelTransferf(pname:GLenum, param:GLfloat):void

glPixelTransferi(pname:GLenum, param:GLint):void

glPixelZoom(xfactor:GLfloat, yfactor:GLfloat):void

glPointSize(size:GLfloat):void

glPolygonMode(face:GLenum, mode:GLenum):void

glPolygonOffset(factor:GLfloat, units:GLfloat):void

glPolygonStipple(mask[]:GLubyte):void

glPopAttrib():void

glPopClientAttrib():void

glPopMatrix():void

glPopName():void

glPrioritizeTextures(n:GLsizei, textures[]:GLuint, priorities[]:GLclampf):void

glPushAttrib(mask:GLbitfield):void

glPushClientAttrib(mask:GLbitfield):void

glPushMatrix():void

glPushName(name:GLuint):void

glRasterPos2d(x:GLdouble, y:GLdouble):void

glRasterPos2dv(v[]:GLdouble):void

glRasterPos2f(x:GLfloat, y:GLfloat):void

glRasterPos2fv(v[]:GLfloat):void

glRasterPos2i(x:GLint, y:GLint):void

glRasterPos2iv(v[]:GLint):void

glRasterPos2s(x:GLshort, y:GLshort):void

glRasterPos2sv(v[]:GLshort):void

glRasterPos3d(x:GLdouble, y:GLdouble, z:GLdouble):void

glRasterPos3dv(v[]:GLdouble):void

glRasterPos3f(x:GLfloat, y:GLfloat, z:GLfloat):void

glRasterPos3fv(v[]:GLfloat):void

glRasterPos3i(x:GLint, y:GLint, z:GLint):void

glRasterPos3iv(v[]:GLint):void

glRasterPos3s(x:GLshort, y:GLshort, z:GLshort):void

glRasterPos3sv(v[]:GLshort):void

glRasterPos4d(x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble):void

glRasterPos4dv(v[]:GLdouble):void

glRasterPos4f(x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat):void

glRasterPos4fv(v[]:GLfloat):void

glRasterPos4i(x:GLint, y:GLint, z:GLint, w:GLint):void

glRasterPos4iv(v[]:GLint):void

glRasterPos4s(x:GLshort, y:GLshort, z:GLshort, w:GLshort):void

glRasterPos4sv(v[]:GLshort):void

glReadBuffer(mode:GLenum):void

glReadPixels(x:GLint, y:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:void_p):void

glRectd(x1:GLdouble, y1:GLdouble, x2:GLdouble, y2:GLdouble):void

glRectdv(v1[]:GLdouble, v2[]:GLdouble):void

glRectf(x1:GLfloat, y1:GLfloat, x2:GLfloat, y2:GLfloat):void

glRectfv(v1[]:GLfloat, v2[]:GLfloat):void

glRecti(x1:GLint, y1:GLint, x2:GLint, y2:GLint):void

glRectiv(v1[]:GLint, v2[]:GLint):void

glRects(x1:GLshort, y1:GLshort, x2:GLshort, y2:GLshort):void

glRectsv(v1[]:GLshort, v2[]:GLshort):void

glRenderMode(mode:GLenum):GLint

glRotated(angle:GLdouble, x:GLdouble, y:GLdouble, z:GLdouble):void

glRotatef(angle:GLfloat, x:GLfloat, y:GLfloat, z:GLfloat):void

glScaled(x:GLdouble, y:GLdouble, z:GLdouble):void

glScalef(x:GLfloat, y:GLfloat, z:GLfloat):void

glScissor(x:GLint, y:GLint, width:GLsizei, height:GLsizei):void

glSelectBuffer(size:GLsizei, buffer:GLuint_p:nil):void

glShadeModel(mode:GLenum):void

glStencilFunc(func:GLenum, ref:GLint, mask:GLuint):void

glStencilMask(mask:GLuint):void

glStencilOp(fail:GLenum, zfail:GLenum, zpass:GLenum):void

glTexCoord1d(s:GLdouble):void

glTexCoord1dv(v[]:GLdouble):void

glTexCoord1f(s:GLfloat):void

glTexCoord1fv(v[]:GLfloat):void

glTexCoord1i(s:GLint):void

glTexCoord1iv(v[]:GLint):void

glTexCoord1s(s:GLshort):void

glTexCoord1sv(v[]:GLshort):void

glTexCoord2d(s:GLdouble, t:GLdouble):void

glTexCoord2dv(v[]:GLdouble):void

glTexCoord2f(s:GLfloat, t:GLfloat):void

glTexCoord2fv(v[]:GLfloat):void

glTexCoord2i(s:GLint, t:GLint):void

glTexCoord2iv(v[]:GLint):void

glTexCoord2s(s:GLshort, t:GLshort):void

glTexCoord2sv(v[]:GLshort):void

glTexCoord3d(s:GLdouble, t:GLdouble, r:GLdouble):void

glTexCoord3dv(v[]:GLdouble):void

glTexCoord3f(s:GLfloat, t:GLfloat, r:GLfloat):void

glTexCoord3fv(v[]:GLfloat):void

glTexCoord3i(s:GLint, t:GLint, r:GLint):void

glTexCoord3iv(v[]:GLint):void

glTexCoord3s(s:GLshort, t:GLshort, r:GLshort):void

glTexCoord3sv(v[]:GLshort):void

glTexCoord4d(s:GLdouble, t:GLdouble, r:GLdouble, q:GLdouble):void

glTexCoord4dv(v[]:GLdouble):void

glTexCoord4f(s:GLfloat, t:GLfloat, r:GLfloat, q:GLfloat):void

glTexCoord4fv(v[]:GLfloat):void

glTexCoord4i(s:GLint, t:GLint, r:GLint, q:GLint):void

glTexCoord4iv(v[]:GLint):void

glTexCoord4s(s:GLshort, t:GLshort, r:GLshort, q:GLshort):void

glTexCoord4sv(v[]:GLshort):void

glTexCoordPointer(size:GLint, type:GLenum, stride:GLsizei, pointer:const_void_p):void

glTexEnvf(target:GLenum, pname:GLenum, param:GLfloat):void

glTexEnvfv(target:GLenum, pname:GLenum, params[]:GLfloat):void

glTexEnvi(target:GLenum, pname:GLenum, param:GLint):void

glTexEnviv(target:GLenum, pname:GLenum, params[]:GLint):void

glTexGend(coord:GLenum, pname:GLenum, param:GLdouble):void

glTexGendv(coord:GLenum, pname:GLenum, params[]:GLdouble):void

glTexGenf(coord:GLenum, pname:GLenum, param:GLfloat):void

glTexGenfv(coord:GLenum, pname:GLenum, params[]:GLfloat):void

glTexGeni(coord:GLenum, pname:GLenum, param:GLint):void

glTexGeniv(coord:GLenum, pname:GLenum, params[]:GLint):void

glTexImage1D(target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:void_p):void

glTexImage2D(target:GLenum, level:GLint, internalformat:GLint, width:GLsizei, height:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:void_p):void

glTexParameterf(target:GLenum, pname:GLenum, param:GLfloat):void

glTexParameterfv(target:GLenum, pname:GLenum, params[]:GLfloat):void

glTexParameteri(target:GLenum, pname:GLenum, param:GLint):void

glTexParameteriv(target:GLenum, pname:GLenum, params[]:GLint):void

glTexSubImage1D(target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, type:GLenum, pixels:void_p):void

glTexSubImage2D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:void_p):void

glTranslated(x:GLdouble, y:GLdouble, z:GLdouble):void

glTranslatef(x:GLfloat, y:GLfloat, z:GLfloat):void

glVertex2d(x:GLdouble, y:GLdouble):void

glVertex2dv(v[2]:GLdouble):void

glVertex2f(x:GLfloat, y:GLfloat):void

glVertex2fv(v[2]:GLfloat):void

glVertex2i(x:GLint, y:GLint):void

glVertex2iv(v[2]:GLint):void

glVertex2s(x:GLshort, y:GLshort):void

glVertex2sv(v[2]:GLshort):void

glVertex3d(x:GLdouble, y:GLdouble, z:GLdouble):void

glVertex3dv(v[3]:GLdouble):void

glVertex3f(x:GLfloat, y:GLfloat, z:GLfloat):void

glVertex3fv(v[3]:GLfloat):void

glVertex3i(x:GLint, y:GLint, z:GLint):void

glVertex3iv(v[3]:GLint):void

glVertex3s(x:GLshort, y:GLshort, z:GLshort):void

glVertex3sv(v[3]:GLshort):void

glVertex4d(x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble):void

glVertex4dv(v[4]:GLdouble):void

glVertex4f(x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat):void

glVertex4fv(v[4]:GLfloat):void

glVertex4i(x:GLint, y:GLint, z:GLint, w:GLint):void

glVertex4iv(v[4]:GLint):void

glVertex4s(x:GLshort, y:GLshort, z:GLshort, w:GLshort):void

glVertex4sv(v[4]:GLshort):void

glVertexPointer(size:GLint, type:GLenum, stride:GLsizei, pointer:const_void_p):void

glViewport(x:GLint, y:GLint, width:GLsizei, height:GLsizei):void

//======== GL_VERSION_1_2 ========

glCopyTexSubImage3D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei):void

glDrawRangeElements(mode:GLenum, start:GLuint, end:GLuint, count:GLsizei, type:GLenum, indices:const_void_p):void

glTexImage3D(target:GLenum, level:GLint, internalFormat:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, format:GLenum, type:GLenum, pixels:const_void_p):void

glTexSubImage3D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, pixels:const_void_p):void

//======== GL_VERSION_1_3 ========

glActiveTexture(texture:GLenum):void

glClientActiveTexture(texture:GLenum):void

glCompressedTexImage1D(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, border:GLint, imageSize:GLsizei, data:const_void_p):void

glCompressedTexImage2D(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, border:GLint, imageSize:GLsizei, data:const_void_p):void

glCompressedTexImage3D(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, imageSize:GLsizei, data:const_void_p):void

glCompressedTexSubImage1D(target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, imageSize:GLsizei, data:const_void_p):void

glCompressedTexSubImage2D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, imageSize:GLsizei, data:const_void_p):void

glCompressedTexSubImage3D(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, imageSize:GLsizei, data:const_void_p):void

glGetCompressedTexImage(target:GLenum, lod:GLint, img:void_p):void

glLoadTransposeMatrixd(m[16]:GLdouble):void

glLoadTransposeMatrixf(m[16]:GLfloat):void

glMultTransposeMatrixd(m[16]:GLdouble):void

glMultTransposeMatrixf(m[16]:GLfloat):void

glMultiTexCoord1d(target:GLenum, s:GLdouble):void

glMultiTexCoord1dv(target:GLenum, v[]:GLdouble):void

glMultiTexCoord1f(target:GLenum, s:GLfloat):void

glMultiTexCoord1fv(target:GLenum, v[]:GLfloat):void

glMultiTexCoord1i(target:GLenum, s:GLint):void

glMultiTexCoord1iv(target:GLenum, v[]:GLint):void

glMultiTexCoord1s(target:GLenum, s:GLshort):void

glMultiTexCoord1sv(target:GLenum, v[]:GLshort):void

glMultiTexCoord2d(target:GLenum, s:GLdouble, t:GLdouble):void

glMultiTexCoord2dv(target:GLenum, v[]:GLdouble):void

glMultiTexCoord2f(target:GLenum, s:GLfloat, t:GLfloat):void

glMultiTexCoord2fv(target:GLenum, v[]:GLfloat):void

glMultiTexCoord2i(target:GLenum, s:GLint, t:GLint):void

glMultiTexCoord2iv(target:GLenum, v[]:GLint):void

glMultiTexCoord2s(target:GLenum, s:GLshort, t:GLshort):void

glMultiTexCoord2sv(target:GLenum, v[]:GLshort):void

glMultiTexCoord3d(target:GLenum, s:GLdouble, t:GLdouble, r:GLdouble):void

glMultiTexCoord3dv(target:GLenum, v[]:GLdouble):void

glMultiTexCoord3f(target:GLenum, s:GLfloat, t:GLfloat, r:GLfloat):void

glMultiTexCoord3fv(target:GLenum, v[]:GLfloat):void

glMultiTexCoord3i(target:GLenum, s:GLint, t:GLint, r:GLint):void

glMultiTexCoord3iv(target:GLenum, v[]:GLint):void

glMultiTexCoord3s(target:GLenum, s:GLshort, t:GLshort, r:GLshort):void

glMultiTexCoord3sv(target:GLenum, v[]:GLshort):void

glMultiTexCoord4d(target:GLenum, s:GLdouble, t:GLdouble, r:GLdouble, q:GLdouble):void

glMultiTexCoord4dv(target:GLenum, v[]:GLdouble):void

glMultiTexCoord4f(target:GLenum, s:GLfloat, t:GLfloat, r:GLfloat, q:GLfloat):void

glMultiTexCoord4fv(target:GLenum, v[]:GLfloat):void

glMultiTexCoord4i(target:GLenum, s:GLint, t:GLint, r:GLint, q:GLint):void

glMultiTexCoord4iv(target:GLenum, v[]:GLint):void

glMultiTexCoord4s(target:GLenum, s:GLshort, t:GLshort, r:GLshort, q:GLshort):void

glMultiTexCoord4sv(target:GLenum, v[]:GLshort):void

glSampleCoverage(value:GLclampf, invert:GLboolean):void

//======== GL_VERSION_1_4 ========

glBlendColor(red:GLclampf, green:GLclampf, blue:GLclampf, alpha:GLclampf):void

glBlendEquation(mode:GLenum):void

glBlendFuncSeparate(sfactorRGB:GLenum, dfactorRGB:GLenum, sfactorAlpha:GLenum, dfactorAlpha:GLenum):void

glFogCoordPointer(type:GLenum, stride:GLsizei, pointer:const_void_p):void

glFogCoordd(coord:GLdouble):void

glFogCoorddv(coord[]:GLdouble):void

glFogCoordf(coord:GLfloat):void

glFogCoordfv(coord[]:GLfloat):void

glMultiDrawArrays(mode:GLenum, first[]:GLint, count[]:GLsizei, drawcount:GLsizei):void

glMultiDrawElements(mode:GLenum, count[]:GLsizei, type:GLenum, indices[]:const_void_p):void = \
	R'''
	GLsizei drawcount = count.sizeT<GLsizei>();
	if (drawcount != indices.sizeT<GLsizei>()) {
		Error::Issue(ErrorType::RangeError, "count and indices must have the same number of elements");
		return Value::nil();
	}
	glMultiDrawElements(mode, count, type, indices, drawcount);
	return Value::nil();
	'''

glPointParameterf(pname:GLenum, param:GLfloat):void

glPointParameterfv(pname:GLenum, params[]:GLfloat):void

glPointParameteri(pname:GLenum, param:GLint):void

glPointParameteriv(pname:GLenum, params[]:GLint):void

glSecondaryColor3b(red:GLbyte, green:GLbyte, blue:GLbyte):void

glSecondaryColor3bv(v[]:GLbyte):void

glSecondaryColor3d(red:GLdouble, green:GLdouble, blue:GLdouble):void

glSecondaryColor3dv(v[]:GLdouble):void

glSecondaryColor3f(red:GLfloat, green:GLfloat, blue:GLfloat):void

glSecondaryColor3fv(v[]:GLfloat):void

glSecondaryColor3i(red:GLint, green:GLint, blue:GLint):void

glSecondaryColor3iv(v[]:GLint):void

glSecondaryColor3s(red:GLshort, green:GLshort, blue:GLshort):void

glSecondaryColor3sv(v[]:GLshort):void

glSecondaryColor3ub(red:GLubyte, green:GLubyte, blue:GLubyte):void

glSecondaryColor3ubv(v[]:GLubyte):void

glSecondaryColor3ui(red:GLuint, green:GLuint, blue:GLuint):void

glSecondaryColor3uiv(v[]:GLuint):void

glSecondaryColor3us(red:GLushort, green:GLushort, blue:GLushort):void

glSecondaryColor3usv(v[]:GLushort):void

glSecondaryColorPointer(size:GLint, type:GLenum, stride:GLsizei, pointer:const_void_p):void

glWindowPos2d(x:GLdouble, y:GLdouble):void

glWindowPos2dv(p[]:GLdouble):void

glWindowPos2f(x:GLfloat, y:GLfloat):void

glWindowPos2fv(p[]:GLfloat):void

glWindowPos2i(x:GLint, y:GLint):void

glWindowPos2iv(p[]:GLint):void

glWindowPos2s(x:GLshort, y:GLshort):void

glWindowPos2sv(p[]:GLshort):void

glWindowPos3d(x:GLdouble, y:GLdouble, z:GLdouble):void

glWindowPos3dv(p[]:GLdouble):void

glWindowPos3f(x:GLfloat, y:GLfloat, z:GLfloat):void

glWindowPos3fv(p[]:GLfloat):void

glWindowPos3i(x:GLint, y:GLint, z:GLint):void

glWindowPos3iv(p[]:GLint):void

glWindowPos3s(x:GLshort, y:GLshort, z:GLshort):void

glWindowPos3sv(p[]:GLshort):void

//======== GL_VERSION_1_5 ========

glBeginQuery(target:GLenum, id:GLuint):void

glBindBuffer(target:GLenum, buffer:GLuint):void

glBufferData(target:GLenum, size:GLsizeiptr, data:const_void_p, usage:GLenum):void

glBufferSubData(target:GLenum, offset:GLintptr, size:GLsizeiptr, data:const_void_p):void

glDeleteBuffers(n:GLsizei, buffers[]:GLuint):void

glDeleteQueries(n:GLsizei, ids[]:GLuint):void

glEndQuery(target:GLenum):void

glGenBuffers(n:GLsizei, buffers:GLuint_p:nil):void

glGenQueries(n:GLsizei, ids:GLuint_p:nil):void

glGetBufferParameteriv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

//glGetBufferPointerv(target:GLenum, pname:GLenum, params[]:void_p):void

glGetBufferSubData(target:GLenum, offset:GLintptr, size:GLsizeiptr, data:void_p):void

glGetQueryObjectiv(id:GLuint, pname:GLenum, params:GLint_p:nil):void

glGetQueryObjectuiv(id:GLuint, pname:GLenum, params:GLuint_p:nil):void

glGetQueryiv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glIsBuffer(buffer:GLuint):GLboolean

glIsQuery(id:GLuint):GLboolean

glMapBuffer(target:GLenum, access:GLenum):Return_void_p

glUnmapBuffer(target:GLenum):GLboolean

//======== GL_VERSION_2_0 ========

glAttachShader(program:GLuint, shader:GLuint):void

glBindAttribLocation(program:GLuint, index:GLuint, name:String_const_GLchar_p):void

glBlendEquationSeparate(modeRGB:GLenum, modeAlpha:GLenum):void

glCompileShader(shader:GLuint):void

glCreateProgram():GLuint

glCreateShader(type:GLenum):GLuint

glDeleteProgram(program:GLuint):void

glDeleteShader(shader:GLuint):void

glDetachShader(program:GLuint, shader:GLuint):void

glDisableVertexAttribArray(index:GLuint):void

glDrawBuffers(n:GLsizei, bufs[]:GLenum):void

glEnableVertexAttribArray(index:GLuint):void

glGetActiveAttrib(program:GLuint, index:GLuint, maxLength:GLsizei, length:GLsizei_p:nil, size:GLint_p:nil, type:GLenum_p:nil, name:GLchar_p:nil):void

glGetActiveUniform(program:GLuint, index:GLuint, maxLength:GLsizei, length:GLsizei_p:nil, size:GLint_p:nil, type:GLenum_p:nil, name:GLchar_p:nil):void

glGetAttachedShaders(program:GLuint, maxCount:GLsizei, count:GLsizei_p:nil, shaders:GLuint_p:nil):void

glGetAttribLocation(program:GLuint, name:String_const_GLchar_p):GLint

glGetProgramInfoLog(program:GLuint, bufSize:GLsizei, length:GLsizei_p:nil, infoLog:GLchar_p:nil):void

glGetProgramiv(program:GLuint, pname:GLenum, param:GLint_p:nil):void

glGetShaderInfoLog(shader:GLuint, bufSize:GLsizei, length:GLsizei_p:nil, infoLog:GLchar_p:nil):void

glGetShaderSource(obj:GLuint, maxLength:GLsizei, length:GLsizei_p:nil, source:GLchar_p:nil):void

glGetShaderiv(shader:GLuint, pname:GLenum, param:GLint_p:nil):void

glGetUniformLocation(program:GLuint, name:String_const_GLchar_p):GLint

glGetUniformfv(program:GLuint, location:GLint, params:GLfloat_p:nil):void

glGetUniformiv(program:GLuint, location:GLint, params:GLint_p:nil):void

//glGetVertexAttribPointerv(index:GLuint, pname:GLenum, pointer:void_p__p):void

glGetVertexAttribdv(index:GLuint, pname:GLenum, params:GLdouble_p:nil):void

glGetVertexAttribfv(index:GLuint, pname:GLenum, params:GLfloat_p:nil):void

glGetVertexAttribiv(index:GLuint, pname:GLenum, params:GLint_p:nil):void

glIsProgram(program:GLuint):GLboolean

glIsShader(shader:GLuint):GLboolean

glLinkProgram(program:GLuint):void

glShaderSource(shader:GLuint, count:GLsizei, string[]:String_const_GLchar_p, length:GLint_p:nil):void

glStencilFuncSeparate(frontfunc:GLenum, backfunc:GLenum, ref:GLint, mask:GLuint):void

glStencilMaskSeparate(face:GLenum, mask:GLuint):void

glStencilOpSeparate(face:GLenum, sfail:GLenum, dpfail:GLenum, dppass:GLenum):void

glUniform1f(location:GLint, v0:GLfloat):void

glUniform1fv(location:GLint, count:GLsizei, value[]:GLfloat):void

glUniform1i(location:GLint, v0:GLint):void

glUniform1iv(location:GLint, count:GLsizei, value[]:GLint):void

glUniform2f(location:GLint, v0:GLfloat, v1:GLfloat):void

glUniform2fv(location:GLint, count:GLsizei, value[]:GLfloat):void

glUniform2i(location:GLint, v0:GLint, v1:GLint):void

glUniform2iv(location:GLint, count:GLsizei, value[]:GLint):void

glUniform3f(location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat):void

glUniform3fv(location:GLint, count:GLsizei, value[]:GLfloat):void

glUniform3i(location:GLint, v0:GLint, v1:GLint, v2:GLint):void

glUniform3iv(location:GLint, count:GLsizei, value[]:GLint):void

glUniform4f(location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat, v3:GLfloat):void

glUniform4fv(location:GLint, count:GLsizei, value[]:GLfloat):void

glUniform4i(location:GLint, v0:GLint, v1:GLint, v2:GLint, v3:GLint):void

glUniform4iv(location:GLint, count:GLsizei, value[]:GLint):void

glUniformMatrix2fv(location:GLint, count:GLsizei, transpose:GLboolean, value[]:GLfloat):void

glUniformMatrix3fv(location:GLint, count:GLsizei, transpose:GLboolean, value[]:GLfloat):void

glUniformMatrix4fv(location:GLint, count:GLsizei, transpose:GLboolean, value[]:GLfloat):void

glUseProgram(program:GLuint):void

glValidateProgram(program:GLuint):void

glVertexAttrib1d(index:GLuint, x:GLdouble):void

glVertexAttrib1dv(index:GLuint, v[]:GLdouble):void

glVertexAttrib1f(index:GLuint, x:GLfloat):void

glVertexAttrib1fv(index:GLuint, v[]:GLfloat):void

glVertexAttrib1s(index:GLuint, x:GLshort):void

glVertexAttrib1sv(index:GLuint, v[]:GLshort):void

glVertexAttrib2d(index:GLuint, x:GLdouble, y:GLdouble):void

glVertexAttrib2dv(index:GLuint, v[]:GLdouble):void

glVertexAttrib2f(index:GLuint, x:GLfloat, y:GLfloat):void

glVertexAttrib2fv(index:GLuint, v[]:GLfloat):void

glVertexAttrib2s(index:GLuint, x:GLshort, y:GLshort):void

glVertexAttrib2sv(index:GLuint, v[]:GLshort):void

glVertexAttrib3d(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble):void

glVertexAttrib3dv(index:GLuint, v[]:GLdouble):void

glVertexAttrib3f(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat):void

glVertexAttrib3fv(index:GLuint, v[]:GLfloat):void

glVertexAttrib3s(index:GLuint, x:GLshort, y:GLshort, z:GLshort):void

glVertexAttrib3sv(index:GLuint, v[]:GLshort):void

glVertexAttrib4Nbv(index:GLuint, v[]:GLbyte):void

glVertexAttrib4Niv(index:GLuint, v[]:GLint):void

glVertexAttrib4Nsv(index:GLuint, v[]:GLshort):void

glVertexAttrib4Nub(index:GLuint, x:GLubyte, y:GLubyte, z:GLubyte, w:GLubyte):void

glVertexAttrib4Nubv(index:GLuint, v[]:GLubyte):void

glVertexAttrib4Nuiv(index:GLuint, v[]:GLuint):void

glVertexAttrib4Nusv(index:GLuint, v[]:GLushort):void

glVertexAttrib4bv(index:GLuint, v[]:GLbyte):void

glVertexAttrib4d(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble):void

glVertexAttrib4dv(index:GLuint, v[]:GLdouble):void

glVertexAttrib4f(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat):void

glVertexAttrib4fv(index:GLuint, v[]:GLfloat):void

glVertexAttrib4iv(index:GLuint, v[]:GLint):void

glVertexAttrib4s(index:GLuint, x:GLshort, y:GLshort, z:GLshort, w:GLshort):void

glVertexAttrib4sv(index:GLuint, v[]:GLshort):void

glVertexAttrib4ubv(index:GLuint, v[]:GLubyte):void

glVertexAttrib4uiv(index:GLuint, v[]:GLuint):void

glVertexAttrib4usv(index:GLuint, v[]:GLushort):void

glVertexAttribPointer(index:GLuint, size:GLint, type:GLenum, normalized:GLboolean, stride:GLsizei, pointer:const_void_p):void

//======== GL_VERSION_2_1 ========

glUniformMatrix2x3fv(location:GLint, count:GLsizei, transpose:GLboolean, value[]:GLfloat):void

glUniformMatrix2x4fv(location:GLint, count:GLsizei, transpose:GLboolean, value[]:GLfloat):void

glUniformMatrix3x2fv(location:GLint, count:GLsizei, transpose:GLboolean, value[]:GLfloat):void

glUniformMatrix3x4fv(location:GLint, count:GLsizei, transpose:GLboolean, value[]:GLfloat):void

glUniformMatrix4x2fv(location:GLint, count:GLsizei, transpose:GLboolean, value[]:GLfloat):void

glUniformMatrix4x3fv(location:GLint, count:GLsizei, transpose:GLboolean, value[]:GLfloat):void

//======== GL_VERSION_3_0 ========

glBeginConditionalRender(id:GLuint, mode:GLenum):void

glBeginTransformFeedback(primitiveMode:GLenum):void

glBindFragDataLocation(program:GLuint, colorNumber:GLuint, name:String_const_GLchar_p):void

glClampColor(target:GLenum, clamp:GLenum):void

glClearBufferfi(buffer:GLenum, drawBuffer:GLint, depth:GLfloat, stencil:GLint):void

glClearBufferfv(buffer:GLenum, drawBuffer:GLint, value[]:GLfloat):void

glClearBufferiv(buffer:GLenum, drawBuffer:GLint, value[]:GLint):void

glClearBufferuiv(buffer:GLenum, drawBuffer:GLint, value[]:GLuint):void

glColorMaski(buf:GLuint, red:GLboolean, green:GLboolean, blue:GLboolean, alpha:GLboolean):void

glDisablei(cap:GLenum, index:GLuint):void

glEnablei(cap:GLenum, index:GLuint):void

glEndConditionalRender():void

glEndTransformFeedback():void

glGetBooleani_v(pname:GLenum, index:GLuint, data:GLboolean_p:nil):void

glGetFragDataLocation(program:GLuint, name:String_const_GLchar_p):GLint

glGetStringi(name:GLenum, index:GLuint):String_const_GLubyte_p

glGetTexParameterIiv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetTexParameterIuiv(target:GLenum, pname:GLenum, params:GLuint_p:nil):void

glGetTransformFeedbackVarying(program:GLuint, index:GLuint, bufSize:GLsizei, length:GLsizei_p:nil, size:GLsizei_p:nil, type:GLenum_p:nil, name:GLchar_p:nil):void

glGetUniformuiv(program:GLuint, location:GLint, params:GLuint_p:nil):void

glGetVertexAttribIiv(index:GLuint, pname:GLenum, params:GLint_p:nil):void

glGetVertexAttribIuiv(index:GLuint, pname:GLenum, params:GLuint_p:nil):void

glIsEnabledi(cap:GLenum, index:GLuint):GLboolean

glTexParameterIiv(target:GLenum, pname:GLenum, params[]:GLint):void

glTexParameterIuiv(target:GLenum, pname:GLenum, params[]:GLuint):void

//glTransformFeedbackVaryings(program:GLuint, count:GLsizei, varyings:const_GLchar_p_const_p:nil, bufferMode:GLenum):void

glUniform1ui(location:GLint, v0:GLuint):void

glUniform1uiv(location:GLint, count:GLsizei, value[]:GLuint):void

glUniform2ui(location:GLint, v0:GLuint, v1:GLuint):void

glUniform2uiv(location:GLint, count:GLsizei, value[]:GLuint):void

glUniform3ui(location:GLint, v0:GLuint, v1:GLuint, v2:GLuint):void

glUniform3uiv(location:GLint, count:GLsizei, value[]:GLuint):void

glUniform4ui(location:GLint, v0:GLuint, v1:GLuint, v2:GLuint, v3:GLuint):void

glUniform4uiv(location:GLint, count:GLsizei, value[]:GLuint):void

glVertexAttribI1i(index:GLuint, v0:GLint):void

glVertexAttribI1iv(index:GLuint, v0[]:GLint):void

glVertexAttribI1ui(index:GLuint, v0:GLuint):void

glVertexAttribI1uiv(index:GLuint, v0[]:GLuint):void

glVertexAttribI2i(index:GLuint, v0:GLint, v1:GLint):void

glVertexAttribI2iv(index:GLuint, v0[]:GLint):void

glVertexAttribI2ui(index:GLuint, v0:GLuint, v1:GLuint):void

glVertexAttribI2uiv(index:GLuint, v0[]:GLuint):void

glVertexAttribI3i(index:GLuint, v0:GLint, v1:GLint, v2:GLint):void

glVertexAttribI3iv(index:GLuint, v0[]:GLint):void

glVertexAttribI3ui(index:GLuint, v0:GLuint, v1:GLuint, v2:GLuint):void

glVertexAttribI3uiv(index:GLuint, v0[]:GLuint):void

glVertexAttribI4bv(index:GLuint, v0[]:GLbyte):void

glVertexAttribI4i(index:GLuint, v0:GLint, v1:GLint, v2:GLint, v3:GLint):void

glVertexAttribI4iv(index:GLuint, v0[]:GLint):void

glVertexAttribI4sv(index:GLuint, v0[]:GLshort):void

glVertexAttribI4ubv(index:GLuint, v0[]:GLubyte):void

glVertexAttribI4ui(index:GLuint, v0:GLuint, v1:GLuint, v2:GLuint, v3:GLuint):void

glVertexAttribI4uiv(index:GLuint, v0[]:GLuint):void

glVertexAttribI4usv(index:GLuint, v0[]:GLushort):void

glVertexAttribIPointer(index:GLuint, size:GLint, type:GLenum, stride:GLsizei, pointer:const_void_p):void

//======== GL_VERSION_3_1 ========

glDrawArraysInstanced(mode:GLenum, first:GLint, count:GLsizei, primcount:GLsizei):void

glDrawElementsInstanced(mode:GLenum, count:GLsizei, type:GLenum, indices:const_void_p, primcount:GLsizei):void

glPrimitiveRestartIndex(buffer:GLuint):void

glTexBuffer(target:GLenum, internalFormat:GLenum, buffer:GLuint):void

//======== GL_VERSION_3_2 ========

glFramebufferTexture(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint):void

glGetBufferParameteri64v(target:GLenum, value:GLenum, data:GLint64_p:nil):void

glGetInteger64i_v(pname:GLenum, index:GLuint, data:GLint64_p:nil):void

//======== GL_VERSION_3_3 ========

glVertexAttribDivisor(index:GLuint, divisor:GLuint):void

//======== GL_VERSION_4_0 ========

glBlendEquationSeparatei(buf:GLuint, modeRGB:GLenum, modeAlpha:GLenum):void

glBlendEquationi(buf:GLuint, mode:GLenum):void

glBlendFuncSeparatei(buf:GLuint, srcRGB:GLenum, dstRGB:GLenum, srcAlpha:GLenum, dstAlpha:GLenum):void

glBlendFunci(buf:GLuint, src:GLenum, dst:GLenum):void

glMinSampleShading(value:GLclampf):void

//======== GL_VERSION_4_5 ========

glGetGraphicsResetStatus():GLenum

glGetnCompressedTexImage(target:GLenum, lod:GLint, bufSize:GLsizei, pixels:GLvoid_p:nil):void

glGetnTexImage(tex:GLenum, level:GLint, format:GLenum, type:GLenum, bufSize:GLsizei, pixels:GLvoid_p:nil):void

glGetnUniformdv(program:GLuint, location:GLint, bufSize:GLsizei, params:GLdouble_p:nil):void

//======== GL_VERSION_4_6 ========

glMultiDrawArraysIndirectCount(mode:GLenum, indirect:const_GLvoid_p:nil, drawcount:GLintptr, maxdrawcount:GLsizei, stride:GLsizei):void

glMultiDrawElementsIndirectCount(mode:GLenum, type:GLenum, indirect:const_GLvoid_p:nil, drawcount:GLintptr, maxdrawcount:GLsizei, stride:GLsizei):void

glSpecializeShader(shader:GLuint, pEntryPoint[]:GLchar, numSpecializationConstants:GLuint, pConstantIndex[]:GLuint, pConstantValue[]:GLuint):void

//======== GL_ARB_ES2_compatibility ========

glClearDepthf(d:GLclampf):void

glDepthRangef(n:GLclampf, f:GLclampf):void

glGetShaderPrecisionFormat(shadertype:GLenum, precisiontype:GLenum, range:GLint_p:nil, precision:GLint_p:nil):void

glReleaseShaderCompiler():void

glShaderBinary(count:GLsizei, shaders:const_GLuint_p:nil, binaryformat:GLenum, binary:const_void_p, length:GLsizei):void

//======== GL_ARB_ES3_1_compatibility ========

glMemoryBarrierByRegion(barriers:GLbitfield):void

//======== GL_ARB_ES3_2_compatibility ========

glPrimitiveBoundingBoxARB(minX:GLfloat, minY:GLfloat, minZ:GLfloat, minW:GLfloat, maxX:GLfloat, maxY:GLfloat, maxZ:GLfloat, maxW:GLfloat):void

//======== GL_ARB_base_instance ========

glDrawArraysInstancedBaseInstance(mode:GLenum, first:GLint, count:GLsizei, primcount:GLsizei, baseinstance:GLuint):void

glDrawElementsInstancedBaseInstance(mode:GLenum, count:GLsizei, type:GLenum, indices:const_void_p, primcount:GLsizei, baseinstance:GLuint):void

glDrawElementsInstancedBaseVertexBaseInstance(mode:GLenum, count:GLsizei, type:GLenum, indices:const_void_p, primcount:GLsizei, basevertex:GLint, baseinstance:GLuint):void

//======== GL_ARB_bindless_texture ========

glGetImageHandleARB(texture:GLuint, level:GLint, layered:GLboolean, layer:GLint, format:GLenum):GLuint64

glGetTextureHandleARB(texture:GLuint):GLuint64

glGetTextureSamplerHandleARB(texture:GLuint, sampler:GLuint):GLuint64

//glGetVertexAttribLui64vARB(index:GLuint, pname:GLenum, params:GLuint64EXT_p:nil):void

glIsImageHandleResidentARB(handle:GLuint64):GLboolean

glIsTextureHandleResidentARB(handle:GLuint64):GLboolean

glMakeImageHandleNonResidentARB(handle:GLuint64):void

glMakeImageHandleResidentARB(handle:GLuint64, access:GLenum):void

glMakeTextureHandleNonResidentARB(handle:GLuint64):void

glMakeTextureHandleResidentARB(handle:GLuint64):void

glProgramUniformHandleui64ARB(program:GLuint, location:GLint, value:GLuint64):void

glProgramUniformHandleui64vARB(program:GLuint, location:GLint, count:GLsizei, values:const_GLuint64_p:nil):void

glUniformHandleui64ARB(location:GLint, value:GLuint64):void

glUniformHandleui64vARB(location:GLint, count:GLsizei, value:const_GLuint64_p:nil):void

glVertexAttribL1ui64ARB(index:GLuint, x:GLuint64EXT):void

glVertexAttribL1ui64vARB(index:GLuint, v:const_GLuint64EXT_p:nil):void

//======== GL_ARB_blend_func_extended ========

glBindFragDataLocationIndexed(program:GLuint, colorNumber:GLuint, index:GLuint, name:String_const_GLchar_p):void

glGetFragDataIndex(program:GLuint, name:String_const_GLchar_p):GLint

//======== GL_ARB_buffer_storage ========

glBufferStorage(target:GLenum, size:GLsizeiptr, data:const_void_p, flags:GLbitfield):void

//======== GL_ARB_cl_event ========

//glCreateSyncFromCLeventARB(context:cl_context, event:cl_event, flags:GLbitfield):GLsync

//======== GL_ARB_clear_buffer_object ========

glClearBufferData(target:GLenum, internalformat:GLenum, format:GLenum, type:GLenum, data:const_void_p):void

glClearBufferSubData(target:GLenum, internalformat:GLenum, offset:GLintptr, size:GLsizeiptr, format:GLenum, type:GLenum, data:const_void_p):void

glClearNamedBufferDataEXT(buffer:GLuint, internalformat:GLenum, format:GLenum, type:GLenum, data:const_void_p):void

glClearNamedBufferSubDataEXT(buffer:GLuint, internalformat:GLenum, offset:GLintptr, size:GLsizeiptr, format:GLenum, type:GLenum, data:const_void_p):void

//======== GL_ARB_clear_texture ========

glClearTexImage(texture:GLuint, level:GLint, format:GLenum, type:GLenum, data:const_void_p):void

glClearTexSubImage(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, data:const_void_p):void

//======== GL_ARB_clip_control ========

glClipControl(origin:GLenum, depth:GLenum):void

//======== GL_ARB_color_buffer_float ========

glClampColorARB(target:GLenum, clamp:GLenum):void

//======== GL_ARB_compute_shader ========

glDispatchCompute(num_groups_x:GLuint, num_groups_y:GLuint, num_groups_z:GLuint):void

glDispatchComputeIndirect(indirect:GLintptr):void

//======== GL_ARB_compute_variable_group_size ========

glDispatchComputeGroupSizeARB(num_groups_x:GLuint, num_groups_y:GLuint, num_groups_z:GLuint, group_size_x:GLuint, group_size_y:GLuint, group_size_z:GLuint):void

//======== GL_ARB_copy_buffer ========

glCopyBufferSubData(readtarget:GLenum, writetarget:GLenum, readoffset:GLintptr, writeoffset:GLintptr, size:GLsizeiptr):void

//======== GL_ARB_copy_image ========

glCopyImageSubData(srcName:GLuint, srcTarget:GLenum, srcLevel:GLint, srcX:GLint, srcY:GLint, srcZ:GLint, dstName:GLuint, dstTarget:GLenum, dstLevel:GLint, dstX:GLint, dstY:GLint, dstZ:GLint, srcWidth:GLsizei, srcHeight:GLsizei, srcDepth:GLsizei):void

//======== GL_ARB_debug_output ========

//glDebugMessageCallbackARB(callback:GLDEBUGPROCARB, userParam:const_void_p):void

glDebugMessageControlARB(source:GLenum, type:GLenum, severity:GLenum, count:GLsizei, ids:const_GLuint_p:nil, enabled:GLboolean):void

glDebugMessageInsertARB(source:GLenum, type:GLenum, id:GLuint, severity:GLenum, length:GLsizei, buf:const_GLchar_p:nil):void

glGetDebugMessageLogARB(count:GLuint, bufSize:GLsizei, sources:GLenum_p:nil, types:GLenum_p:nil, ids:GLuint_p:nil, severities:GLenum_p:nil, lengths:GLsizei_p:nil, messageLog:GLchar_p:nil):GLuint

//======== GL_ARB_direct_state_access ========

glBindTextureUnit(unit:GLuint, texture:GLuint):void

glBlitNamedFramebuffer(readFramebuffer:GLuint, drawFramebuffer:GLuint, srcX0:GLint, srcY0:GLint, srcX1:GLint, srcY1:GLint, dstX0:GLint, dstY0:GLint, dstX1:GLint, dstY1:GLint, mask:GLbitfield, filter:GLenum):void

glCheckNamedFramebufferStatus(framebuffer:GLuint, target:GLenum):GLenum

glClearNamedBufferData(buffer:GLuint, internalformat:GLenum, format:GLenum, type:GLenum, data:const_void_p):void

glClearNamedBufferSubData(buffer:GLuint, internalformat:GLenum, offset:GLintptr, size:GLsizeiptr, format:GLenum, type:GLenum, data:const_void_p):void

glClearNamedFramebufferfi(framebuffer:GLuint, buffer:GLenum, drawbuffer:GLint, depth:GLfloat, stencil:GLint):void

glClearNamedFramebufferfv(framebuffer:GLuint, buffer:GLenum, drawbuffer:GLint, value:GLfloat_p:nil):void

glClearNamedFramebufferiv(framebuffer:GLuint, buffer:GLenum, drawbuffer:GLint, value:const_GLint_p:nil):void

glClearNamedFramebufferuiv(framebuffer:GLuint, buffer:GLenum, drawbuffer:GLint, value:const_GLuint_p:nil):void

glCompressedTextureSubImage1D(texture:GLuint, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, imageSize:GLsizei, data:const_void_p):void

glCompressedTextureSubImage2D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, imageSize:GLsizei, data:const_void_p):void

glCompressedTextureSubImage3D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, imageSize:GLsizei, data:const_void_p):void

glCopyNamedBufferSubData(readBuffer:GLuint, writeBuffer:GLuint, readOffset:GLintptr, writeOffset:GLintptr, size:GLsizeiptr):void

glCopyTextureSubImage1D(texture:GLuint, level:GLint, xoffset:GLint, x:GLint, y:GLint, width:GLsizei):void

glCopyTextureSubImage2D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei):void

glCopyTextureSubImage3D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, x:GLint, y:GLint, width:GLsizei, height:GLsizei):void

glCreateBuffers(n:GLsizei, buffers:GLuint_p:nil):void

glCreateFramebuffers(n:GLsizei, framebuffers:GLuint_p:nil):void

glCreateProgramPipelines(n:GLsizei, pipelines:GLuint_p:nil):void

glCreateQueries(target:GLenum, n:GLsizei, ids:GLuint_p:nil):void

glCreateRenderbuffers(n:GLsizei, renderbuffers:GLuint_p:nil):void

glCreateSamplers(n:GLsizei, samplers:GLuint_p:nil):void

glCreateTextures(target:GLenum, n:GLsizei, textures:GLuint_p:nil):void

glCreateTransformFeedbacks(n:GLsizei, ids:GLuint_p:nil):void

glCreateVertexArrays(n:GLsizei, arrays:GLuint_p:nil):void

glDisableVertexArrayAttrib(vaobj:GLuint, index:GLuint):void

glEnableVertexArrayAttrib(vaobj:GLuint, index:GLuint):void

glFlushMappedNamedBufferRange(buffer:GLuint, offset:GLintptr, length:GLsizeiptr):void

glGenerateTextureMipmap(texture:GLuint):void

glGetCompressedTextureImage(texture:GLuint, level:GLint, bufSize:GLsizei, pixels:void_p):void

glGetNamedBufferParameteri64v(buffer:GLuint, pname:GLenum, params:GLint64_p:nil):void

glGetNamedBufferParameteriv(buffer:GLuint, pname:GLenum, params:GLint_p:nil):void

//glGetNamedBufferPointerv(buffer:GLuint, pname:GLenum, params:void_p__p):void

glGetNamedBufferSubData(buffer:GLuint, offset:GLintptr, size:GLsizeiptr, data:void_p):void

glGetNamedFramebufferAttachmentParameteriv(framebuffer:GLuint, attachment:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetNamedFramebufferParameteriv(framebuffer:GLuint, pname:GLenum, param:GLint_p:nil):void

glGetNamedRenderbufferParameteriv(renderbuffer:GLuint, pname:GLenum, params:GLint_p:nil):void

glGetQueryBufferObjecti64v(id:GLuint, buffer:GLuint, pname:GLenum, offset:GLintptr):void

glGetQueryBufferObjectiv(id:GLuint, buffer:GLuint, pname:GLenum, offset:GLintptr):void

glGetQueryBufferObjectui64v(id:GLuint, buffer:GLuint, pname:GLenum, offset:GLintptr):void

glGetQueryBufferObjectuiv(id:GLuint, buffer:GLuint, pname:GLenum, offset:GLintptr):void

glGetTextureImage(texture:GLuint, level:GLint, format:GLenum, type:GLenum, bufSize:GLsizei, pixels:void_p):void

glGetTextureLevelParameterfv(texture:GLuint, level:GLint, pname:GLenum, params:GLfloat_p:nil):void

glGetTextureLevelParameteriv(texture:GLuint, level:GLint, pname:GLenum, params:GLint_p:nil):void

glGetTextureParameterIiv(texture:GLuint, pname:GLenum, params:GLint_p:nil):void

glGetTextureParameterIuiv(texture:GLuint, pname:GLenum, params:GLuint_p:nil):void

glGetTextureParameterfv(texture:GLuint, pname:GLenum, params:GLfloat_p:nil):void

glGetTextureParameteriv(texture:GLuint, pname:GLenum, params:GLint_p:nil):void

glGetTransformFeedbacki64_v(xfb:GLuint, pname:GLenum, index:GLuint, param:GLint64_p:nil):void

glGetTransformFeedbacki_v(xfb:GLuint, pname:GLenum, index:GLuint, param:GLint_p:nil):void

glGetTransformFeedbackiv(xfb:GLuint, pname:GLenum, param:GLint_p:nil):void

glGetVertexArrayIndexed64iv(vaobj:GLuint, index:GLuint, pname:GLenum, param:GLint64_p:nil):void

glGetVertexArrayIndexediv(vaobj:GLuint, index:GLuint, pname:GLenum, param:GLint_p:nil):void

glGetVertexArrayiv(vaobj:GLuint, pname:GLenum, param:GLint_p:nil):void

glInvalidateNamedFramebufferData(framebuffer:GLuint, numAttachments:GLsizei, attachments:const_GLenum_p:nil):void

glInvalidateNamedFramebufferSubData(framebuffer:GLuint, numAttachments:GLsizei, attachments:const_GLenum_p:nil, x:GLint, y:GLint, width:GLsizei, height:GLsizei):void

//glMapNamedBuffer(buffer:GLuint, access:GLenum):void *

//glMapNamedBufferRange(buffer:GLuint, offset:GLintptr, length:GLsizeiptr, access:GLbitfield):void *

glNamedBufferData(buffer:GLuint, size:GLsizeiptr, data:const_void_p, usage:GLenum):void

glNamedBufferStorage(buffer:GLuint, size:GLsizeiptr, data:const_void_p, flags:GLbitfield):void

glNamedBufferSubData(buffer:GLuint, offset:GLintptr, size:GLsizeiptr, data:const_void_p):void

glNamedFramebufferDrawBuffer(framebuffer:GLuint, mode:GLenum):void

glNamedFramebufferDrawBuffers(framebuffer:GLuint, n:GLsizei, bufs:const_GLenum_p:nil):void

glNamedFramebufferParameteri(framebuffer:GLuint, pname:GLenum, param:GLint):void

glNamedFramebufferReadBuffer(framebuffer:GLuint, mode:GLenum):void

glNamedFramebufferRenderbuffer(framebuffer:GLuint, attachment:GLenum, renderbuffertarget:GLenum, renderbuffer:GLuint):void

glNamedFramebufferTexture(framebuffer:GLuint, attachment:GLenum, texture:GLuint, level:GLint):void

glNamedFramebufferTextureLayer(framebuffer:GLuint, attachment:GLenum, texture:GLuint, level:GLint, layer:GLint):void

glNamedRenderbufferStorage(renderbuffer:GLuint, internalformat:GLenum, width:GLsizei, height:GLsizei):void

glNamedRenderbufferStorageMultisample(renderbuffer:GLuint, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei):void

glTextureBuffer(texture:GLuint, internalformat:GLenum, buffer:GLuint):void

glTextureBufferRange(texture:GLuint, internalformat:GLenum, buffer:GLuint, offset:GLintptr, size:GLsizeiptr):void

glTextureParameterIiv(texture:GLuint, pname:GLenum, params:const_GLint_p:nil):void

glTextureParameterIuiv(texture:GLuint, pname:GLenum, params:const_GLuint_p:nil):void

glTextureParameterf(texture:GLuint, pname:GLenum, param:GLfloat):void

glTextureParameterfv(texture:GLuint, pname:GLenum, param:const_GLfloat_p:nil):void

glTextureParameteri(texture:GLuint, pname:GLenum, param:GLint):void

glTextureParameteriv(texture:GLuint, pname:GLenum, param:const_GLint_p:nil):void

glTextureStorage1D(texture:GLuint, levels:GLsizei, internalformat:GLenum, width:GLsizei):void

glTextureStorage2D(texture:GLuint, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei):void

glTextureStorage2DMultisample(texture:GLuint, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, fixedsamplelocations:GLboolean):void

glTextureStorage3D(texture:GLuint, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei):void

glTextureStorage3DMultisample(texture:GLuint, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, fixedsamplelocations:GLboolean):void

glTextureSubImage1D(texture:GLuint, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, type:GLenum, pixels:const_void_p):void

glTextureSubImage2D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, pixels:const_void_p):void

glTextureSubImage3D(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, pixels:const_void_p):void

glTransformFeedbackBufferBase(xfb:GLuint, index:GLuint, buffer:GLuint):void

glTransformFeedbackBufferRange(xfb:GLuint, index:GLuint, buffer:GLuint, offset:GLintptr, size:GLsizeiptr):void

glUnmapNamedBuffer(buffer:GLuint):GLboolean

glVertexArrayAttribBinding(vaobj:GLuint, attribindex:GLuint, bindingindex:GLuint):void

glVertexArrayAttribFormat(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, normalized:GLboolean, relativeoffset:GLuint):void

glVertexArrayAttribIFormat(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint):void

glVertexArrayAttribLFormat(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint):void

glVertexArrayBindingDivisor(vaobj:GLuint, bindingindex:GLuint, divisor:GLuint):void

glVertexArrayElementBuffer(vaobj:GLuint, buffer:GLuint):void

glVertexArrayVertexBuffer(vaobj:GLuint, bindingindex:GLuint, buffer:GLuint, offset:GLintptr, stride:GLsizei):void

glVertexArrayVertexBuffers(vaobj:GLuint, first:GLuint, count:GLsizei, buffers:const_GLuint_p:nil, offsets:const_GLintptr_p:nil, strides:const_GLsizei_p:nil):void

//======== GL_ARB_draw_buffers ========

glDrawBuffersARB(n:GLsizei, bufs:const_GLenum_p:nil):void

//======== GL_ARB_draw_buffers_blend ========

glBlendEquationSeparateiARB(buf:GLuint, modeRGB:GLenum, modeAlpha:GLenum):void

glBlendEquationiARB(buf:GLuint, mode:GLenum):void

glBlendFuncSeparateiARB(buf:GLuint, srcRGB:GLenum, dstRGB:GLenum, srcAlpha:GLenum, dstAlpha:GLenum):void

glBlendFunciARB(buf:GLuint, src:GLenum, dst:GLenum):void

//======== GL_ARB_draw_elements_base_vertex ========

glDrawElementsBaseVertex(mode:GLenum, count:GLsizei, type:GLenum, indices:void_p, basevertex:GLint):void

glDrawElementsInstancedBaseVertex(mode:GLenum, count:GLsizei, type:GLenum, indices:const_void_p, primcount:GLsizei, basevertex:GLint):void

glDrawRangeElementsBaseVertex(mode:GLenum, start:GLuint, end:GLuint, count:GLsizei, type:GLenum, indices:void_p, basevertex:GLint):void

//glMultiDrawElementsBaseVertex(mode:GLenum, count:GLsizei_p:nil, type:GLenum, , primcount:GLsizei, basevertex:GLint_p:nil):void

//======== GL_ARB_draw_indirect ========

glDrawArraysIndirect(mode:GLenum, indirect:const_void_p):void

glDrawElementsIndirect(mode:GLenum, type:GLenum, indirect:const_void_p):void

//======== GL_ARB_framebuffer_no_attachments ========

glFramebufferParameteri(target:GLenum, pname:GLenum, param:GLint):void

glGetFramebufferParameteriv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetNamedFramebufferParameterivEXT(framebuffer:GLuint, pname:GLenum, params:GLint_p:nil):void

glNamedFramebufferParameteriEXT(framebuffer:GLuint, pname:GLenum, param:GLint):void

//======== GL_ARB_framebuffer_object ========

glBindFramebuffer(target:GLenum, framebuffer:GLuint):void

glBindRenderbuffer(target:GLenum, renderbuffer:GLuint):void

glBlitFramebuffer(srcX0:GLint, srcY0:GLint, srcX1:GLint, srcY1:GLint, dstX0:GLint, dstY0:GLint, dstX1:GLint, dstY1:GLint, mask:GLbitfield, filter:GLenum):void

glCheckFramebufferStatus(target:GLenum):GLenum

glDeleteFramebuffers(n:GLsizei, framebuffers:const_GLuint_p:nil):void

glDeleteRenderbuffers(n:GLsizei, renderbuffers:const_GLuint_p:nil):void

glFramebufferRenderbuffer(target:GLenum, attachment:GLenum, renderbuffertarget:GLenum, renderbuffer:GLuint):void

glFramebufferTexture1D(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint):void

glFramebufferTexture2D(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint):void

glFramebufferTexture3D(target:GLenum, attachment:GLenum, textarget:GLenum, texture:GLuint, level:GLint, layer:GLint):void

glFramebufferTextureLayer(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, layer:GLint):void

glGenFramebuffers(n:GLsizei, framebuffers:GLuint_p:nil):void

glGenRenderbuffers(n:GLsizei, renderbuffers:GLuint_p:nil):void

glGenerateMipmap(target:GLenum):void

glGetFramebufferAttachmentParameteriv(target:GLenum, attachment:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetRenderbufferParameteriv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glIsFramebuffer(framebuffer:GLuint):GLboolean

glIsRenderbuffer(renderbuffer:GLuint):GLboolean

glRenderbufferStorage(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei):void

glRenderbufferStorageMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei):void

//======== GL_ARB_geometry_shader4 ========

glFramebufferTextureARB(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint):void

glFramebufferTextureFaceARB(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, face:GLenum):void

glFramebufferTextureLayerARB(target:GLenum, attachment:GLenum, texture:GLuint, level:GLint, layer:GLint):void

glProgramParameteriARB(program:GLuint, pname:GLenum, value:GLint):void

//======== GL_ARB_get_program_binary ========

//glGetProgramBinary(program:GLuint, bufSize:GLsizei, length:GLsizei_p:nil, binaryFormat:GLenum_p:nil, ):void

glProgramBinary(program:GLuint, binaryFormat:GLenum, binary:const_void_p, length:GLsizei):void

glProgramParameteri(program:GLuint, pname:GLenum, value:GLint):void

//======== GL_ARB_get_texture_sub_image ========

glGetCompressedTextureSubImage(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, bufSize:GLsizei, pixels:void_p):void

glGetTextureSubImage(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, type:GLenum, bufSize:GLsizei, pixels:void_p):void

//======== GL_ARB_gl_spirv ========

glSpecializeShaderARB(shader:GLuint, pEntryPoint:const_GLchar_p:nil, numSpecializationConstants:GLuint, pConstantIndex:const_GLuint_p:nil, pConstantValue:const_GLuint_p:nil):void

//======== GL_ARB_gpu_shader_fp64 ========

glGetUniformdv(program:GLuint, location:GLint, params:GLdouble_p:nil):void

glUniform1d(location:GLint, x:GLdouble):void

glUniform1dv(location:GLint, count:GLsizei, value:const_GLdouble_p:nil):void

glUniform2d(location:GLint, x:GLdouble, y:GLdouble):void

glUniform2dv(location:GLint, count:GLsizei, value:const_GLdouble_p:nil):void

glUniform3d(location:GLint, x:GLdouble, y:GLdouble, z:GLdouble):void

glUniform3dv(location:GLint, count:GLsizei, value:const_GLdouble_p:nil):void

glUniform4d(location:GLint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble):void

glUniform4dv(location:GLint, count:GLsizei, value:const_GLdouble_p:nil):void

glUniformMatrix2dv(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glUniformMatrix2x3dv(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glUniformMatrix2x4dv(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glUniformMatrix3dv(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glUniformMatrix3x2dv(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glUniformMatrix3x4dv(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glUniformMatrix4dv(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glUniformMatrix4x2dv(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glUniformMatrix4x3dv(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

//======== GL_ARB_gpu_shader_int64 ========

glGetUniformi64vARB(program:GLuint, location:GLint, params:GLint64_p:nil):void

glGetUniformui64vARB(program:GLuint, location:GLint, params:GLuint64_p:nil):void

glGetnUniformi64vARB(program:GLuint, location:GLint, bufSize:GLsizei, params:GLint64_p:nil):void

glGetnUniformui64vARB(program:GLuint, location:GLint, bufSize:GLsizei, params:GLuint64_p:nil):void

glProgramUniform1i64ARB(program:GLuint, location:GLint, x:GLint64):void

glProgramUniform1i64vARB(program:GLuint, location:GLint, count:GLsizei, value:const_GLint64_p:nil):void

glProgramUniform1ui64ARB(program:GLuint, location:GLint, x:GLuint64):void

glProgramUniform1ui64vARB(program:GLuint, location:GLint, count:GLsizei, value:const_GLuint64_p:nil):void

glProgramUniform2i64ARB(program:GLuint, location:GLint, x:GLint64, y:GLint64):void

glProgramUniform2i64vARB(program:GLuint, location:GLint, count:GLsizei, value:const_GLint64_p:nil):void

glProgramUniform2ui64ARB(program:GLuint, location:GLint, x:GLuint64, y:GLuint64):void

glProgramUniform2ui64vARB(program:GLuint, location:GLint, count:GLsizei, value:const_GLuint64_p:nil):void

glProgramUniform3i64ARB(program:GLuint, location:GLint, x:GLint64, y:GLint64, z:GLint64):void

glProgramUniform3i64vARB(program:GLuint, location:GLint, count:GLsizei, value:const_GLint64_p:nil):void

glProgramUniform3ui64ARB(program:GLuint, location:GLint, x:GLuint64, y:GLuint64, z:GLuint64):void

glProgramUniform3ui64vARB(program:GLuint, location:GLint, count:GLsizei, value:const_GLuint64_p:nil):void

glProgramUniform4i64ARB(program:GLuint, location:GLint, x:GLint64, y:GLint64, z:GLint64, w:GLint64):void

glProgramUniform4i64vARB(program:GLuint, location:GLint, count:GLsizei, value:const_GLint64_p:nil):void

glProgramUniform4ui64ARB(program:GLuint, location:GLint, x:GLuint64, y:GLuint64, z:GLuint64, w:GLuint64):void

glProgramUniform4ui64vARB(program:GLuint, location:GLint, count:GLsizei, value:const_GLuint64_p:nil):void

glUniform1i64ARB(location:GLint, x:GLint64):void

glUniform1i64vARB(location:GLint, count:GLsizei, value:const_GLint64_p:nil):void

glUniform1ui64ARB(location:GLint, x:GLuint64):void

glUniform1ui64vARB(location:GLint, count:GLsizei, value:const_GLuint64_p:nil):void

glUniform2i64ARB(location:GLint, x:GLint64, y:GLint64):void

glUniform2i64vARB(location:GLint, count:GLsizei, value:const_GLint64_p:nil):void

glUniform2ui64ARB(location:GLint, x:GLuint64, y:GLuint64):void

glUniform2ui64vARB(location:GLint, count:GLsizei, value:const_GLuint64_p:nil):void

glUniform3i64ARB(location:GLint, x:GLint64, y:GLint64, z:GLint64):void

glUniform3i64vARB(location:GLint, count:GLsizei, value:const_GLint64_p:nil):void

glUniform3ui64ARB(location:GLint, x:GLuint64, y:GLuint64, z:GLuint64):void

glUniform3ui64vARB(location:GLint, count:GLsizei, value:const_GLuint64_p:nil):void

glUniform4i64ARB(location:GLint, x:GLint64, y:GLint64, z:GLint64, w:GLint64):void

glUniform4i64vARB(location:GLint, count:GLsizei, value:const_GLint64_p:nil):void

glUniform4ui64ARB(location:GLint, x:GLuint64, y:GLuint64, z:GLuint64, w:GLuint64):void

glUniform4ui64vARB(location:GLint, count:GLsizei, value:const_GLuint64_p:nil):void

//======== GL_ARB_imaging ========

glColorSubTable(target:GLenum, start:GLsizei, count:GLsizei, format:GLenum, type:GLenum, data:const_void_p):void

glColorTable(target:GLenum, internalformat:GLenum, width:GLsizei, format:GLenum, type:GLenum, table:const_void_p):void

glColorTableParameterfv(target:GLenum, pname:GLenum, params:const_GLfloat_p:nil):void

glColorTableParameteriv(target:GLenum, pname:GLenum, params:const_GLint_p:nil):void

glConvolutionFilter1D(target:GLenum, internalformat:GLenum, width:GLsizei, format:GLenum, type:GLenum, image:const_void_p):void

glConvolutionFilter2D(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, image:const_void_p):void

glConvolutionParameterf(target:GLenum, pname:GLenum, params:GLfloat):void

glConvolutionParameterfv(target:GLenum, pname:GLenum, params:const_GLfloat_p:nil):void

glConvolutionParameteri(target:GLenum, pname:GLenum, params:GLint):void

glConvolutionParameteriv(target:GLenum, pname:GLenum, params:const_GLint_p:nil):void

glCopyColorSubTable(target:GLenum, start:GLsizei, x:GLint, y:GLint, width:GLsizei):void

glCopyColorTable(target:GLenum, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei):void

glCopyConvolutionFilter1D(target:GLenum, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei):void

glCopyConvolutionFilter2D(target:GLenum, internalformat:GLenum, x:GLint, y:GLint, width:GLsizei, height:GLsizei):void

glGetColorTable(target:GLenum, format:GLenum, type:GLenum, table:void_p):void

glGetColorTableParameterfv(target:GLenum, pname:GLenum, params:GLfloat_p:nil):void

glGetColorTableParameteriv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetConvolutionFilter(target:GLenum, format:GLenum, type:GLenum, image:void_p):void

glGetConvolutionParameterfv(target:GLenum, pname:GLenum, params:GLfloat_p:nil):void

glGetConvolutionParameteriv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetHistogram(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, values:void_p):void

glGetHistogramParameterfv(target:GLenum, pname:GLenum, params:GLfloat_p:nil):void

glGetHistogramParameteriv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetMinmax(target:GLenum, reset:GLboolean, format:GLenum, types:GLenum, values:void_p):void

glGetMinmaxParameterfv(target:GLenum, pname:GLenum, params:GLfloat_p:nil):void

glGetMinmaxParameteriv(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetSeparableFilter(target:GLenum, format:GLenum, type:GLenum, row:void_p, column:void_p, span:void_p):void

glHistogram(target:GLenum, width:GLsizei, internalformat:GLenum, sink:GLboolean):void

glMinmax(target:GLenum, internalformat:GLenum, sink:GLboolean):void

glResetHistogram(target:GLenum):void

glResetMinmax(target:GLenum):void

glSeparableFilter2D(target:GLenum, internalformat:GLenum, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, row:const_void_p, column:const_void_p):void

//======== GL_ARB_indirect_parameters ========

glMultiDrawArraysIndirectCountARB(mode:GLenum, indirect:const_void_p, drawcount:GLintptr, maxdrawcount:GLsizei, stride:GLsizei):void

glMultiDrawElementsIndirectCountARB(mode:GLenum, type:GLenum, indirect:const_void_p, drawcount:GLintptr, maxdrawcount:GLsizei, stride:GLsizei):void

//======== GL_ARB_instanced_arrays ========

glDrawArraysInstancedARB(mode:GLenum, first:GLint, count:GLsizei, primcount:GLsizei):void

glDrawElementsInstancedARB(mode:GLenum, count:GLsizei, type:GLenum, indices:const_void_p, primcount:GLsizei):void

glVertexAttribDivisorARB(index:GLuint, divisor:GLuint):void

//======== GL_ARB_internalformat_query ========

glGetInternalformativ(target:GLenum, internalformat:GLenum, pname:GLenum, bufSize:GLsizei, params:GLint_p:nil):void

//======== GL_ARB_internalformat_query2 ========

glGetInternalformati64v(target:GLenum, internalformat:GLenum, pname:GLenum, bufSize:GLsizei, params:GLint64_p:nil):void

//======== GL_ARB_invalidate_subdata ========

glInvalidateBufferData(buffer:GLuint):void

glInvalidateBufferSubData(buffer:GLuint, offset:GLintptr, length:GLsizeiptr):void

glInvalidateFramebuffer(target:GLenum, numAttachments:GLsizei, attachments:const_GLenum_p:nil):void

glInvalidateSubFramebuffer(target:GLenum, numAttachments:GLsizei, attachments:const_GLenum_p:nil, x:GLint, y:GLint, width:GLsizei, height:GLsizei):void

glInvalidateTexImage(texture:GLuint, level:GLint):void

glInvalidateTexSubImage(texture:GLuint, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei):void

//======== GL_ARB_map_buffer_range ========

glFlushMappedBufferRange(target:GLenum, offset:GLintptr, length:GLsizeiptr):void

//glMapBufferRange(target:GLenum, offset:GLintptr, length:GLsizeiptr, access:GLbitfield):void *

//======== GL_ARB_matrix_palette ========

glCurrentPaletteMatrixARB(index:GLint):void

glMatrixIndexPointerARB(size:GLint, type:GLenum, stride:GLsizei, pointer:void_p):void

glMatrixIndexubvARB(size:GLint, indices:GLubyte_p:nil):void

glMatrixIndexuivARB(size:GLint, indices:GLuint_p:nil):void

glMatrixIndexusvARB(size:GLint, indices:GLushort_p:nil):void

//======== GL_ARB_multi_bind ========

glBindBuffersBase(target:GLenum, first:GLuint, count:GLsizei, buffers:const_GLuint_p:nil):void

glBindBuffersRange(target:GLenum, first:GLuint, count:GLsizei, buffers:const_GLuint_p:nil, offsets:const_GLintptr_p:nil, sizes:const_GLsizeiptr_p:nil):void

glBindImageTextures(first:GLuint, count:GLsizei, textures:const_GLuint_p:nil):void

glBindSamplers(first:GLuint, count:GLsizei, samplers:const_GLuint_p:nil):void

glBindTextures(first:GLuint, count:GLsizei, textures:const_GLuint_p:nil):void

glBindVertexBuffers(first:GLuint, count:GLsizei, buffers:const_GLuint_p:nil, offsets:const_GLintptr_p:nil, strides:const_GLsizei_p:nil):void

//======== GL_ARB_multi_draw_indirect ========

glMultiDrawArraysIndirect(mode:GLenum, indirect:const_void_p, primcount:GLsizei, stride:GLsizei):void

glMultiDrawElementsIndirect(mode:GLenum, type:GLenum, indirect:const_void_p, primcount:GLsizei, stride:GLsizei):void

//======== GL_ARB_multisample ========

glSampleCoverageARB(value:GLclampf, invert:GLboolean):void

//======== GL_ARB_multitexture ========

glActiveTextureARB(texture:GLenum):void

glClientActiveTextureARB(texture:GLenum):void

glMultiTexCoord1dARB(target:GLenum, s:GLdouble):void

glMultiTexCoord1dvARB(target:GLenum, v:const_GLdouble_p:nil):void

glMultiTexCoord1fARB(target:GLenum, s:GLfloat):void

glMultiTexCoord1fvARB(target:GLenum, v:const_GLfloat_p:nil):void

glMultiTexCoord1iARB(target:GLenum, s:GLint):void

glMultiTexCoord1ivARB(target:GLenum, v:const_GLint_p:nil):void

glMultiTexCoord1sARB(target:GLenum, s:GLshort):void

glMultiTexCoord1svARB(target:GLenum, v:const_GLshort_p:nil):void

glMultiTexCoord2dARB(target:GLenum, s:GLdouble, t:GLdouble):void

glMultiTexCoord2dvARB(target:GLenum, v:const_GLdouble_p:nil):void

glMultiTexCoord2fARB(target:GLenum, s:GLfloat, t:GLfloat):void

glMultiTexCoord2fvARB(target:GLenum, v:const_GLfloat_p:nil):void

glMultiTexCoord2iARB(target:GLenum, s:GLint, t:GLint):void

glMultiTexCoord2ivARB(target:GLenum, v:const_GLint_p:nil):void

glMultiTexCoord2sARB(target:GLenum, s:GLshort, t:GLshort):void

glMultiTexCoord2svARB(target:GLenum, v:const_GLshort_p:nil):void

glMultiTexCoord3dARB(target:GLenum, s:GLdouble, t:GLdouble, r:GLdouble):void

glMultiTexCoord3dvARB(target:GLenum, v:const_GLdouble_p:nil):void

glMultiTexCoord3fARB(target:GLenum, s:GLfloat, t:GLfloat, r:GLfloat):void

glMultiTexCoord3fvARB(target:GLenum, v:const_GLfloat_p:nil):void

glMultiTexCoord3iARB(target:GLenum, s:GLint, t:GLint, r:GLint):void

glMultiTexCoord3ivARB(target:GLenum, v:const_GLint_p:nil):void

glMultiTexCoord3sARB(target:GLenum, s:GLshort, t:GLshort, r:GLshort):void

glMultiTexCoord3svARB(target:GLenum, v:const_GLshort_p:nil):void

glMultiTexCoord4dARB(target:GLenum, s:GLdouble, t:GLdouble, r:GLdouble, q:GLdouble):void

glMultiTexCoord4dvARB(target:GLenum, v:const_GLdouble_p:nil):void

glMultiTexCoord4fARB(target:GLenum, s:GLfloat, t:GLfloat, r:GLfloat, q:GLfloat):void

glMultiTexCoord4fvARB(target:GLenum, v:const_GLfloat_p:nil):void

glMultiTexCoord4iARB(target:GLenum, s:GLint, t:GLint, r:GLint, q:GLint):void

glMultiTexCoord4ivARB(target:GLenum, v:const_GLint_p:nil):void

glMultiTexCoord4sARB(target:GLenum, s:GLshort, t:GLshort, r:GLshort, q:GLshort):void

glMultiTexCoord4svARB(target:GLenum, v:const_GLshort_p:nil):void

//======== GL_ARB_occlusion_query ========

glBeginQueryARB(target:GLenum, id:GLuint):void

glDeleteQueriesARB(n:GLsizei, ids:const_GLuint_p:nil):void

glEndQueryARB(target:GLenum):void

glGenQueriesARB(n:GLsizei, ids:GLuint_p:nil):void

glGetQueryObjectivARB(id:GLuint, pname:GLenum, params:GLint_p:nil):void

glGetQueryObjectuivARB(id:GLuint, pname:GLenum, params:GLuint_p:nil):void

glGetQueryivARB(target:GLenum, pname:GLenum, params:GLint_p:nil):void

glIsQueryARB(id:GLuint):GLboolean

//======== GL_ARB_parallel_shader_compile ========

glMaxShaderCompilerThreadsARB(count:GLuint):void

//======== GL_ARB_point_parameters ========

glPointParameterfARB(pname:GLenum, param:GLfloat):void

glPointParameterfvARB(pname:GLenum, params:const_GLfloat_p:nil):void

//======== GL_ARB_polygon_offset_clamp ========

glPolygonOffsetClamp(factor:GLfloat, units:GLfloat, clamp:GLfloat):void

//======== GL_ARB_program_interface_query ========

glGetProgramInterfaceiv(program:GLuint, programInterface:GLenum, pname:GLenum, params:GLint_p:nil):void

glGetProgramResourceIndex(program:GLuint, programInterface:GLenum, name:String_const_GLchar_p):GLuint

glGetProgramResourceLocation(program:GLuint, programInterface:GLenum, name:String_const_GLchar_p):GLint

glGetProgramResourceLocationIndex(program:GLuint, programInterface:GLenum, name:String_const_GLchar_p):GLint

glGetProgramResourceName(program:GLuint, programInterface:GLenum, index:GLuint, bufSize:GLsizei, length:GLsizei_p:nil, name:GLchar_p:nil):void

glGetProgramResourceiv(program:GLuint, programInterface:GLenum, index:GLuint, propCount:GLsizei, props:const_GLenum_p:nil, bufSize:GLsizei, length:GLsizei_p:nil, params:GLint_p:nil):void

//======== GL_ARB_provoking_vertex ========

glProvokingVertex(mode:GLenum):void

//======== GL_ARB_robustness ========

glGetGraphicsResetStatusARB():GLenum

glGetnColorTableARB(target:GLenum, format:GLenum, type:GLenum, bufSize:GLsizei, table:void_p):void

glGetnCompressedTexImageARB(target:GLenum, lod:GLint, bufSize:GLsizei, img:void_p):void

glGetnConvolutionFilterARB(target:GLenum, format:GLenum, type:GLenum, bufSize:GLsizei, image:void_p):void

glGetnHistogramARB(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, bufSize:GLsizei, values:void_p):void

glGetnMapdvARB(target:GLenum, query:GLenum, bufSize:GLsizei, v:GLdouble_p:nil):void

glGetnMapfvARB(target:GLenum, query:GLenum, bufSize:GLsizei, v:GLfloat_p:nil):void

glGetnMapivARB(target:GLenum, query:GLenum, bufSize:GLsizei, v:GLint_p:nil):void

glGetnMinmaxARB(target:GLenum, reset:GLboolean, format:GLenum, type:GLenum, bufSize:GLsizei, values:void_p):void

glGetnPixelMapfvARB(map:GLenum, bufSize:GLsizei, values:GLfloat_p:nil):void

glGetnPixelMapuivARB(map:GLenum, bufSize:GLsizei, values:GLuint_p:nil):void

glGetnPixelMapusvARB(map:GLenum, bufSize:GLsizei, values:GLushort_p:nil):void

glGetnPolygonStippleARB(bufSize:GLsizei, pattern:GLubyte_p:nil):void

//glGetnSeparableFilterARB(target:GLenum, format:GLenum, type:GLenum, rowBufSize:GLsizei, row:void_p, columnBufSize:GLsizei, , ):void

glGetnTexImageARB(target:GLenum, level:GLint, format:GLenum, type:GLenum, bufSize:GLsizei, img:void_p):void

glGetnUniformdvARB(program:GLuint, location:GLint, bufSize:GLsizei, params:GLdouble_p:nil):void

glGetnUniformfvARB(program:GLuint, location:GLint, bufSize:GLsizei, params:GLfloat_p:nil):void

glGetnUniformivARB(program:GLuint, location:GLint, bufSize:GLsizei, params:GLint_p:nil):void

glGetnUniformuivARB(program:GLuint, location:GLint, bufSize:GLsizei, params:GLuint_p:nil):void

glReadnPixelsARB(x:GLint, y:GLint, width:GLsizei, height:GLsizei, format:GLenum, type:GLenum, bufSize:GLsizei, data:void_p):void

//======== GL_ARB_sample_locations ========

glFramebufferSampleLocationsfvARB(target:GLenum, start:GLuint, count:GLsizei, v:const_GLfloat_p:nil):void

glNamedFramebufferSampleLocationsfvARB(framebuffer:GLuint, start:GLuint, count:GLsizei, v:const_GLfloat_p:nil):void

//======== GL_ARB_sample_shading ========

glMinSampleShadingARB(value:GLclampf):void

//======== GL_ARB_sampler_objects ========

glBindSampler(unit:GLuint, sampler:GLuint):void

glDeleteSamplers(count:GLsizei, samplers:const_GLuint_p:nil):void

glGenSamplers(count:GLsizei, samplers:GLuint_p:nil):void

glGetSamplerParameterIiv(sampler:GLuint, pname:GLenum, params:GLint_p:nil):void

glGetSamplerParameterIuiv(sampler:GLuint, pname:GLenum, params:GLuint_p:nil):void

glGetSamplerParameterfv(sampler:GLuint, pname:GLenum, params:GLfloat_p:nil):void

glGetSamplerParameteriv(sampler:GLuint, pname:GLenum, params:GLint_p:nil):void

glIsSampler(sampler:GLuint):GLboolean

glSamplerParameterIiv(sampler:GLuint, pname:GLenum, params:const_GLint_p:nil):void

glSamplerParameterIuiv(sampler:GLuint, pname:GLenum, params:const_GLuint_p:nil):void

glSamplerParameterf(sampler:GLuint, pname:GLenum, param:GLfloat):void

glSamplerParameterfv(sampler:GLuint, pname:GLenum, params:const_GLfloat_p:nil):void

glSamplerParameteri(sampler:GLuint, pname:GLenum, param:GLint):void

glSamplerParameteriv(sampler:GLuint, pname:GLenum, params:const_GLint_p:nil):void

//======== GL_ARB_separate_shader_objects ========

glActiveShaderProgram(pipeline:GLuint, program:GLuint):void

glBindProgramPipeline(pipeline:GLuint):void

//glCreateShaderProgramv(type:GLenum, count:GLsizei, strings:const_GLchar_p_const_p:nil):GLuint

glDeleteProgramPipelines(n:GLsizei, pipelines:const_GLuint_p:nil):void

glGenProgramPipelines(n:GLsizei, pipelines:GLuint_p:nil):void

glGetProgramPipelineInfoLog(pipeline:GLuint, bufSize:GLsizei, length:GLsizei_p:nil, infoLog:GLchar_p:nil):void

glGetProgramPipelineiv(pipeline:GLuint, pname:GLenum, params:GLint_p:nil):void

glIsProgramPipeline(pipeline:GLuint):GLboolean

glProgramUniform1d(program:GLuint, location:GLint, x:GLdouble):void

glProgramUniform1dv(program:GLuint, location:GLint, count:GLsizei, value:const_GLdouble_p:nil):void

glProgramUniform1f(program:GLuint, location:GLint, x:GLfloat):void

glProgramUniform1fv(program:GLuint, location:GLint, count:GLsizei, value:const_GLfloat_p:nil):void

glProgramUniform1i(program:GLuint, location:GLint, x:GLint):void

glProgramUniform1iv(program:GLuint, location:GLint, count:GLsizei, value:const_GLint_p:nil):void

glProgramUniform1ui(program:GLuint, location:GLint, x:GLuint):void

glProgramUniform1uiv(program:GLuint, location:GLint, count:GLsizei, value:const_GLuint_p:nil):void

glProgramUniform2d(program:GLuint, location:GLint, x:GLdouble, y:GLdouble):void

glProgramUniform2dv(program:GLuint, location:GLint, count:GLsizei, value:const_GLdouble_p:nil):void

glProgramUniform2f(program:GLuint, location:GLint, x:GLfloat, y:GLfloat):void

glProgramUniform2fv(program:GLuint, location:GLint, count:GLsizei, value:const_GLfloat_p:nil):void

glProgramUniform2i(program:GLuint, location:GLint, x:GLint, y:GLint):void

glProgramUniform2iv(program:GLuint, location:GLint, count:GLsizei, value:const_GLint_p:nil):void

glProgramUniform2ui(program:GLuint, location:GLint, x:GLuint, y:GLuint):void

glProgramUniform2uiv(program:GLuint, location:GLint, count:GLsizei, value:const_GLuint_p:nil):void

glProgramUniform3d(program:GLuint, location:GLint, x:GLdouble, y:GLdouble, z:GLdouble):void

glProgramUniform3dv(program:GLuint, location:GLint, count:GLsizei, value:const_GLdouble_p:nil):void

glProgramUniform3f(program:GLuint, location:GLint, x:GLfloat, y:GLfloat, z:GLfloat):void

glProgramUniform3fv(program:GLuint, location:GLint, count:GLsizei, value:const_GLfloat_p:nil):void

glProgramUniform3i(program:GLuint, location:GLint, x:GLint, y:GLint, z:GLint):void

glProgramUniform3iv(program:GLuint, location:GLint, count:GLsizei, value:const_GLint_p:nil):void

glProgramUniform3ui(program:GLuint, location:GLint, x:GLuint, y:GLuint, z:GLuint):void

glProgramUniform3uiv(program:GLuint, location:GLint, count:GLsizei, value:const_GLuint_p:nil):void

glProgramUniform4d(program:GLuint, location:GLint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble):void

glProgramUniform4dv(program:GLuint, location:GLint, count:GLsizei, value:const_GLdouble_p:nil):void

glProgramUniform4f(program:GLuint, location:GLint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat):void

glProgramUniform4fv(program:GLuint, location:GLint, count:GLsizei, value:const_GLfloat_p:nil):void

glProgramUniform4i(program:GLuint, location:GLint, x:GLint, y:GLint, z:GLint, w:GLint):void

glProgramUniform4iv(program:GLuint, location:GLint, count:GLsizei, value:const_GLint_p:nil):void

glProgramUniform4ui(program:GLuint, location:GLint, x:GLuint, y:GLuint, z:GLuint, w:GLuint):void

glProgramUniform4uiv(program:GLuint, location:GLint, count:GLsizei, value:const_GLuint_p:nil):void

glProgramUniformMatrix2dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glProgramUniformMatrix2fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glProgramUniformMatrix2x3dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glProgramUniformMatrix2x3fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glProgramUniformMatrix2x4dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glProgramUniformMatrix2x4fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glProgramUniformMatrix3dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glProgramUniformMatrix3fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glProgramUniformMatrix3x2dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glProgramUniformMatrix3x2fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glProgramUniformMatrix3x4dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glProgramUniformMatrix3x4fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glProgramUniformMatrix4dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glProgramUniformMatrix4fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glProgramUniformMatrix4x2dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glProgramUniformMatrix4x2fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glProgramUniformMatrix4x3dv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLdouble_p:nil):void

glProgramUniformMatrix4x3fv(program:GLuint, location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glUseProgramStages(pipeline:GLuint, stages:GLbitfield, program:GLuint):void

glValidateProgramPipeline(pipeline:GLuint):void

//======== GL_ARB_shader_atomic_counters ========

glGetActiveAtomicCounterBufferiv(program:GLuint, bufferIndex:GLuint, pname:GLenum, params:GLint_p:nil):void

//======== GL_ARB_shader_image_load_store ========

glBindImageTexture(unit:GLuint, texture:GLuint, level:GLint, layered:GLboolean, layer:GLint, access:GLenum, format:GLenum):void

glMemoryBarrier(barriers:GLbitfield):void

//======== GL_ARB_shader_objects ========

//glAttachObjectARB(containerObj:GLhandleARB, obj:GLhandleARB):void

//glCompileShaderARB(shaderObj:GLhandleARB):void

//glCreateProgramObjectARB():GLhandleARB

//glCreateShaderObjectARB(shaderType:GLenum):GLhandleARB

//glDeleteObjectARB(obj:GLhandleARB):void

//glDetachObjectARB(containerObj:GLhandleARB, attachedObj:GLhandleARB):void

//glGetActiveUniformARB(programObj:GLhandleARB, index:GLuint, maxLength:GLsizei, length:GLsizei_p:nil, size:GLint_p:nil, type:GLenum_p:nil, name:GLcharARB_p:nil):void

//glGetAttachedObjectsARB(containerObj:GLhandleARB, maxCount:GLsizei, count:GLsizei_p:nil, obj:GLhandleARB_p:nil):void

//glGetHandleARB(pname:GLenum):GLhandleARB

//glGetInfoLogARB(obj:GLhandleARB, maxLength:GLsizei, length:GLsizei_p:nil, infoLog:GLcharARB_p:nil):void

//glGetObjectParameterfvARB(obj:GLhandleARB, pname:GLenum, params:GLfloat_p:nil):void

//glGetObjectParameterivARB(obj:GLhandleARB, pname:GLenum, params:GLint_p:nil):void

//glGetShaderSourceARB(obj:GLhandleARB, maxLength:GLsizei, length:GLsizei_p:nil, source:GLcharARB_p:nil):void

//glGetUniformLocationARB(programObj:GLhandleARB, name:const_GLcharARB_p:nil):GLint

//glGetUniformfvARB(programObj:GLhandleARB, location:GLint, params:GLfloat_p:nil):void

//glGetUniformivARB(programObj:GLhandleARB, location:GLint, params:GLint_p:nil):void

//glLinkProgramARB(programObj:GLhandleARB):void

//glShaderSourceARB(shaderObj:GLhandleARB, count:GLsizei, string:const_GLcharARB_p__p:nil, length:const_GLint_p:nil):void

glUniform1fARB(location:GLint, v0:GLfloat):void

glUniform1fvARB(location:GLint, count:GLsizei, value:const_GLfloat_p:nil):void

glUniform1iARB(location:GLint, v0:GLint):void

glUniform1ivARB(location:GLint, count:GLsizei, value:const_GLint_p:nil):void

glUniform2fARB(location:GLint, v0:GLfloat, v1:GLfloat):void

glUniform2fvARB(location:GLint, count:GLsizei, value:const_GLfloat_p:nil):void

glUniform2iARB(location:GLint, v0:GLint, v1:GLint):void

glUniform2ivARB(location:GLint, count:GLsizei, value:const_GLint_p:nil):void

glUniform3fARB(location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat):void

glUniform3fvARB(location:GLint, count:GLsizei, value:const_GLfloat_p:nil):void

glUniform3iARB(location:GLint, v0:GLint, v1:GLint, v2:GLint):void

glUniform3ivARB(location:GLint, count:GLsizei, value:const_GLint_p:nil):void

glUniform4fARB(location:GLint, v0:GLfloat, v1:GLfloat, v2:GLfloat, v3:GLfloat):void

glUniform4fvARB(location:GLint, count:GLsizei, value:const_GLfloat_p:nil):void

glUniform4iARB(location:GLint, v0:GLint, v1:GLint, v2:GLint, v3:GLint):void

glUniform4ivARB(location:GLint, count:GLsizei, value:const_GLint_p:nil):void

glUniformMatrix2fvARB(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glUniformMatrix3fvARB(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

glUniformMatrix4fvARB(location:GLint, count:GLsizei, transpose:GLboolean, value:const_GLfloat_p:nil):void

//glUseProgramObjectARB(programObj:GLhandleARB):void

//glValidateProgramARB(programObj:GLhandleARB):void

//======== GL_ARB_shader_storage_buffer_object ========

glShaderStorageBlockBinding(program:GLuint, storageBlockIndex:GLuint, storageBlockBinding:GLuint):void

//======== GL_ARB_shader_subroutine ========

glGetActiveSubroutineName(program:GLuint, shadertype:GLenum, index:GLuint, bufsize:GLsizei, length:GLsizei_p:nil, name:GLchar_p:nil):void

glGetActiveSubroutineUniformName(program:GLuint, shadertype:GLenum, index:GLuint, bufsize:GLsizei, length:GLsizei_p:nil, name:GLchar_p:nil):void

glGetActiveSubroutineUniformiv(program:GLuint, shadertype:GLenum, index:GLuint, pname:GLenum, values:GLint_p:nil):void

glGetProgramStageiv(program:GLuint, shadertype:GLenum, pname:GLenum, values:GLint_p:nil):void

glGetSubroutineIndex(program:GLuint, shadertype:GLenum, name:const_GLchar_p:nil):GLuint

glGetSubroutineUniformLocation(program:GLuint, shadertype:GLenum, name:const_GLchar_p:nil):GLint

glGetUniformSubroutineuiv(shadertype:GLenum, location:GLint, params:GLuint_p:nil):void

glUniformSubroutinesuiv(shadertype:GLenum, count:GLsizei, indices:const_GLuint_p:nil):void

//======== GL_ARB_shading_language_include ========

//glCompileShaderIncludeARB(shader:GLuint, count:GLsizei, path:const_GLchar_p_const_p:nil, length:const_GLint_p:nil):void

glDeleteNamedStringARB(namelen:GLint, name:String_const_GLchar_p):void

glGetNamedStringARB(namelen:GLint, name:String_const_GLchar_p, bufSize:GLsizei, stringlen:GLint_p:nil, string:GLchar_p:nil):void

glGetNamedStringivARB(namelen:GLint, name:String_const_GLchar_p, pname:GLenum, params:GLint_p:nil):void

glIsNamedStringARB(namelen:GLint, name:String_const_GLchar_p):GLboolean

glNamedStringARB(type:GLenum, namelen:GLint, name:String_const_GLchar_p, stringlen:GLint, string:const_GLchar_p:nil):void

//======== GL_ARB_sparse_buffer ========

glBufferPageCommitmentARB(target:GLenum, offset:GLintptr, size:GLsizeiptr, commit:GLboolean):void

//======== GL_ARB_sparse_texture ========

glTexPageCommitmentARB(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, commit:GLboolean):void

//======== GL_ARB_sync ========

//glClientWaitSync(GLsync:GLsync, flags:GLbitfield, timeout:GLuint64):GLenum

//glDeleteSync(GLsync:GLsync):void

//glFenceSync(condition:GLenum, flags:GLbitfield):GLsync

glGetInteger64v(pname:GLenum, params:GLint64_p:nil):void

//glGetSynciv(GLsync:GLsync, pname:GLenum, bufSize:GLsizei, length:GLsizei_p:nil, values:GLint_p:nil):void

//glIsSync(GLsync:GLsync):GLboolean

//glWaitSync(GLsync:GLsync, flags:GLbitfield, timeout:GLuint64):void

//======== GL_ARB_tessellation_shader ========

glPatchParameterfv(pname:GLenum, values:const_GLfloat_p:nil):void

glPatchParameteri(pname:GLenum, value:GLint):void

//======== GL_ARB_texture_barrier ========

glTextureBarrier():void

//======== GL_ARB_texture_buffer_object ========

glTexBufferARB(target:GLenum, internalformat:GLenum, buffer:GLuint):void

//======== GL_ARB_texture_buffer_range ========

glTexBufferRange(target:GLenum, internalformat:GLenum, buffer:GLuint, offset:GLintptr, size:GLsizeiptr):void

glTextureBufferRangeEXT(texture:GLuint, target:GLenum, internalformat:GLenum, buffer:GLuint, offset:GLintptr, size:GLsizeiptr):void

//======== GL_ARB_texture_compression ========

glCompressedTexImage1DARB(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, border:GLint, imageSize:GLsizei, data:const_void_p):void

glCompressedTexImage2DARB(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, border:GLint, imageSize:GLsizei, data:const_void_p):void

glCompressedTexImage3DARB(target:GLenum, level:GLint, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, border:GLint, imageSize:GLsizei, data:const_void_p):void

glCompressedTexSubImage1DARB(target:GLenum, level:GLint, xoffset:GLint, width:GLsizei, format:GLenum, imageSize:GLsizei, data:const_void_p):void

glCompressedTexSubImage2DARB(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, width:GLsizei, height:GLsizei, format:GLenum, imageSize:GLsizei, data:const_void_p):void

glCompressedTexSubImage3DARB(target:GLenum, level:GLint, xoffset:GLint, yoffset:GLint, zoffset:GLint, width:GLsizei, height:GLsizei, depth:GLsizei, format:GLenum, imageSize:GLsizei, data:const_void_p):void

glGetCompressedTexImageARB(target:GLenum, lod:GLint, img:void_p):void

//======== GL_ARB_texture_multisample ========

glGetMultisamplefv(pname:GLenum, index:GLuint, val:GLfloat_p:nil):void

glSampleMaski(index:GLuint, mask:GLbitfield):void

glTexImage2DMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, fixedsamplelocations:GLboolean):void

glTexImage3DMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, fixedsamplelocations:GLboolean):void

//======== GL_ARB_texture_storage ========

glTexStorage1D(target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei):void

glTexStorage2D(target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei):void

glTexStorage3D(target:GLenum, levels:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei):void

//======== GL_ARB_texture_storage_multisample ========

glTexStorage2DMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, fixedsamplelocations:GLboolean):void

glTexStorage3DMultisample(target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, fixedsamplelocations:GLboolean):void

glTextureStorage2DMultisampleEXT(texture:GLuint, target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, fixedsamplelocations:GLboolean):void

glTextureStorage3DMultisampleEXT(texture:GLuint, target:GLenum, samples:GLsizei, internalformat:GLenum, width:GLsizei, height:GLsizei, depth:GLsizei, fixedsamplelocations:GLboolean):void

//======== GL_ARB_texture_view ========

glTextureView(texture:GLuint, target:GLenum, origtexture:GLuint, internalformat:GLenum, minlevel:GLuint, numlevels:GLuint, minlayer:GLuint, numlayers:GLuint):void

//======== GL_ARB_timer_query ========

glGetQueryObjecti64v(id:GLuint, pname:GLenum, params:GLint64_p:nil):void

glGetQueryObjectui64v(id:GLuint, pname:GLenum, params:GLuint64_p:nil):void

glQueryCounter(id:GLuint, target:GLenum):void

//======== GL_ARB_transform_feedback2 ========

glBindTransformFeedback(target:GLenum, id:GLuint):void

glDeleteTransformFeedbacks(n:GLsizei, ids:const_GLuint_p:nil):void

glDrawTransformFeedback(mode:GLenum, id:GLuint):void

glGenTransformFeedbacks(n:GLsizei, ids:GLuint_p:nil):void

glIsTransformFeedback(id:GLuint):GLboolean

glPauseTransformFeedback():void

glResumeTransformFeedback():void

//======== GL_ARB_transform_feedback3 ========

glBeginQueryIndexed(target:GLenum, index:GLuint, id:GLuint):void

glDrawTransformFeedbackStream(mode:GLenum, id:GLuint, stream:GLuint):void

glEndQueryIndexed(target:GLenum, index:GLuint):void

glGetQueryIndexediv(target:GLenum, index:GLuint, pname:GLenum, params:GLint_p:nil):void

//======== GL_ARB_transform_feedback_instanced ========

glDrawTransformFeedbackInstanced(mode:GLenum, id:GLuint, primcount:GLsizei):void

glDrawTransformFeedbackStreamInstanced(mode:GLenum, id:GLuint, stream:GLuint, primcount:GLsizei):void

//======== GL_ARB_transpose_matrix ========

//glLoadTransposeMatrixdARB(m[16]:GLdouble):void

//glLoadTransposeMatrixfARB(m[16]:GLfloat):void

//glMultTransposeMatrixdARB(m[16]:GLdouble):void

//glMultTransposeMatrixfARB(m[16]:GLfloat):void

//======== GL_ARB_uniform_buffer_object ========

glBindBufferBase(target:GLenum, index:GLuint, buffer:GLuint):void

glBindBufferRange(target:GLenum, index:GLuint, buffer:GLuint, offset:GLintptr, size:GLsizeiptr):void

glGetActiveUniformBlockName(program:GLuint, uniformBlockIndex:GLuint, bufSize:GLsizei, length:GLsizei_p:nil, uniformBlockName:GLchar_p:nil):void

glGetActiveUniformBlockiv(program:GLuint, uniformBlockIndex:GLuint, pname:GLenum, params:GLint_p:nil):void

glGetActiveUniformName(program:GLuint, uniformIndex:GLuint, bufSize:GLsizei, length:GLsizei_p:nil, uniformName:GLchar_p:nil):void

glGetActiveUniformsiv(program:GLuint, uniformCount:GLsizei, uniformIndices:const_GLuint_p:nil, pname:GLenum, params:GLint_p:nil):void

glGetIntegeri_v(target:GLenum, index:GLuint, data:GLint_p:nil):void

glGetUniformBlockIndex(program:GLuint, uniformBlockName:String_const_GLchar_p):GLuint

//glGetUniformIndices(program:GLuint, uniformCount:GLsizei, uniformNames:const_GLchar_p_const_p:nil, uniformIndices:GLuint_p:nil):void

glUniformBlockBinding(program:GLuint, uniformBlockIndex:GLuint, uniformBlockBinding:GLuint):void

//======== GL_ARB_vertex_array_object ========

glBindVertexArray(array:GLuint):void

glDeleteVertexArrays(n:GLsizei, arrays:const_GLuint_p:nil):void

glGenVertexArrays(n:GLsizei, arrays:GLuint_p:nil):void

glIsVertexArray(array:GLuint):GLboolean

//======== GL_ARB_vertex_attrib_64bit ========

glGetVertexAttribLdv(index:GLuint, pname:GLenum, params:GLdouble_p:nil):void

glVertexAttribL1d(index:GLuint, x:GLdouble):void

glVertexAttribL1dv(index:GLuint, v:const_GLdouble_p:nil):void

glVertexAttribL2d(index:GLuint, x:GLdouble, y:GLdouble):void

glVertexAttribL2dv(index:GLuint, v:const_GLdouble_p:nil):void

glVertexAttribL3d(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble):void

glVertexAttribL3dv(index:GLuint, v:const_GLdouble_p:nil):void

glVertexAttribL4d(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble):void

glVertexAttribL4dv(index:GLuint, v:const_GLdouble_p:nil):void

glVertexAttribLPointer(index:GLuint, size:GLint, type:GLenum, stride:GLsizei, pointer:const_void_p):void

//======== GL_ARB_vertex_attrib_binding ========

glBindVertexBuffer(bindingindex:GLuint, buffer:GLuint, offset:GLintptr, stride:GLsizei):void

glVertexArrayBindVertexBufferEXT(vaobj:GLuint, bindingindex:GLuint, buffer:GLuint, offset:GLintptr, stride:GLsizei):void

glVertexArrayVertexAttribBindingEXT(vaobj:GLuint, attribindex:GLuint, bindingindex:GLuint):void

glVertexArrayVertexAttribFormatEXT(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, normalized:GLboolean, relativeoffset:GLuint):void

glVertexArrayVertexAttribIFormatEXT(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint):void

glVertexArrayVertexAttribLFormatEXT(vaobj:GLuint, attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint):void

glVertexArrayVertexBindingDivisorEXT(vaobj:GLuint, bindingindex:GLuint, divisor:GLuint):void

glVertexAttribBinding(attribindex:GLuint, bindingindex:GLuint):void

glVertexAttribFormat(attribindex:GLuint, size:GLint, type:GLenum, normalized:GLboolean, relativeoffset:GLuint):void

glVertexAttribIFormat(attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint):void

glVertexAttribLFormat(attribindex:GLuint, size:GLint, type:GLenum, relativeoffset:GLuint):void

glVertexBindingDivisor(bindingindex:GLuint, divisor:GLuint):void

//======== GL_ARB_vertex_blend ========

glVertexBlendARB(count:GLint):void

glWeightPointerARB(size:GLint, type:GLenum, stride:GLsizei, pointer:void_p):void

glWeightbvARB(size:GLint, weights:GLbyte_p:nil):void

glWeightdvARB(size:GLint, weights:GLdouble_p:nil):void

glWeightfvARB(size:GLint, weights:GLfloat_p:nil):void

glWeightivARB(size:GLint, weights:GLint_p:nil):void

glWeightsvARB(size:GLint, weights:GLshort_p:nil):void

glWeightubvARB(size:GLint, weights:GLubyte_p:nil):void

glWeightuivARB(size:GLint, weights:GLuint_p:nil):void

glWeightusvARB(size:GLint, weights:GLushort_p:nil):void

//======== GL_ARB_vertex_buffer_object ========

glBindBufferARB(target:GLenum, buffer:GLuint):void

//glBufferDataARB(target:GLenum, size:GLsizeiptrARB, data:const_void_p, usage:GLenum):void

//glBufferSubDataARB(target:GLenum, offset:GLintptrARB, size:GLsizeiptrARB, data:const_void_p):void

glDeleteBuffersARB(n:GLsizei, buffers:const_GLuint_p:nil):void

glGenBuffersARB(n:GLsizei, buffers:GLuint_p:nil):void

glGetBufferParameterivARB(target:GLenum, pname:GLenum, params:GLint_p:nil):void

//glGetBufferPointervARB(target:GLenum, pname:GLenum, params:void_p__p):void

//glGetBufferSubDataARB(target:GLenum, offset:GLintptrARB, size:GLsizeiptrARB, data:void_p):void

glIsBufferARB(buffer:GLuint):GLboolean

//glMapBufferARB(target:GLenum, access:GLenum):void *

glUnmapBufferARB(target:GLenum):GLboolean

//======== GL_ARB_vertex_program ========

glBindProgramARB(target:GLenum, program:GLuint):void

glDeleteProgramsARB(n:GLsizei, programs:const_GLuint_p:nil):void

glDisableVertexAttribArrayARB(index:GLuint):void

glEnableVertexAttribArrayARB(index:GLuint):void

glGenProgramsARB(n:GLsizei, programs:GLuint_p:nil):void

glGetProgramEnvParameterdvARB(target:GLenum, index:GLuint, params:GLdouble_p:nil):void

glGetProgramEnvParameterfvARB(target:GLenum, index:GLuint, params:GLfloat_p:nil):void

glGetProgramLocalParameterdvARB(target:GLenum, index:GLuint, params:GLdouble_p:nil):void

glGetProgramLocalParameterfvARB(target:GLenum, index:GLuint, params:GLfloat_p:nil):void

glGetProgramStringARB(target:GLenum, pname:GLenum, string:void_p):void

glGetProgramivARB(target:GLenum, pname:GLenum, params:GLint_p:nil):void

//glGetVertexAttribPointervARB(index:GLuint, pname:GLenum, pointer:void_p__p):void

glGetVertexAttribdvARB(index:GLuint, pname:GLenum, params:GLdouble_p:nil):void

glGetVertexAttribfvARB(index:GLuint, pname:GLenum, params:GLfloat_p:nil):void

glGetVertexAttribivARB(index:GLuint, pname:GLenum, params:GLint_p:nil):void

glIsProgramARB(program:GLuint):GLboolean

glProgramEnvParameter4dARB(target:GLenum, index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble):void

glProgramEnvParameter4dvARB(target:GLenum, index:GLuint, params:const_GLdouble_p:nil):void

glProgramEnvParameter4fARB(target:GLenum, index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat):void

glProgramEnvParameter4fvARB(target:GLenum, index:GLuint, params:const_GLfloat_p:nil):void

glProgramLocalParameter4dARB(target:GLenum, index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble):void

glProgramLocalParameter4dvARB(target:GLenum, index:GLuint, params:const_GLdouble_p:nil):void

glProgramLocalParameter4fARB(target:GLenum, index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat):void

glProgramLocalParameter4fvARB(target:GLenum, index:GLuint, params:const_GLfloat_p:nil):void

glProgramStringARB(target:GLenum, format:GLenum, len:GLsizei, string:const_void_p):void

glVertexAttrib1dARB(index:GLuint, x:GLdouble):void

glVertexAttrib1dvARB(index:GLuint, v:const_GLdouble_p:nil):void

glVertexAttrib1fARB(index:GLuint, x:GLfloat):void

glVertexAttrib1fvARB(index:GLuint, v:const_GLfloat_p:nil):void

glVertexAttrib1sARB(index:GLuint, x:GLshort):void

glVertexAttrib1svARB(index:GLuint, v:const_GLshort_p:nil):void

glVertexAttrib2dARB(index:GLuint, x:GLdouble, y:GLdouble):void

glVertexAttrib2dvARB(index:GLuint, v:const_GLdouble_p:nil):void

glVertexAttrib2fARB(index:GLuint, x:GLfloat, y:GLfloat):void

glVertexAttrib2fvARB(index:GLuint, v:const_GLfloat_p:nil):void

glVertexAttrib2sARB(index:GLuint, x:GLshort, y:GLshort):void

glVertexAttrib2svARB(index:GLuint, v:const_GLshort_p:nil):void

glVertexAttrib3dARB(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble):void

glVertexAttrib3dvARB(index:GLuint, v:const_GLdouble_p:nil):void

glVertexAttrib3fARB(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat):void

glVertexAttrib3fvARB(index:GLuint, v:const_GLfloat_p:nil):void

glVertexAttrib3sARB(index:GLuint, x:GLshort, y:GLshort, z:GLshort):void

glVertexAttrib3svARB(index:GLuint, v:const_GLshort_p:nil):void

glVertexAttrib4NbvARB(index:GLuint, v:const_GLbyte_p:nil):void

glVertexAttrib4NivARB(index:GLuint, v:const_GLint_p:nil):void

glVertexAttrib4NsvARB(index:GLuint, v:const_GLshort_p:nil):void

glVertexAttrib4NubARB(index:GLuint, x:GLubyte, y:GLubyte, z:GLubyte, w:GLubyte):void

glVertexAttrib4NubvARB(index:GLuint, v:const_GLubyte_p:nil):void

glVertexAttrib4NuivARB(index:GLuint, v:const_GLuint_p:nil):void

glVertexAttrib4NusvARB(index:GLuint, v:const_GLushort_p:nil):void

glVertexAttrib4bvARB(index:GLuint, v:const_GLbyte_p:nil):void

glVertexAttrib4dARB(index:GLuint, x:GLdouble, y:GLdouble, z:GLdouble, w:GLdouble):void

glVertexAttrib4dvARB(index:GLuint, v:const_GLdouble_p:nil):void

glVertexAttrib4fARB(index:GLuint, x:GLfloat, y:GLfloat, z:GLfloat, w:GLfloat):void

glVertexAttrib4fvARB(index:GLuint, v:const_GLfloat_p:nil):void

glVertexAttrib4ivARB(index:GLuint, v:const_GLint_p:nil):void

glVertexAttrib4sARB(index:GLuint, x:GLshort, y:GLshort, z:GLshort, w:GLshort):void

glVertexAttrib4svARB(index:GLuint, v:const_GLshort_p:nil):void

glVertexAttrib4ubvARB(index:GLuint, v:const_GLubyte_p:nil):void

glVertexAttrib4uivARB(index:GLuint, v:const_GLuint_p:nil):void

glVertexAttrib4usvARB(index:GLuint, v:const_GLushort_p:nil):void

glVertexAttribPointerARB(index:GLuint, size:GLint, type:GLenum, normalized:GLboolean, stride:GLsizei, pointer:const_void_p):void

//======== GL_ARB_vertex_shader ========

//glBindAttribLocationARB(programObj:GLhandleARB, index:GLuint, name:String_const_GLcharARB_p):void

//glGetActiveAttribARB(programObj:GLhandleARB, index:GLuint, maxLength:GLsizei, length:GLsizei_p:nil, size:GLint_p:nil, type:GLenum_p:nil, name:GLcharARB_p:nil):void

//glGetAttribLocationARB(programObj:GLhandleARB, name:String_const_GLcharARB_p):GLint

//======== GL_ARB_vertex_type_2_10_10_10_rev ========

glColorP3ui(type:GLenum, color:GLuint):void

glColorP3uiv(type:GLenum, color:const_GLuint_p:nil):void

glColorP4ui(type:GLenum, color:GLuint):void

glColorP4uiv(type:GLenum, color:const_GLuint_p:nil):void

glMultiTexCoordP1ui(texture:GLenum, type:GLenum, coords:GLuint):void

glMultiTexCoordP1uiv(texture:GLenum, type:GLenum, coords:const_GLuint_p:nil):void

glMultiTexCoordP2ui(texture:GLenum, type:GLenum, coords:GLuint):void

glMultiTexCoordP2uiv(texture:GLenum, type:GLenum, coords:const_GLuint_p:nil):void

glMultiTexCoordP3ui(texture:GLenum, type:GLenum, coords:GLuint):void

glMultiTexCoordP3uiv(texture:GLenum, type:GLenum, coords:const_GLuint_p:nil):void

glMultiTexCoordP4ui(texture:GLenum, type:GLenum, coords:GLuint):void

glMultiTexCoordP4uiv(texture:GLenum, type:GLenum, coords:const_GLuint_p:nil):void

glNormalP3ui(type:GLenum, coords:GLuint):void

glNormalP3uiv(type:GLenum, coords:const_GLuint_p:nil):void

glSecondaryColorP3ui(type:GLenum, color:GLuint):void

glSecondaryColorP3uiv(type:GLenum, color:const_GLuint_p:nil):void

glTexCoordP1ui(type:GLenum, coords:GLuint):void

glTexCoordP1uiv(type:GLenum, coords:const_GLuint_p:nil):void

glTexCoordP2ui(type:GLenum, coords:GLuint):void

glTexCoordP2uiv(type:GLenum, coords:const_GLuint_p:nil):void

glTexCoordP3ui(type:GLenum, coords:GLuint):void

glTexCoordP3uiv(type:GLenum, coords:const_GLuint_p:nil):void

glTexCoordP4ui(type:GLenum, coords:GLuint):void

glTexCoordP4uiv(type:GLenum, coords:const_GLuint_p:nil):void

glVertexAttribP1ui(index:GLuint, type:GLenum, normalized:GLboolean, value:GLuint):void

glVertexAttribP1uiv(index:GLuint, type:GLenum, normalized:GLboolean, value:const_GLuint_p:nil):void

glVertexAttribP2ui(index:GLuint, type:GLenum, normalized:GLboolean, value:GLuint):void

glVertexAttribP2uiv(index:GLuint, type:GLenum, normalized:GLboolean, value:const_GLuint_p:nil):void

glVertexAttribP3ui(index:GLuint, type:GLenum, normalized:GLboolean, value:GLuint):void

glVertexAttribP3uiv(index:GLuint, type:GLenum, normalized:GLboolean, value:const_GLuint_p:nil):void

glVertexAttribP4ui(index:GLuint, type:GLenum, normalized:GLboolean, value:GLuint):void

glVertexAttribP4uiv(index:GLuint, type:GLenum, normalized:GLboolean, value:const_GLuint_p:nil):void

glVertexP2ui(type:GLenum, value:GLuint):void

glVertexP2uiv(type:GLenum, value:const_GLuint_p:nil):void

glVertexP3ui(type:GLenum, value:GLuint):void

glVertexP3uiv(type:GLenum, value:const_GLuint_p:nil):void

glVertexP4ui(type:GLenum, value:GLuint):void

glVertexP4uiv(type:GLenum, value:const_GLuint_p:nil):void

//======== GL_ARB_viewport_array ========

glDepthRangeArrayv(first:GLuint, count:GLsizei, v:const_GLclampd_p:nil):void

glDepthRangeIndexed(index:GLuint, n:GLclampd, f:GLclampd):void

glGetDoublei_v(target:GLenum, index:GLuint, data:GLdouble_p:nil):void

glGetFloati_v(target:GLenum, index:GLuint, data:GLfloat_p:nil):void

glScissorArrayv(first:GLuint, count:GLsizei, v:const_GLint_p:nil):void

glScissorIndexed(index:GLuint, left:GLint, bottom:GLint, width:GLsizei, height:GLsizei):void

glScissorIndexedv(index:GLuint, v:const_GLint_p:nil):void

glViewportArrayv(first:GLuint, count:GLsizei, v:const_GLfloat_p:nil):void

glViewportIndexedf(index:GLuint, x:GLfloat, y:GLfloat, w:GLfloat, h:GLfloat):void

glViewportIndexedfv(index:GLuint, v:const_GLfloat_p:nil):void

//======== GL_ARB_window_pos ========

glWindowPos2dARB(x:GLdouble, y:GLdouble):void

glWindowPos2dvARB(p:const_GLdouble_p:nil):void

glWindowPos2fARB(x:GLfloat, y:GLfloat):void

glWindowPos2fvARB(p:const_GLfloat_p:nil):void

glWindowPos2iARB(x:GLint, y:GLint):void

glWindowPos2ivARB(p:const_GLint_p:nil):void

glWindowPos2sARB(x:GLshort, y:GLshort):void

glWindowPos2svARB(p:const_GLshort_p:nil):void

glWindowPos3dARB(x:GLdouble, y:GLdouble, z:GLdouble):void

glWindowPos3dvARB(p:const_GLdouble_p:nil):void

glWindowPos3fARB(x:GLfloat, y:GLfloat, z:GLfloat):void

glWindowPos3fvARB(p:const_GLfloat_p:nil):void

glWindowPos3iARB(x:GLint, y:GLint, z:GLint):void

glWindowPos3ivARB(p:const_GLint_p:nil):void

glWindowPos3sARB(x:GLshort, y:GLshort, z:GLshort):void

glWindowPos3svARB(p:const_GLshort_p:nil):void

}

tR'''
//==============================================================================
// Functions.cpp
//==============================================================================
#include "stdafx.h"

Gurax_BeginModuleScope(opengl)

${r.ComposeImplementation()}

void AssignFunctions(Frame& frame)
{
	${r.ComposeAssignment('frame.')}
}

Gurax_EndModuleScope(opengl)
'''.Render('Functions.cpp')
