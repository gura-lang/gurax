//==============================================================================
// Expr.cpp
//==============================================================================
#include "stdafx.h"

namespace Gurax {

//------------------------------------------------------------------------------
// Expr
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// ExprList
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// ExprOwner
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Expr_Unary
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Unary::typeInfo;

//------------------------------------------------------------------------------
// Expr_Binary
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Binary::typeInfo;

//------------------------------------------------------------------------------
// Expr_Container
//------------------------------------------------------------------------------
void Expr_Container::AddChild(Expr* pExpr)
{
	pExpr->SetParent(this);
	_pExprChildren->push_back(pExpr);
}

//------------------------------------------------------------------------------
// Expr_Lister
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Lister::typeInfo;

//------------------------------------------------------------------------------
// Expr_Composite
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Composite::typeInfo;

void Expr_Composite::AddCdr(Expr* pExpr)
{
	pExpr->SetParent(this);
	_pExprCdr->push_back(pExpr);
}

//------------------------------------------------------------------------------
// Expr_Object
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Object::typeInfo;

}
