//==============================================================================
// Expr.cpp
//==============================================================================
#include "stdafx.h"

namespace Gurax {

//------------------------------------------------------------------------------
// Expr
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// ExprList
//------------------------------------------------------------------------------
void ExprList::Exec() const
{
	for (const Expr* pExpr : *this) {
		pExpr->Exec();
		if (Error::IsIssued()) return;
	}
}

//------------------------------------------------------------------------------
// ExprOwner
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Expr_Unary
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Unary::typeInfo;

void Expr_Unary::Exec() const
{
}

//------------------------------------------------------------------------------
// Expr_Binary
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Binary::typeInfo;

void Expr_Binary::Exec() const
{
}

//------------------------------------------------------------------------------
// Expr_Container
//------------------------------------------------------------------------------
void Expr_Container::AddChild(Expr* pExpr)
{
	pExpr->SetParent(this);
	_pExprChildren->push_back(pExpr);
}

//------------------------------------------------------------------------------
// Expr_Block
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Block::typeInfo;

void Expr_Block::Exec() const
{
}

//------------------------------------------------------------------------------
// Expr_Lister
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Lister::typeInfo;

void Expr_Lister::Exec() const
{
}

//------------------------------------------------------------------------------
// Expr_Composite
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Composite::typeInfo;

void Expr_Composite::AddCdr(Expr* pExpr)
{
	pExpr->SetParent(this);
	_pExprCdrs->push_back(pExpr);
}

void Expr_Composite::Exec() const
{
}

//------------------------------------------------------------------------------
// Expr_Object
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Object::typeInfo;

void Expr_Object::Exec() const
{
}

//------------------------------------------------------------------------------
// Expr_Identifier
//------------------------------------------------------------------------------
const Expr::TypeInfo Expr_Identifier::typeInfo;

void Expr_Identifier::Exec() const
{
}

}
