#!/usr/bin/env gurax
//==============================================================================
// util.tester.gura
//==============================================================================
TestCase(title:String):void:dynamicScope {`block?} = scope {
	Printf('======== %s ========\n', title)
	block && block.Eval()
}

Tester(expr:Expr, arg%%):void:dynamicScope:map:[quote] {block?} = {
	Printf('%s ..', expr.ToString())
	try {
		rtn = expr.Eval()
		rtnStr = rtn.ToString():symbolQuoted:nilVisible
		if (arg.IsSet(`quote)) { rtnStr = rtnStr.Enquote():auto }
		Printf(cond(rtnStr.Find('\n'), '\n%s\n', ' %s\n'), rtnStr):noMap
		block && block(rtn)
	} catch {|e|
		Printf(' %s\n', e.text)
	}
}
