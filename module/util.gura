#!/usr/bin/env gurax
//==============================================================================
// util.gura
//==============================================================================
Expr.PrintPUnit(stream:Stream = sys.cout):void = {
	seqIdOffset = nil
	this.EachPUnit {|punit|
		seqIdOffset = seqIdOffset || punit.seqId
		stream.Printf('  ##%d %s\n', punit.seqId - seqIdOffset, punit.ToString(seqIdOffset))
	}
}

Expr.PrintPUnitWithLabel(stream:Stream = sys.cout):void = {
	Printf('%s\n', this)
	this.PrintPUnit(stream)
}

VType.PrintPropSlots(stream:Stream = sys.cout):void:static  = {
	propSlots = this.__EachPropSlot__():list
	maxLenSymbolName = [propSlots:*symbol:*symbolName:*len*, 16].Max()
	maxLenVTypeFullName = [propSlots:*vtype:*__fullName__:*len*, 12].Max()
	stream.Printf('%s\n', this.__fullName__)
	propSlots.Each {|propSlot|
		stream.Printf('  %s%-*s %-*s %s%s\n',
			cond(propSlot.isOfClass, '.', '#'),
			maxLenSymbolName, propSlot.symbol.symbolName,
			maxLenVTypeFullName, propSlot.vtype.__fullName__,
			['', 'R', 'W', 'R/W'][cond(propSlot.IsSet(`R), 1, 0) + cond(propSlot.IsSet(`W), 2, 0)],
			cond(propSlot.IsSet(`nil), ',nil', ''))
	}
}
