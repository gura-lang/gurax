#!/usr/bin/env gurax
Entry = struct {
	type:Symbol = `none
	longName:String = ''
	shortName:String:nil
	help:String:nil
	helpValue:String:nil
	defValue
}

Parser = class {
	entries[]:Entry = []
	Parse(argv[]:String) = {
		Println(argv)
	}
	AddParam(longName:String, shortName?:String, help?:String, helpValue?:String, defValue?:String) = {
		this.entries.Add(Entry(`param, longName, shortName, help, helpValue, defValue))
	}
	AddFlag(longName:String, shortName?:String, help?:String) = {
		this.entries.Add(Entry(`flag, longName, shortName, help, nil, false))
	}
}

Parser {|p|
	p.AddParam('value')
	p.AddFlag('flag')
	p.Parse(sys.argv)
}
