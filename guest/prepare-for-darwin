#/bin/sh
# Global variables
prefix=/usr
libdir_guest=$prefix/lib/gurax/guest
make_option=-j3

labels="onigmo libjpeg"

#---------------------------------------------------------------------------
# main
#---------------------------------------------------------------------------
function main() {
	if [ "$1" == "install" ] ; then
		mkdir -p $libdir_guest
		cp -v -a dylib/* $libdir_guest
		exit
	fi
	if [ $# -gt 0 ] ; then
		label=$1
		packages=""
		getinfo_$label
		download_packages
		clean_$label
		failed=""
		build_$label
		exit
	fi
	# Download packages
	packages=""
	for label in $labels; do
		getinfo_$label
	done
	download_packages
	# Build packages at first that are used by other packages
	failed=""
	for label in $labels; do
		build_$label
	done
	# Prints a list of package names that have occcured errors
	if [ -n "$failed" ] ; then
		echo ======================================================================
		echo Error occured:$failed
		echo ======================================================================
	fi
}

#---------------------------------------------------------------------------
# download_packages
#---------------------------------------------------------------------------
function download_packages() {
	for package in $packages; do
		echo $package
		if [ ! -f $package ]; then
			curl -O http://www.gura-lang.org/guest/$package
		fi
	done
}

#---------------------------------------------------------------------------
# setup_dylib
#---------------------------------------------------------------------------
function setup_dylib() {
	local srcdir=$1
	local dstdir=$2
	for file in $srcdir/*.dylib; do
		if [ ! -h $file ]; then
			install_name_tool -id "@executable_path/../lib/gurax/guest/`basename $file`" $file
		fi
		cp -a $file $dstdir
	done
}

#---------------------------------------------------------------------------
# Onigmo
#---------------------------------------------------------------------------
function getinfo_onigmo() {
	ver_onigmo=6.2.0
	packages="$packages onigmo-$ver_onigmo.tar.gz"
}

function clean_onigmo() {
	rm -rf onigmo-$ver_onigmo
}

function build_onigmo() {
	tar xfz onigmo-$ver_onigmo.tar.gz
	pushd onigmo-$ver_onigmo
	./configure
	make $make_option || failed="$failed onigmo"
	popd
	rm -f include/onigmo
	ln -sf ../onigmo-$ver_onigmo/ include/onigmo
	ln -sf ../onigmo-$ver_onigmo/.libs/libonigmo.a lib/libonigmo.a
}

#---------------------------------------------------------------------------
# libjpeg
#---------------------------------------------------------------------------
function getinfo_libjpeg() {
	ver_libjpeg=9d
	packages="$packages jpegsrc.v$ver_libjpeg.tar.gz"
}

function clean_libjpeg() {
	rm -rf jpegsrc.v$ver_libjpeg
	rm -rf jpeg-$ver_libjpeg
}

function build_libjpeg() {
	tar xfz jpegsrc.v$ver_libjpeg.tar.gz
	pushd jpeg-$ver_libjpeg
	./configure
	make $make_option || failed="$failed onigmo"
	popd
	rm -f include/libjpeg
	ln -sf ../jpeg-$ver_libjpeg/ include/libjpeg
	ln -sf ../jpeg-$ver_libjpeg/.libs/libjpeg.a lib/libjpeg.a
}

main $*
